<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="93">
    <server artifactsdir="/goserver/go-artifacts" siteUrl="http://goserver.go.beamly.com:8153" secureSiteUrl="https://goserver.go.beamly.com:8154" purgeStart="5.0" purgeUpto="10.0" jobTimeout="300" agentAutoRegisterKey="zeeboxagent" webhookSecret="3251c61f-3bf4-4393-8836-aca4123ac662" commandRepositoryLocation="default" serverId="a3367882-3a66-46f8-a5df-0b8c9ae44561">
        <elastic>
            <profiles>
                <profile id="ecs-agent-packer" pluginId="com.thoughtworks.gocd.elastic-agent.ecs">
                    <property>
                        <key>Image</key>
                        <value>440474553311.dkr.ecr.us-east-1.amazonaws.com/ops-gocd-win-packer-agent:latest</value>
                    </property>
                    <property>
                        <key>Command</key>
                        <value />
                    </property>
                    <property>
                        <key>Environment</key>
                        <value />
                    </property>
                    <property>
                        <key>MaxMemory</key>
                        <value>1g</value>
                    </property>
                    <property>
                        <key>ReservedMemory</key>
                        <value>512m</value>
                    </property>
                    <property>
                        <key>AMI</key>
                        <value />
                    </property>
                    <property>
                        <key>InstanceType</key>
                        <value />
                    </property>
                    <property>
                        <key>SubnetIds</key>
                        <value />
                    </property>
                    <property>
                        <key>SecurityGroupIds</key>
                        <value />
                    </property>
                    <property>
                        <key>IAMInstanceProfile</key>
                        <value />
                    </property>
                </profile>
                <profile id="ecs-agent-python" pluginId="com.thoughtworks.gocd.elastic-agent.ecs">
                    <property>
                        <key>Image</key>
                        <value>440474553311.dkr.ecr.us-east-1.amazonaws.com/ops-gocd-python-agent:latest</value>
                    </property>
                    <property>
                        <key>Command</key>
                        <value />
                    </property>
                    <property>
                        <key>Environment</key>
                        <value />
                    </property>
                    <property>
                        <key>MaxMemory</key>
                        <value>1g</value>
                    </property>
                    <property>
                        <key>ReservedMemory</key>
                        <value>512m</value>
                    </property>
                    <property>
                        <key>AMI</key>
                        <value />
                    </property>
                    <property>
                        <key>InstanceType</key>
                        <value />
                    </property>
                    <property>
                        <key>SubnetIds</key>
                        <value />
                    </property>
                    <property>
                        <key>SecurityGroupIds</key>
                        <value />
                    </property>
                    <property>
                        <key>IAMInstanceProfile</key>
                        <value />
                    </property>
                </profile>
                <profile id="ecs-agent-terraform" pluginId="com.thoughtworks.gocd.elastic-agent.ecs">
                    <property>
                        <key>Image</key>
                        <value>440474553311.dkr.ecr.us-east-1.amazonaws.com/ops-gocd-terraform-agent:latest</value>
                    </property>
                    <property>
                        <key>Command</key>
                        <value />
                    </property>
                    <property>
                        <key>Environment</key>
                        <value />
                    </property>
                    <property>
                        <key>MaxMemory</key>
                        <value>1g</value>
                    </property>
                    <property>
                        <key>ReservedMemory</key>
                        <value>512m</value>
                    </property>
                    <property>
                        <key>AMI</key>
                        <value />
                    </property>
                    <property>
                        <key>InstanceType</key>
                        <value />
                    </property>
                    <property>
                        <key>SubnetIds</key>
                        <value />
                    </property>
                    <property>
                        <key>SecurityGroupIds</key>
                        <value />
                    </property>
                    <property>
                        <key>IAMInstanceProfile</key>
                        <value />
                    </property>
                </profile>
                <profile id="ecs-agent-golang" pluginId="com.thoughtworks.gocd.elastic-agent.ecs">
                    <property>
                        <key>Image</key>
                        <value>440474553311.dkr.ecr.us-east-1.amazonaws.com/ops-gocd-golang-agent:latest</value>
                    </property>
                    <property>
                        <key>Command</key>
                        <value />
                    </property>
                    <property>
                        <key>Environment</key>
                        <value />
                    </property>
                    <property>
                        <key>MaxMemory</key>
                        <value>512m</value>
                    </property>
                    <property>
                        <key>ReservedMemory</key>
                        <value>1g</value>
                    </property>
                    <property>
                        <key>AMI</key>
                        <value />
                    </property>
                    <property>
                        <key>InstanceType</key>
                        <value />
                    </property>
                    <property>
                        <key>SubnetIds</key>
                        <value />
                    </property>
                    <property>
                        <key>SecurityGroupIds</key>
                        <value />
                    </property>
                    <property>
                        <key>IAMInstanceProfile</key>
                        <value />
                    </property>
                </profile>
            </profiles>
        </elastic>
        <security>
            <authConfigs>
                <authConfig id="b0d4c200-e85d-4e54-a951-2ef0a78231fa" pluginId="cd.go.authentication.ldap">
                    <property>
                        <key>Url</key>
                        <value>ldaps://ldap.beamly.com</value>
                    </property>
                    <property>
                        <key>ManagerDN</key>
                        <value>uid=authenticate,ou=system,dc=beamly,dc=internal</value>
                    </property>
                    <property>
                        <key>SearchBases</key>
                        <value>ou=users,dc=beamly,dc=internal</value>
                    </property>
                    <property>
                        <key>UserLoginFilter</key>
                        <value>(uid={0})</value>
                    </property>
                    <property>
                        <key>Password</key>
                        <encryptedValue>FZSWQ5bupHY=</encryptedValue>
                    </property>
                </authConfig>
                <authConfig id="973a5fba-3158-4716-86ab-636d3ba8462e" pluginId="cd.go.authentication.passwordfile">
                    <property>
                        <key>PasswordFilePath</key>
                        <value>/etc/go/go.passwd</value>
                    </property>
                </authConfig>
            </authConfigs>
            <roles>
                <role name="standard">
                    <users>
                        <user>zeebox</user>
                    </users>
                </role>
                <role name="puppet">
                    <users>
                        <user>puppet</user>
                    </users>
                </role>
                <role name="superuser">
                    <users>
                        <user>social</user>
                        <user>ads</user>
                        <user>infra</user>
                        <user>glen</user>
                        <user>mcameron</user>
                        <user>neil</user>
                        <user>adrian</user>
                        <user>lotia</user>
                        <user>dnw</user>
                        <user>derekjw</user>
                        <user>chris</user>
                        <user>hughfdjackson</user>
                        <user>vik</user>
                        <user>nick</user>
                        <user>vicky</user>
                        <user>markk</user>
                        <user>vmunier</user>
                        <user>markpoynton</user>
                        <user>gus</user>
                        <user>benvan</user>
                        <user>jonathan</user>
                        <user>mark</user>
                        <user>sarah.hayman</user>
                        <user>luis.ramos</user>
                        <user>dan.massie</user>
                        <user>giancarlo</user>
                        <user>emma.burrows</user>
                        <user>vasco.figueira</user>
                        <user>morten</user>
                        <user>paul.maddern</user>
                        <user>oliver.monk</user>
                        <user>emerey.dsylva</user>
                        <user>adamos.loizou</user>
                        <user>mariano.barcia</user>
                        <user>przemyslaw.adamczewski</user>
                        <user>carlos.gutierrez</user>
                        <user>drew.sonne</user>
                    </users>
                </role>
                <role name="zeebox" />
                <role name="hypermedia">
                    <users>
                        <user>adamos.loizou</user>
                    </users>
                </role>
            </roles>
            <admins>
                <user>social</user>
                <user>caa</user>
                <user>cia</user>
                <user>cwa</user>
                <user>data</user>
                <user>mc</user>
                <user>metadata</user>
                <user>context</user>
                <user>infra</user>
                <user>ads</user>
                <user>glen</user>
                <user>mcameron</user>
                <user>josh</user>
                <user>adrian</user>
                <user>neil</user>
                <user>dnw</user>
                <user>lotia</user>
                <user>derekjw</user>
                <user>chris</user>
                <user>joel</user>
                <user>vik</user>
                <user>nick</user>
                <user>hughfdjackson</user>
                <user>vicky</user>
                <user>kerry</user>
                <user>vmunier</user>
                <user>markpoynton</user>
                <user>gus</user>
                <user>dan</user>
                <user>benvan</user>
                <user>tahir</user>
                <user>jonathan</user>
                <user>notifications</user>
                <user>mark</user>
                <user>sarah.hayman</user>
                <user>dan.massie</user>
                <user>anna</user>
                <user>luis.ramos</user>
                <user>giancarlo</user>
                <user>emma.burrows</user>
                <user>lampros.gkotsoulias</user>
                <user>stephane.schittly</user>
                <user>vasco.figueira</user>
                <user>annabladzich</user>
                <user>morten</user>
                <user>tom.hutchinson</user>
                <user>kate.montgomery</user>
                <user>markk</user>
                <user>paul.maddern</user>
                <user>oliver.monk</user>
                <user>emerey.dsylva</user>
                <user>adamos.loizou</user>
                <user>mariano.barcia</user>
                <user>dave.wilkinson</user>
                <user>nathan.richards</user>
                <user>przemyslaw.adamczewski</user>
                <user>liliana.kastilio</user>
                <user>keith.cirkel</user>
                <user>james.condron</user>
                <user>carlos.gutierrez</user>
                <user>drew.sonne</user>
                <user>keith.hall</user>
                <user>jamie.hutber</user>
            </admins>
        </security>
        <mailhost hostname="localhost" port="25" tls="false" from="noreply@beamly.com" admin="platform@beamly.com" />
    </server>
    <repositories>
        <repository id="a5c65ecf-c7a8-4ace-9dc8-1a775e7c6cdb" name="npm">
            <pluginConfiguration id="npm" version="1" />
            <configuration>
                <property>
                    <key>REPO_URL</key>
                    <value>http://us-east-1.nexus.beamly.com:8081/nexus/content/repositories/npm-all/</value>
                </property>
            </configuration>
            <packages>
                <package id="2c3118ed-761b-4b8b-896c-bb92d7df8cd7" name="gulp-standard-tasks">
                    <configuration>
                        <property>
                            <key>PACKAGE_ID</key>
                            <value>gulp-standard-tasks</value>
                        </property>
                    </configuration>
                </package>
            </packages>
        </repository>
    </repositories>
    <scms>
        <scm id="beamly-eddy-build-pr-1" name="beamly-eddy-build-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/eddy.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="5302388c-91fa-47c6-8bdf-e835384c33eb" name="github.com_zeebox_beamlybooster_ssh">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/BeamlyBooster.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="4ac34ecb-9358-4a66-b8b3-6f7a6b6e8159" name="github.com_zeebox_node-beamly-clients_ssh">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/node-beamly-clients.git</value>
                </property>
                <property>
                    <key>username</key>
                    <value>vasco.figueira</value>
                </property>
                <property>
                    <key>password</key>
                    <encryptedValue>cNlhVjG85Rcy4gYuI/yDvg==</encryptedValue>
                </property>
            </configuration>
        </scm>
        <scm id="33f399a7-b082-4dfa-91a1-d6ee3ebf7908" name="storm-common-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/StormCommon.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="ad8a4387-17cc-431b-8a6b-41e8f2264cb3" name="trending-repo-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/StormTrendingPersistenceTopology.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="1696fa8c-276c-4fca-9e3c-342cd7674987" name="articleservice-github">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/ArticleService.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="c4b28243-0a8d-473a-88ea-77853f9606c2" name="webeventcapture-github">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/WebEventCaptureService.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="e989d4e2-5492-407b-a173-4e613d182965" name="github.com_zeebox_perf-dash_ssh">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/perf-dash.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="6ada5833-7620-44cc-b514-bfb167da9cd9" name="storm-article-topology-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/StormArticleTopology.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="f18b7ec0-1a5c-4751-b8b7-9fba633dc153" name="HiveSiphonPluginPR">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/HiveSiphonPlugin.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="66aabac3-40dc-4742-bba2-911f7396ffc7" name="github.com_zeebox_beamly-autobot_ssh">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-autobot.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="8e278c9b-8df6-4d7f-89b6-c9772758b2a4" name="zuri-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/Zuri.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="SparkKafkaContentCacheInvalidator-id" name="SparkKafkaContentCacheInvalidator-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/SparkKafkaContentCacheInvalidator.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="content-event-model-pr-id" name="content-event-model-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/content-event-model.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="a217525f-a811-4033-9559-8547a19dc60e" name="beamly_component_css_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-css.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="6f3cbdb9-00d9-4861-a693-5b97c022a4cc" name="SparkKafkaContentTransformer-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/SparkKafkaContentTransformer.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="elasticsearch-test-pr-scm-id" name="elasticsearch-test-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/elasticsearch-test.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="b9a2c68f-be26-44ad-a234-3914a25f538b" name="node-autoscaling">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/node-autoscaling.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="55146cdf-e2cf-448d-8d12-84e9ffcb7eb6" name="node-punisher">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/node-punisher.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="1b3353a4-6ae8-49e2-b0d2-a8831a561138" name="ContentService.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/ContentService.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="c11ac1eb-f1be-4876-b32f-23130fab844f" name="SparkKafkaContentESWriter-pr">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/SparkKafkaContentESWriter.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="2958fa39-22b5-4387-ac43-16fe65f89baa" name="drupal-content-events.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/drupal-content-events.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="af46f13a-6445-4079-8057-d997405958d0" name="spark-kafka-sink.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/spark-kafka-sink.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="cde7fd20-745c-4a48-8a0a-d2b49941d3bb" name="SparkLog4jFlumeLogger.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/SparkLog4jFlumeLogger.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="a30e4921-b5f6-4f23-aef7-0d74f1afe941" name="metamorpher.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/metamorpher.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="7016719f-ceaf-4c75-98d2-5f3b431c46d8" name="node-response-envelope.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/node-response-envelope.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="d06aa8d7-0171-4601-913c-e50b9a567ce5" name="CentralBrandDatabase.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/CentralBrandDatabase.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="3de1710e-d8b9-4d47-854e-e1694d0cc20c" name="drupal-kafka-event-dispatcher.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/drupal-kafka-event-dispatcher.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="693a5b00-cfe3-4569-b4e8-1176e58ca303" name="beamly_component_globalfooter_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-global-footer.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_styleguide_git" name="component_styleguide_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/component-styleguide.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_content_cards_git" name="component_content_cards_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-cards.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_carousel_git" name="component_carousel_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-carousel.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_cookiealert_git" name="component_cookiealert_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-cookie-alert.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_formvalidation_git" name="component_formvalidation_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-form-validation.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_globalheader_git" name="component_globalheader_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-global-header.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_hero_git" name="component_hero_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-hero.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_lazyloading_git" name="component_lazyloading_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-lazy-loading.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_search_git" name="component_search_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-search.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="component_toggletargetheight_git" name="component_toggletargetheight_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-toggle-target-height.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="ec9bce4b-cfcc-43b9-a74d-804bfeae5b29" name="maxfactor-site.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:cotyinc/maxfactor-site.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="8baee2f1-eaa7-4876-b37e-34e5fbf27305" name="escada-site.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:cotyinc/escada-site.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="5fe16b2b-9b4e-410a-baa5-b8f9ef262fd6" name="marcjacobs-site.git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:cotyinc/marcjacobs-site.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="66d740ef-eae6-44ac-bae8-f6879aedb49f" name="component_newsletter_signup_git">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-newsletter-signup.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="373b9100-c511-4e03-b28f-51ab5e98c18d" name="product">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/beamly-component-product.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="a4d75035-1630-4636-b496-6dbd338880d3" name="core-content-transformer">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/core-content-transformer.git</value>
                </property>
            </configuration>
        </scm>
        <scm id="1ad09b24-b223-4c45-90dc-d31aca6f9dbe" name="core-content-cache">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/core-content-cache.git</value>
                </property>
                <property>
                    <key>username</key>
                    <value>emma.burrows</value>
                </property>
                <property>
                    <key>password</key>
                    <encryptedValue>V7a+v+GZsGKin0s42tXEgg==</encryptedValue>
                </property>
            </configuration>
        </scm>
        <scm id="ef775fd3-3cf0-4fc5-8338-432c32d42f91" name="core-content-writer">
            <pluginConfiguration id="github.pr" version="1" />
            <configuration>
                <property>
                    <key>url</key>
                    <value>git@github.com:zeebox/core-content-writer.git</value>
                </property>
                <property>
                    <key>username</key>
                    <value>emma.burrows</value>
                </property>
                <property>
                    <key>password</key>
                    <encryptedValue>V7a+v+GZsGKin0s42tXEgg==</encryptedValue>
                </property>
            </configuration>
        </scm>
    </scms>
    <config-repos>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/go-agent-win.git" />
        </config-repo>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/aws-config.git" />
        </config-repo>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/ldap.git" />
        </config-repo>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/vpn.git" />
        </config-repo>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/gocd-pipelines.git" />
        </config-repo>
        <config-repo plugin="yaml.config.plugin">
            <git url="git@github.com:zeebox/omnomnomniture.git" />
        </config-repo>
    </config-repos>
    <pipelines group="webhop-ringleader">
        <pipeline name="ringleader-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringleader.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ringleader-webhop-1.x-bake" labeltemplate="${RINGLEADER_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">ringleader</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_RINGLEADER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ringleader.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringleader.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="ringleader-1.x-release" stageName="build_release" materialName="ringleader_release" />
            </materials>
        </pipeline>
        <pipeline name="ringleader-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${RINGLEADER_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">ringleader</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RINGLEADER_BAKE}</param>
                <param name="smoke_tests_file">../ringleader/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">ringleader</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ringleader</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringleader.git" dest="ringleader">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="ringleader-webhop-1.x-bake" stageName="build" materialName="ringleader_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ringleader-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${RINGLEADER_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">ringleader</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RINGLEADER_BAKE}</param>
                <param name="smoke_tests_file">../ringleader/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">ringleader</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ringleader</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringleader.git" dest="ringleader">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="ringleader-webhop-1.x-bake" stageName="build" materialName="ringleader_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ringleader-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="ringleader-deploy-stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-smokay">
        <pipeline name="smokay-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/smokay.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="smokay-webhop-1.x-bake" labeltemplate="${SMOKAY_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">smokay</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_SMOKAY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/smokay.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/smokay.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="smokay-1.x-release" stageName="build_release" materialName="smokay_release" />
            </materials>
        </pipeline>
        <pipeline name="smokay-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${SMOKAY_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">smokay</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SMOKAY_BAKE}</param>
                <param name="smoke_tests_file">../smokay/testdata/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">smokay</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/smokay</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/smokay.git" dest="smokay">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="smokay-webhop-1.x-bake" stageName="build" materialName="smokay_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="smokay-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${SMOKAY_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">smokay</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SMOKAY_BAKE}</param>
                <param name="smoke_tests_file">../smokay/testdata/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">smokay</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/smokay</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/smokay.git" dest="smokay">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="smokay-webhop-1.x-bake" stageName="build" materialName="smokay_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="smokay-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="smokay-deploy-stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-omnomnomniture">
        <pipeline name="omnomnomniture-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/omnomnomniture.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="omnomnomniture-webhop-1.x-bake" labeltemplate="${OMNOMNOMNITURE_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">omnomnomniture</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_OMNOMNOMNITURE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/omnomnomniture.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami1604</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/omnomnomniture.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-2.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="omnomnomniture-1.x-release" stageName="build_release" materialName="omnomnomniture_release" />
            </materials>
        </pipeline>
        <pipeline name="omnomnomniture-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${OMNOMNOMNITURE_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">omnomnomniture</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_OMNOMNOMNITURE_BAKE}</param>
                <param name="smoke_tests_file">../omnomnomniture/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">omnomnomniture</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/omnomnomniture</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/omnomnomniture.git" branch="webhop-orchecrapstration" dest="omnomnomniture">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="omnomnomniture-webhop-1.x-bake" stageName="build" materialName="omnomnomniture_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="omnomnomniture-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${OMNOMNOMNITURE_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">omnomnomniture</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_OMNOMNOMNITURE_BAKE}</param>
                <param name="smoke_tests_file">../omnomnomniture/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">omnomnomniture</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/omnomnomniture</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/omnomnomniture.git" dest="omnomnomniture">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="omnomnomniture-webhop-1.x-bake" stageName="build" materialName="omnomnomniture_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="omnomnomniture-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="omnomnomniture-deploy-stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-scorodesk">
        <pipeline name="scorodesk-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scorodesk.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="scorodesk-webhop-1.x-bake" labeltemplate="${SCORODESK_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">scorodesk</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_SCORODESK_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/scorodesk.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scorodesk.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="scorodesk-1.x-release" stageName="build_release" materialName="scorodesk_release" />
            </materials>
        </pipeline>
        <pipeline name="scorodesk-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${SCORODESK_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">scorodesk</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SCORODESK_BAKE}</param>
                <param name="smoke_tests_file">../scorodesk/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">scorodesk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/scorodesk</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scorodesk.git" dest="scorodesk">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="scorodesk-webhop-1.x-bake" stageName="build" materialName="scorodesk_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="scorodesk-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${SCORODESK_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">scorodesk</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SCORODESK_BAKE}</param>
                <param name="smoke_tests_file">../scorodesk/tests/smoke_tests.json</param>
                <param name="release_notes" />
                <param name="reponame">scorodesk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/scorodesk</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scorodesk.git" dest="scorodesk">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="scorodesk-webhop-1.x-bake" stageName="build" materialName="scorodesk_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="scorodesk-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="scorodesk-deploy-stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2rimmellondonsite">
        <pipeline name="cc2rimmellondonsite-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-bake" labeltemplate="${CC2RIMMELLONDONSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2rimmellondonsite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/rimmellondon-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-release" stageName="build_release" materialName="cc2rimmellondonsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-assetupload-stage" labeltemplate="${CC2RIMMELLONDONSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-release" stageName="build_release" materialName="cc2rimmellondonsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-release" stageName="build_release" materialName="cc2rimmellondonsite_release" />
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2RIMMELLONDONSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2rimmellondonsite</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2rimmellondon-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2rimmellondon-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/rimmellondon-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="cc2rimmellondon-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-bake" stageName="build" materialName="cc2rimmellondonsite_bake" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-assetupload-live" labeltemplate="${CC2RIMMELLONDONSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-release" stageName="build_release" materialName="cc2rimmellondonsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-release" stageName="build_release" materialName="cc2rimmellondonsite_release" />
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2RIMMELLONDONSITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2rimmellondonsite</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2rimmellondon-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2rimmellondon-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/rimmellondon-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="cc2rimmellondon-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-bake" stageName="build" materialName="cc2rimmellondonsite_bake" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2rimmellondonsite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/rimmellondon-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondonsite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondonsite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2rimmellondondrupal">
        <pipeline name="cc2rimmellondondrupal-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cc2rimmellondondrupal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-bake" labeltemplate="${CC2RIMMELLONDONDRUPAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2rimmellondondrupal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONDRUPAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/rimmellondon-drupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-release" stageName="build_release" materialName="cc2rimmellondondrupal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2RIMMELLONDONDRUPAL_BAKE}" template="auto-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2rimmellondon-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2rimmellondon-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/rimmellondon-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git" dest="cc2rimmellondon-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-bake" stageName="build" materialName="cc2rimmellondondrupal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">admin-cc2rimmellondon-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2RIMMELLONDONDRUPAL_BAKE}" template="manual-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2RIMMELLONDONDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2rimmellondon-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2rimmellondon-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/rimmellondon-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git" dest="cc2rimmellondon-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-bake" stageName="build" materialName="cc2rimmellondondrupal_bake" />
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2rimmellondondrupal-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2rimmellondondrupal</param>
                <param name="brand">cc2rimmellondon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">admin.rimmellondon.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2rimmellondondrupal-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/rimmellondon-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2sallyhansensite">
        <pipeline name="cc2sallyhansensite-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-bake" labeltemplate="${CC2SALLYHANSENSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2sallyhansensite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/sallyhansen-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-release" stageName="build_release" materialName="cc2sallyhansensite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-assetupload-stage" labeltemplate="${CC2SALLYHANSENSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-release" stageName="build_release" materialName="cc2sallyhansensite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-release" stageName="build_release" materialName="cc2sallyhansensite_release" />
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2SALLYHANSENSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2sallyhansensite</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2sallyhansen-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2sallyhansen-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sallyhansen-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="cc2sallyhansen-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-bake" stageName="build" materialName="cc2sallyhansensite_bake" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-assetupload-live" labeltemplate="${CC2SALLYHANSENSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-release" stageName="build_release" materialName="cc2sallyhansensite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-release" stageName="build_release" materialName="cc2sallyhansensite_release" />
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2SALLYHANSENSITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2sallyhansensite</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2sallyhansen-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2sallyhansen-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sallyhansen-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="cc2sallyhansen-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-bake" stageName="build" materialName="cc2sallyhansensite_bake" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2sallyhansensite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/sallyhansen-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansensite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansensite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2sallyhansendrupal">
        <pipeline name="cc2sallyhansendrupal-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cc2sallyhansendrupal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-bake" labeltemplate="${CC2SALLYHANSENDRUPAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2sallyhansendrupal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENDRUPAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/sallyhansen-drupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-release" stageName="build_release" materialName="cc2sallyhansendrupal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2SALLYHANSENDRUPAL_BAKE}" template="auto-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2sallyhansen-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2sallyhansen-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sallyhansen-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git" dest="cc2sallyhansen-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-bake" stageName="build" materialName="cc2sallyhansendrupal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">admin-cc2sallyhansen-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2SALLYHANSENDRUPAL_BAKE}" template="manual-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2SALLYHANSENDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2sallyhansen-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2sallyhansen-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sallyhansen-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git" dest="cc2sallyhansen-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-bake" stageName="build" materialName="cc2sallyhansendrupal_bake" />
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansendrupal-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2sallyhansendrupal</param>
                <param name="brand">cc2sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">admin.cc2sallyhansen.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2sallyhansendrupal-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/sallyhansen-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2covergirlsite">
        <pipeline name="cc2covergirlsite-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-bake" labeltemplate="${CC2COVERGIRLSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2covergirlsite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/covergirl-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2covergirlsite-1.x-release" stageName="build_release" materialName="cc2covergirlsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-assetupload-stage" labeltemplate="${CC2COVERGIRLSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-release" stageName="build_release" materialName="cc2covergirlsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-release" stageName="build_release" materialName="cc2covergirlsite_release" />
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2COVERGIRLSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2covergirlsite</param>
                <param name="brand">cc2covergirl</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2covergirl-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2covergirl-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="cc2covergirl-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-bake" stageName="build" materialName="cc2covergirlsite_bake" />
                <pipeline pipelineName="cc2covergirlsite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2covergirlsite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-assetupload-live" labeltemplate="${CC2COVERGIRLSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-release" stageName="build_release" materialName="cc2covergirlsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-release" stageName="build_release" materialName="cc2covergirlsite_release" />
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2COVERGIRLSITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2covergirlsite</param>
                <param name="brand">cc2covergirl</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2covergirl-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2covergirl-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="cc2covergirl-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-bake" stageName="build" materialName="cc2covergirlsite_bake" />
                <pipeline pipelineName="cc2covergirlsite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2covergirlsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2covergirlsite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/covergirl-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirlsite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirlsite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2covergirldrupal">
        <pipeline name="cc2covergirldrupal-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cc2covergirldrupal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-bake" labeltemplate="${CC2COVERGIRLDRUPAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2covergirldrupal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLDRUPAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/covergirl-drupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cc2covergirldrupal-1.x-release" stageName="build_release" materialName="cc2covergirldrupal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2COVERGIRLDRUPAL_BAKE}" template="auto-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2covergirl-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2covergirl-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-drupal.git" dest="cc2covergirl-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-bake" stageName="build" materialName="cc2covergirldrupal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">admin-covergirl-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/covergirl-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2COVERGIRLDRUPAL_BAKE}" template="manual-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2COVERGIRLDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2covergirl-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2covergirl-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-drupal.git" dest="cc2covergirl-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-bake" stageName="build" materialName="cc2covergirldrupal_bake" />
                <pipeline pipelineName="cc2covergirldrupal-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2covergirldrupal-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2covergirldrupal</param>
                <param name="brand">cc2covergirl</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">admin.covergirl.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2covergirldrupal-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/covergirl-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2marcjacobssite">
        <pipeline name="cc2marcjacobssite-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-bake" labeltemplate="${CC2MARCJACOBSSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2marcjacobssite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2MARCJACOBSSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/marcjacobs-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-release" stageName="build_release" materialName="cc2marcjacobssite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-assetupload-stage" labeltemplate="${CC2MARCJACOBSSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-release" stageName="build_release" materialName="cc2marcjacobssite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-release" stageName="build_release" materialName="cc2marcjacobssite_release" />
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2MARCJACOBSSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2marcjacobssite</param>
                <param name="brand">cc2marcjacobs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MARCJACOBSSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2marcjacobs-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2marcjacobs-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/marcjacobs-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="cc2marcjacobs-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-bake" stageName="build" materialName="cc2marcjacobssite_bake" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-assetupload-live" labeltemplate="${CC2MARCJACOBSSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-release" stageName="build_release" materialName="cc2marcjacobssite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-release" stageName="build_release" materialName="cc2marcjacobssite_release" />
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2MARCJACOBSSITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2marcjacobssite</param>
                <param name="brand">cc2marcjacobs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MARCJACOBSSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2marcjacobs-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2marcjacobs-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/marcjacobs-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="cc2marcjacobs-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-bake" stageName="build" materialName="cc2marcjacobssite_bake" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2marcjacobssite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/marcjacobs-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marcjacobs-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2marcjacobssite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2maxfactorsite">
        <pipeline name="cc2maxfactorsite-1.x-release" labeltemplate="1.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-bake" labeltemplate="${CC2MAXFACTORSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2maxfactorsite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/maxfactor-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-release" stageName="build_release" materialName="cc2maxfactorsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-assetupload-stage" labeltemplate="${CC2MAXFACTORSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-release" stageName="build_release" materialName="cc2maxfactorsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-release" stageName="build_release" materialName="cc2maxfactorsite_release" />
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2MAXFACTORSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2maxfactorsite</param>
                <param name="brand">cc2maxfactor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2maxfactor-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2maxfactor-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/maxfactor-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="cc2maxfactor-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-bake" stageName="build" materialName="cc2maxfactorsite_bake" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <environmentvariables>
                <variable name="API_URL">
                    <value>https://api-coty-com.staging.ointernal.net</value>
                </variable>
                <variable name="API_ACCESS_TOKEN" secure="true">
                    <encryptedValue>ZbE24nvK1/56ncJpVnJkHTDACW0sexcB9MOhSIdRwebaT/e7BFxez4DE93HwwzmQ0Max4yWelsOC2O7ZRi6HGQ==</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-assetupload-live" labeltemplate="${CC2MAXFACTORSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-release" stageName="build_release" materialName="cc2maxfactorsite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-release" stageName="build_release" materialName="cc2maxfactorsite_release" />
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2MAXFACTORSITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2maxfactorsite</param>
                <param name="brand">cc2maxfactor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORSITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2maxfactor-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2maxfactor-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/maxfactor-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="cc2maxfactor-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-bake" stageName="build" materialName="cc2maxfactorsite_bake" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2maxfactorsite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/maxfactor-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactorsite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <environmentvariables>
                <variable name="API_URL">
                    <value>https://api.coty.com</value>
                </variable>
                <variable name="API_ACCESS_TOKEN" secure="true">
                    <encryptedValue>WatA2ShHzE3vkocCIvXlf9vEVPQp7mqK7jfJlD7sahtHVQEc+4mmjvRSzVMUbcbFEH/YSHbD4uuZ8C/WB1S2sA==</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactorsite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2maxfactordrupal">
        <pipeline name="cc2maxfactordrupal-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cc2maxfactordrupal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-bake" labeltemplate="${CC2MAXFACTORDRUPAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2maxfactordrupal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORDRUPAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/maxfactor-drupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cc2maxfactordrupal-1.x-release" stageName="build_release" materialName="cc2maxfactordrupal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2MAXFACTORDRUPAL_BAKE}" template="auto-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2maxfactor-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2maxfactor-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/maxfactor-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-drupal.git" dest="cc2maxfactor-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-bake" stageName="build" materialName="cc2maxfactordrupal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">admin-maxfactor-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/maxfactor-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2MAXFACTORDRUPAL_BAKE}" template="manual-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2MAXFACTORDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2maxfactor-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2maxfactor-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/maxfactor-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/maxfactor-drupal.git" dest="cc2maxfactor-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-bake" stageName="build" materialName="cc2maxfactordrupal_bake" />
                <pipeline pipelineName="cc2maxfactordrupal-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2maxfactordrupal-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2maxfactordrupal</param>
                <param name="brand">cc2maxfactor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">admin.maxfactor.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2maxfactordrupal-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/maxfactor-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2escadasite">
        <pipeline name="cc2escadasite-1.x-release" labeltemplate="1.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
                <pipeline pipelineName="beamly-content-client-3.x-release" stageName="build_release" materialName="beamly_content_client" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-bake" labeltemplate="${CC2ESCADASITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2escadasite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2ESCADASITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/escada-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2escadasite-1.x-release" stageName="build_release" materialName="cc2escadasite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-assetupload-stage" labeltemplate="${CC2ESCADASITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-release" stageName="build_release" materialName="cc2escadasite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-pre-release-cdn-validate-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-release" stageName="build_release" materialName="cc2escadasite_release" />
                <git url="git@github.com:cotyinc/escada-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2ESCADASITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2escadasite</param>
                <param name="brand">cc2escada</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2ESCADASITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2escada-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2escada-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/escada-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git" dest="cc2escada-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-bake" stageName="build" materialName="cc2escadasite_bake" />
                <pipeline pipelineName="cc2escadasite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="cc2escadasite-1.x-pre-release-cdn-validate-stage" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/escada-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-assetupload-live" labeltemplate="${CC2ESCADASITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-release" stageName="build_release" materialName="cc2escadasite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-pre-release-cdn-validate-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">yes</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-release" stageName="build_release" materialName="cc2escadasite_release" />
                <git url="git@github.com:cotyinc/escada-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CC2ESCADASITE_BAKE}" template="manual-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2escadasite</param>
                <param name="brand">cc2escada</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2ESCADASITE_BAKE}</param>
                <param name="smoke_tests_file">../cc2escada-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2escada-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/escada-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git" dest="cc2escada-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-bake" stageName="build" materialName="cc2escadasite_bake" />
                <pipeline pipelineName="cc2escadasite-1.x-assetupload-live" stageName="stage" />
                <pipeline pipelineName="cc2escadasite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="cc2escadasite-1.x-pre-release-cdn-validate-live" stageName="cdn-update" materialName="cdn_validate" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-cc2.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-utils.git" shallowClone="true" invertFilter="true" dest="core-content-utils" materialName="core-content-utils">
                    <filter>
                        <ignore pattern="deploy/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-post-release-cdn-update-live" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path">../component/cdn/base-config.yml</param>
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/escada-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-1.x-post-release-acceptance-tests-live" template="acceptance-tests">
            <params>
                <param name="test_profile">live_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/escada-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2escadasite-1.x-post-release-cdn-update-live" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="sre-interview">
        <pipeline name="foo-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">troubleshooting/foo/scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
            </materials>
        </pipeline>
        <pipeline name="foo-service-1.x-bake" labeltemplate="foo-${FOO_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">foo.yml</param>
                <param name="component_name">foo</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_FOO_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/sre-interview.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git" invertFilter="true">
                    <filter>
                        <ignore pattern="troubleshooting/foo" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="foo-service-1.x-release" stageName="build_release" materialName="foo_release" />
            </materials>
        </pipeline>
        <pipeline name="ping-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">troubleshooting/ping/scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
            </materials>
        </pipeline>
        <pipeline name="ping-service-1.x-bake" labeltemplate="ping-${PING_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">ping.yml</param>
                <param name="component_name">ping</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_PING_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/sre-interview.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git" invertFilter="true">
                    <filter>
                        <ignore pattern="troubleshooting/ping" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="ping-service-1.x-release" stageName="build_release" materialName="ping_release" />
            </materials>
        </pipeline>
        <pipeline name="pong-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">troubleshooting/pong/scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
            </materials>
        </pipeline>
        <pipeline name="pong-service-1.x-bake" labeltemplate="pong-${PONG_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">pong.yml</param>
                <param name="component_name">pong</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_PONG_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/sre-interview.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sre-interview.git" invertFilter="true">
                    <filter>
                        <ignore pattern="troubleshooting/pong" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="pong-service-1.x-release" stageName="build_release" materialName="pong_release" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-bourjois">
        <pipeline name="bourjois-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh bourjois</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/bourjois.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-bake" labeltemplate="${BOURJOIS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">bourjois</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_BOURJOIS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/bourjois.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/bourjois.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="bourjois-1.x-release" stageName="build_release" materialName="bourjois_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${BOURJOIS_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BOURJOIS_BAKE}</param>
                <param name="smoke_tests_file">./bourjois/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">bourjois</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/bourjois</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/bourjois.com.git" dest="bourjois">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-bake" stageName="build" materialName="bourjois_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-bourjois-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/bourjois.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-bourjois-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${BOURJOIS_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BOURJOIS_BAKE}</param>
                <param name="smoke_tests_file">./bourjois/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">bourjois</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/bourjois</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/bourjois.com.git" dest="bourjois">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-bake" stageName="build" materialName="bourjois_bake" />
                <pipeline pipelineName="bourjois-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.bourjois.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/bourjois.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="bourjois-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">bourjois</param>
                <param name="brand">bourjois</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.bourjois.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="bourjois-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="poem">
        <pipeline name="fbpaid">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="component_deploy_script">scripts/deploy.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/fbpaid.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="ciDeploy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_deploy_script}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="fborganic">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="component_deploy_script">scripts/deploy.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/fborganic.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="ciDeploy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_deploy_script}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="fborganic-1.x-deploy-stage" labeltemplate="${UPSTREAM_RELEASE}-deploy-${COUNT}" isLocked="false" template="spark-qubole-deploy-1">
            <params>
                <param name="main_args" />
                <param name="subproject_dir" />
                <param name="project_checkout_folder">projectfolder</param>
                <param name="component_group_id">com.beamly</param>
                <param name="component_artifact_id">process_2.11</param>
                <param name="component_name">fborganic</param>
                <param name="component_reponame">fborganic</param>
                <param name="main_class">com.beamly.fborganic.process.Process</param>
                <param name="qubole_cluster">spark2</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_UPSTREAM_RELEASE}</param>
                <param name="scheduler_time_zone">Europe/London</param>
                <param name="scheduler_time_unit">days</param>
                <param name="scheduler_frequency">1</param>
                <param name="scheduler_start_time">2016-10-01T11:00Z</param>
                <param name="scheduler_end_time">2020-10-01T11:00Z</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/fborganic.git" dest="projectfolder" materialName="upstream" />
                <git url="git@github.com:zeebox/ansible-qubole-spark-deployment.git" branch="deploy-spark-scheduler" dest="ansible" materialName="ansible-qubole-spark-deployment" />
                <pipeline pipelineName="fborganic-1.X-Release" stageName="build_release" materialName="upstream_release" />
            </materials>
        </pipeline>
        <pipeline name="fborganic-1.X-Release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/fborganic.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="coreservices-drupaltest">
        <pipeline name="coreservices-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CoreServicesDrupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coreservices-1.x-bake" labeltemplate="${CORESERVICES_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">coreservices</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CORESERVICES_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/CoreServicesDrupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/CoreServicesDrupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="coreservices-1.x-release" stageName="build_release" materialName="coreservices_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="coreservices-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CORESERVICES_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coreservices</param>
                <param name="brand">coreservices</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CORESERVICES_BAKE}</param>
                <param name="smoke_tests_file">./coreservices/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coreservices</param>
                <param name="deployment_region">us-east-1</param>
                <param name="git_repo">git@github.com:zeebox/CoreServicesDrupal.git</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CoreServicesDrupal.git" dest="coreservices">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="coreservices-1.x-bake" stageName="build" materialName="coreservices_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coreservices-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CORESERVICES_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coreservices</param>
                <param name="brand">coreservices</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CORESERVICES_BAKE}</param>
                <param name="smoke_tests_file">./coreservices/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coreservices</param>
                <param name="deployment_region">us-east-1</param>
                <param name="git_repo">git@github.com:zeebox/CoreServicesDrupal.git</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CoreServicesDrupal.git" dest="coreservices">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="coreservices-1.x-bake" stageName="build" materialName="coreservices_bake" />
                <pipeline pipelineName="coreservices-1.x-deploy-stage" stageName="deploy_ami" materialName="deploy-live" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-manhattanclearface">
        <pipeline name="manhattanclearface-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh manhattanclearface</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-bake" labeltemplate="${MANHATTANCLEARFACE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">manhattanclearface</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MANHATTANCLEARFACE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:manhattan-cosmetics.4.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="manhattanclearface-1.x-release" stageName="build_release" materialName="manhattanclearface_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MANHATTANCLEARFACE_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MANHATTANCLEARFACE_BAKE}</param>
                <param name="smoke_tests_file">./manhattanclearface/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">manhattanclearface</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/manhattan-cosmetics/git-4/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git" dest="manhattanclearface">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-bake" stageName="build" materialName="manhattanclearface_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-manhattan-clearface-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-manhattan-clearface-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MANHATTANCLEARFACE_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MANHATTANCLEARFACE_BAKE}</param>
                <param name="smoke_tests_file">./manhattanclearface/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">manhattanclearface</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/manhattan-cosmetics/git-4/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git" dest="manhattanclearface">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-bake" stageName="build" materialName="manhattanclearface_bake" />
                <pipeline pipelineName="manhattanclearface-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.manhattan-clearface.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:manhattan-cosmetics.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattanclearface-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">manhattanclearface</param>
                <param name="brand">manhattanclearface</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.manhattan-clearface.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattanclearface-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-givelovegivefragrance">
        <pipeline name="givelovegivefragrance-1.x-release" labeltemplate="1.0.${COUNT}" template="release-webhop-s3-1">
            <params>
                <param name="component_build_command">scripts/build.sh givelovegivefragrance</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="go_agent_resource">v5</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-multibrand-website-holiday-2013.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/static-site-optimizer.git" dest="static-site-optimizer" />
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${GIVELOVEGIVEFRAGRANCE_RELEASE}" template="auto-deploy-webhop-s3-1">
            <params>
                <param name="component">givelovegivefragrance</param>
                <param name="version">${GO_DEPENDENCY_LABEL_GIVELOVEGIVEFRAGRANCE_RELEASE}</param>
                <param name="web_link">https://www-givelovegivefragrance-com.staging.ointernal.net/</param>
                <param name="s3_bucket">www-givelovegivefragrance-com-staging-ointernal-net</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://assembla.com/spaces/coty-multibrand-website-holiday-2013/git-3/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-multibrand-website-holiday-2013.3.git" dest="givelovegivefragrance">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-release" stageName="build_release" materialName="givelovegivefragrance_release" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">givelovegivefragrance</param>
                <param name="brand">givelovegivefragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-givelovegivefragrance-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-deploy-stage" stageName="s3_upload" materialName="stage_deploy" />
                <git url="git@git.assembla.com:coty-multibrand-website-holiday-2013.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">givelovegivefragrance</param>
                <param name="brand">givelovegivefragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-givelovegivefragrance-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${GIVELOVEGIVEFRAGRANCE_RELEASE}" template="manual-deploy-webhop-s3-1">
            <params>
                <param name="component">givelovegivefragrance</param>
                <param name="version">${GO_DEPENDENCY_LABEL_GIVELOVEGIVEFRAGRANCE_RELEASE}</param>
                <param name="web_link">https://www.givelovegivefragrance.com/</param>
                <param name="s3_bucket">www-givelovegivefragrance-com</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://assembla.com/spaces/coty-multibrand-website-holiday-2013/git-3/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-multibrand-website-holiday-2013.3.git" dest="givelovegivefragrance">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-release" stageName="build_release" materialName="givelovegivefragrance_release" />
                <pipeline pipelineName="givelovegivefragrance-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">givelovegivefragrance</param>
                <param name="brand">givelovegivefragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.givelovegivefragrance.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-deploy-live" stageName="s3_upload" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-multibrand-website-holiday-2013.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="givelovegivefragrance-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">givelovegivefragrance</param>
                <param name="brand">givelovegivefragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.givelovegivefragrance.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="givelovegivefragrance-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-coty2">
        <pipeline name="coty2-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh coty2</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/coty2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-bake" labeltemplate="${COTY2_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">coty2</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTY2_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/coty2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/coty2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="coty2-1.x-release" stageName="build_release" materialName="coty2_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTY2_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coty2</param>
                <param name="brand">coty2</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTY2_BAKE}</param>
                <param name="smoke_tests_file">./coty2/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coty2</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/coty2.git</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/coty2.git" dest="coty2">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-bake" stageName="build" materialName="coty2_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www2-coty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/coty2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www2-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www2-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTY2_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coty2</param>
                <param name="brand">coty2</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTY2_BAKE}</param>
                <param name="smoke_tests_file">./coty2/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coty2</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/coty2.git</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/coty2.git" dest="coty2" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-bake" stageName="build" materialName="coty2_bake" />
                <pipeline pipelineName="coty2-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www2.coty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/coty2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www2.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www2.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty2-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty2</param>
                <param name="brand">coty2</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www2.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 21 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty2-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 21 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=coty2 aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="coty2-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/coty2.git" materialName="coty2_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotypress">
        <pipeline name="cotypress-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cotypress</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cotypress.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-bake" labeltemplate="${COTYPRESS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cotypress</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTYPRESS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:cotypress.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:cotypress.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cotypress-1.x-release" stageName="build_release" materialName="cotypress_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYPRESS_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYPRESS_BAKE}</param>
                <param name="smoke_tests_file">./cotypress/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotypress</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://www.assembla.com/spaces/cotypress/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cotypress.2.git" dest="cotypress">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-bake" stageName="build" materialName="cotypress_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-cotypress-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@git.assembla.com:cotypress.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-cotypress-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYPRESS_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYPRESS_BAKE}</param>
                <param name="smoke_tests_file">./cotypress/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotypress</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://www.assembla.com/spaces/cotypress/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cotypress.2.git" dest="cotypress">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-bake" stageName="build" materialName="cotypress_bake" />
                <pipeline pipelineName="cotypress-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.cotypress.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@git.assembla.com:cotypress.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotypress-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotypress</param>
                <param name="brand">cotypress</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cotypress.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotypress-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-covergirlbeautyu">
        <pipeline name="covergirlbeautyu-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh covergirlbeautyu</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-beautyu.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-bake" labeltemplate="${COVERGIRLBEAUTYU_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">covergirlbeautyu</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COVERGIRLBEAUTYU_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/covergirl-beautyu.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-beautyu.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="covergirlbeautyu-1.x-release" stageName="build_release" materialName="covergirlbeautyu_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COVERGIRLBEAUTYU_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COVERGIRLBEAUTYU_BAKE}</param>
                <param name="smoke_tests_file">./covergirlbeautyu/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">covergirlbeautyu</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-beautyu</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-beautyu.git" dest="covergirlbeautyu">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-bake" stageName="build" materialName="covergirlbeautyu_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">beautyu-covergirl-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/covergirl-beautyu.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://beautyu-covergirl-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COVERGIRLBEAUTYU_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COVERGIRLBEAUTYU_BAKE}</param>
                <param name="smoke_tests_file">./covergirlbeautyu/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">covergirlbeautyu</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/covergirl-beautyu</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/covergirl-beautyu.git" dest="covergirlbeautyu">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-bake" stageName="build" materialName="covergirlbeautyu_bake" />
                <pipeline pipelineName="covergirlbeautyu-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">beautyu.covergirl.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/covergirl-beautyu.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="covergirlbeautyu-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">covergirlbeautyu</param>
                <param name="brand">covergirlbeautyu</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://beautyu.covergirl.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="covergirlbeautyu-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotyinstitute">
        <pipeline name="cotyinstitute-1.x-release" labeltemplate="1.0.${COUNT}" template="release-webhop-s3-1">
            <params>
                <param name="component_build_command">scripts/build.sh cotyinstitute</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="go_agent_resource">v5</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-migration.20.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/static-site-optimizer.git" dest="static-site-optimizer" />
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYINSTITUTE_RELEASE}" template="auto-deploy-webhop-s3-1">
            <params>
                <param name="component">cotyinstitute</param>
                <param name="version">${GO_DEPENDENCY_LABEL_COTYINSTITUTE_RELEASE}</param>
                <param name="web_link">https://www-cotyinstitute-com.staging.ointernal.net/</param>
                <param name="s3_bucket">www-cotyinstitute-com-staging-ointernal-net</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://www.assembla.com/spaces/coty-migration/git-20/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-migration.20.git" dest="cotyinstitute">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-release" stageName="build_release" materialName="cotyinstitute_release" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">cotyinstitute</param>
                <param name="brand">cotyinstitute</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-cotyinstitute-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-deploy-stage" stageName="s3_upload" materialName="stage_deploy" />
                <git url="git@git.assembla.com:coty-migration.20.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyinstitute</param>
                <param name="brand">cotyinstitute</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-cotyinstitute-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYINSTITUTE_RELEASE}" template="manual-deploy-webhop-s3-1">
            <params>
                <param name="component">cotyinstitute</param>
                <param name="version">${GO_DEPENDENCY_LABEL_COTYINSTITUTE_RELEASE}</param>
                <param name="web_link">https://www.cotyinstitute.com/</param>
                <param name="s3_bucket">www-cotyinstitute-com</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://www.assembla.com/spaces/coty-migration/git-20/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-migration.20.git" dest="cotyinstitute">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-release" stageName="build_release" materialName="cotyinstitute_release" />
                <pipeline pipelineName="cotyinstitute-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">cotyinstitute</param>
                <param name="brand">cotyinstitute</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.cotyinstitute.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-deploy-live" stageName="s3_upload" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-migration.20.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyinstitute-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyinstitute</param>
                <param name="brand">cotyinstitute</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cotyinstitute.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyinstitute-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-wellablog">
        <pipeline name="wellablog-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh wellablog</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/blog.wella.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-bake" labeltemplate="${WELLABLOG_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">wellablog</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_WELLABLOG_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/blog.wella.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/blog.wella.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="wellablog-1.x-release" stageName="build_release" materialName="wellablog_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${WELLABLOG_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_WELLABLOG_BAKE}</param>
                <param name="smoke_tests_file">./wellablog/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">wellablog</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/blog.wella.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/blog.wella.com.git" dest="wellablog">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-bake" stageName="build" materialName="wellablog_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">blog-wella-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/blog.wella.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://blog-wella-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://blog-wella-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${WELLABLOG_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_WELLABLOG_BAKE}</param>
                <param name="smoke_tests_file">./wellablog/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">wellablog</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/blog.wella.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/blog.wella.com.git" dest="wellablog" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-bake" stageName="build" materialName="wellablog_bake" />
                <pipeline pipelineName="wellablog-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">blog.wella.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/blog.wella.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://blog.wella.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://blog.wella.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellablog-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">wellablog</param>
                <param name="brand">wellablog</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://blog.wella.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 28 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellablog-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 28 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=wellablog aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="wellablog-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/blog.wella.com.git" materialName="wellablog_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-wellamarketing">
        <pipeline name="wellamarketing-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh wellamarketing</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marketing.wella.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-bake" labeltemplate="${WELLAMARKETING_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">wellamarketing</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_WELLAMARKETING_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/marketing.wella.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/marketing.wella.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="wellamarketing-1.x-release" stageName="build_release" materialName="wellamarketing_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${WELLAMARKETING_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_WELLAMARKETING_BAKE}</param>
                <param name="smoke_tests_file">./wellamarketing/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">wellamarketing</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/marketing.wella.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marketing.wella.com.git" dest="wellamarketing">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-bake" stageName="build" materialName="wellamarketing_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">marketing-wella-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/marketing.wella.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://marketing-wella-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${WELLAMARKETING_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_WELLAMARKETING_BAKE}</param>
                <param name="smoke_tests_file">./wellamarketing/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">wellamarketing</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/marketing.wella.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/marketing.wella.com.git" dest="wellamarketing">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-bake" stageName="build" materialName="wellamarketing_bake" />
                <pipeline pipelineName="wellamarketing-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">marketing.wella.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/marketing.wella.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="wellamarketing-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">wellamarketing</param>
                <param name="brand">wellamarketing</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://marketing.wella.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="wellamarketing-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-miumiuhk">
        <pipeline name="miumiuhk-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh miumiuhk</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-bake" labeltemplate="${MIUMIUHK_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">miumiuhk</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MIUMIUHK_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/sampling.miumiu.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="miumiuhk-1.x-release" stageName="build_release" materialName="miumiuhk_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MIUMIUHK_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MIUMIUHK_BAKE}</param>
                <param name="smoke_tests_file">./miumiuhk/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">miumiuhk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sampling.miumiu.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git" dest="miumiuhk">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-bake" stageName="build" materialName="miumiuhk_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">sampling-miumiu-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://sampling-miumiu-com.staging.ointernal.net/fragrance/hk/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MIUMIUHK_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MIUMIUHK_BAKE}</param>
                <param name="smoke_tests_file">./miumiuhk/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">miumiuhk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/sampling.miumiu.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git" dest="miumiuhk">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-bake" stageName="build" materialName="miumiuhk_bake" />
                <pipeline pipelineName="miumiuhk-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">sampling.miumiu.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
                <git url="git@github.com:cotyinc/sampling.miumiu.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiuhk-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">miumiuhk</param>
                <param name="brand">miumiuhk</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://sampling.miumiu.com/fragrance/hk/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiuhk-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-miumiujp">
        <pipeline name="miumiujp-1.x-release" labeltemplate="1.0.${COUNT}" template="release-webhop-s3-1">
            <params>
                <param name="component_build_command">scripts/build.sh miumiujp</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="go_agent_resource">v5</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miumiu.beamly-miumiujp.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/static-site-optimizer.git" dest="static-site-optimizer" />
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MIUMIUJP_RELEASE}" template="auto-deploy-webhop-s3-1">
            <params>
                <param name="component">miumiujp</param>
                <param name="version">${GO_DEPENDENCY_LABEL_MIUMIUJP_RELEASE}</param>
                <param name="web_link">https://storelocator-miumiu-com.staging.ointernal.net/fragrance/jp/</param>
                <param name="s3_bucket">storelocator-miumiu-com-staging-ointernal-net</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://assembla.com/spaces/miumiu/git-6/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miumiu.beamly-miumiujp.git" dest="miumiujp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-release" stageName="build_release" materialName="miumiujp_release" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">miumiujp</param>
                <param name="brand">miumiujp</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">storelocator-miumiu-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-deploy-stage" stageName="s3_upload" materialName="stage_deploy" />
                <git url="git@git.assembla.com:miumiu.beamly-miumiujp.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">miumiujp</param>
                <param name="brand">miumiujp</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://storelocator-miumiu-com.staging.ointernal.net/fragrance/jp/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MIUMIUJP_RELEASE}" template="manual-deploy-webhop-s3-1">
            <params>
                <param name="component">miumiujp</param>
                <param name="version">${GO_DEPENDENCY_LABEL_MIUMIUJP_RELEASE}</param>
                <param name="web_link">https://storelocator.miumiu.com/fragrance/jp/</param>
                <param name="s3_bucket">storelocator-miumiu-com</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://assembla.com/spaces/miumiu/git-6/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miumiu.beamly-miumiujp.git" dest="miumiujp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-release" stageName="build_release" materialName="miumiujp_release" />
                <pipeline pipelineName="miumiujp-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">miumiujp</param>
                <param name="brand">miumiujp</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">storelocator.miumiu.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-deploy-live" stageName="s3_upload" materialName="live_migration" />
                <git url="git@git.assembla.com:miumiu.beamly-miumiujp.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="miumiujp-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">miumiujp</param>
                <param name="brand">miumiujp</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://storelocator.miumiu.com/fragrance/jp/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="miumiujp-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-stetson">
        <pipeline name="stetson-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh stetson</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:stetson.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-bake" labeltemplate="${STETSON_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">stetson</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_STETSON_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:stetson.3.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:stetson.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="stetson-1.x-release" stageName="build_release" materialName="stetson_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${STETSON_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">stetson</param>
                <param name="brand">stetson</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_STETSON_BAKE}</param>
                <param name="smoke_tests_file">./stetson/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">stetson</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/stetson/git-3/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:stetson.3.git" dest="stetson">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-bake" stageName="build" materialName="stetson_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">stetson</param>
                <param name="brand">stetson</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-stetsoncologne-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:stetson.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">stetson</param>
                <param name="brand">stetson</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-stetsoncologne-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${STETSON_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">stetson</param>
                <param name="brand">stetson</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_STETSON_BAKE}</param>
                <param name="smoke_tests_file">./stetson/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">stetson</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/stetson/git-3/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:stetson.3.git" dest="stetson">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-bake" stageName="build" materialName="stetson_bake" />
                <pipeline pipelineName="stetson-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">stetson</param>
                <param name="brand">stetson</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.stetsoncologne.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:stetson.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="stetson-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">stetson</param>
                <param name="brand">stetson</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.stetsoncologne.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="stetson-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="scout">
        <pipeline name="scout-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scout.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="node-azkaban" stageName="build_release" materialName="azkaban" />
            </materials>
        </pipeline>
        <pipeline name="scout-1.x-bake" labeltemplate="${CSU_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">scout</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CSU_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/scout.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scout.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="scout-1.x-release" stageName="build_release" materialName="csu_release" />
            </materials>
        </pipeline>
        <pipeline name="scout-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CSU_BAKE}" isLocked="false" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">scout</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="smoke_tests_file">./scout/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">scout</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scout.git" dest="scout">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="scout-1.x-bake" stageName="build" materialName="csu_bake" />
            </materials>
        </pipeline>
        <pipeline name="scout-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CSU_BAKE}" isLocked="false" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">scout</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="smoke_tests_file">./scout/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE scout ${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="reponame">scout</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/scout.git" dest="scout">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="scout-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="scout-1.x-bake" stageName="build" materialName="csu_bake" />
            </materials>
        </pipeline>
        <pipeline name="scout-db-jobs" isLocked="false">
            <timer>0 0 6 1/1 * ? *</timer>
            <environmentvariables>
                <variable name="DB_INSTANCE">
                    <value>live</value>
                </variable>
                <variable name="RDS_PASSWORD" secure="true">
                    <encryptedValue>5paKatzA2j9P+F3ZZWFtU1hIfKkdvXdy</encryptedValue>
                </variable>
                <variable name="IMAGE_TRENDER_CLIENT" secure="true">
                    <encryptedValue>EsD50gFk+9gWTT4iZV7e8pJE4hff+wQIDZQWX1zihj++9j+S0anar8AcxlQaY5czlLDQ3R+ExPPgF2iBDcPXKdc8dcmvy4sMT5zsU2BX7vw=</encryptedValue>
                </variable>
                <variable name="IMAGE_TRENDER_PRIVATE_KEY" secure="true">
                    <encryptedValue>DFbSzqz+n9KHO2/03ns+ms248DuJGz9qy1MzwSbfCgVGSwj+9DsDwOH0vuWJ5i+SXNYpGGlrLfk8vYCWU6AMwThZURt01OZuJ32pZ4THCXfyry65XRf/9QHXDi3iu2oY7wIO0SGLR6loDAD10qZpdb/Gw11Hyys5x2WWQPNRzG37t6JS4bdCDxDYQOfAx1oOg7wEsBiY8nv4KYps/RHnEmiuC714z3W+FMAJloIN4fxSjtTWSN0LA2HXq+0MZY694EDc2eFLQ4vSOzGWD/upVqVZUoJ/iEEPzcei85Fhx3fvdnfTdzqGu+eC0AFkYB1O2aNzL7RHPHI4Z6TntdVjhUzCn6nd/wQbxj01t5UDg6mRTelPnE+VCLKjyednFVdb0y4f1pmYbQP15Zde85k6dOGs8SJu3O3b9Tp4wBIX6AFfkQgSfzweeEjyCwElbPaRKr2O4pwJt7AYUiArUqwe31u0ETw8cPXbU0lw0rTXdaX39XN/6WrZ2SW6tbBzWMhDd1jDdwmfzZvdU+309HjdHDz+QNdNzaUAOOjVfCqUbHsCOne/BFo2Jy7iAuE4lxWIVvMi+xFqxoHkEj3doJmtKqdF5CU4aVG2aLVnREyIeeQ15tvOUqG4Lfa3O6BxN54JwSYrjtC4DUMu+0g71O0OsRJvKgAZaPKXc2QcBFc8cupYSut/RySvEC/sid/POF+Q1U5gUcWrtMfMoXgw7VkliIhtKQNHVyiN8K02YqYh9xVA3jOHhEBarcuCiePq7QTIXDdJEdgJyTQPE/E43EtXXSsKLgpdVDLI2AhdXk/T2r9v7TKmtqwXH/lRn65tHdOFy089gJ3E1eoIIKex/pKDgvGc2iHmd+BXrw2jOsSdA0TuCsRqD7CW4lE5uu5Q7OuO0aiZoMeSd5RAJDdIjH2NV2dlVsqlU5+mjqGsmSL+j7quN4qSlnLw/WwjzamhscVj+PbnzllUv+afENfSx4/tcrEMI6SSXxGjSBitKaQOJLvwk5nqR4HThMhV37LUq7RQDCwmyrDshsgN7WWL6kPo/lzHkMiQ4x3Ok8vurI0BtZL7cd0cG2rHtq++K4syDVslBVemD8Mp+RK5mdCtTnz6/U9a6allFQ9onsPlrYooTYm5qdNywJW1BEZb2kfsfoaZVRoKUZuwaRkTu56loxvnRtNO/VUTg4BW4TvqI4rp+vsg30vqKjNP/QEHzOGZSE4fJiZs5gQRyN0JBu8I74yA1Y0jimOiArR4PZn7dztALnVPoA8mhhgZMy/ukTs3x/PY4jKNqNi0Gu5q9EcjOhg7Wh0GFFb860VqL8T4iLC3FYVCm9Yvdk518IwevQKaCb1Fh/GnLC8Z8PMabDchaIe51AOg9FukCWs+jQEHYgTaA4N/nDhoseKf8mnPJefC1IdTG268T/Ai1s8MlquB6haOm8I9U2YNgSQMHmRlaHy1Au2Kw6KTSKEsOM7EdQ9nfAL5tMfCpqtq/Lcgw284BSaTj+04bDHKlZ9o0prv3SKjwHbkuxhwE0WETzLkzX0TOWf2S60qf/FBCCBk+rFbyoLHl/Kact749FqJ8f7MkoLtynw9sHjvIxZzpSxOumaTbsvt3dtD/eAmYDlb1SDt001esmDr4XBQeCiAMMNaMDDvrreVC9rXuo1bVhKFHtVEhMF87uMbwTXsFgTHuQqDrbXpD3kPX2dlw3isZuv+S3Kl0cfpegQXKgK1Fkv5OmSkUSlMxabhWC0s4tKiyANbfBC3VjoY17OHL5A+TRiGhh6ZXgc+n6jHMrkKbt1WD3QUndOvDq30m87+SeXz2GVyHefaxbF/Kve4ZLjyuRRxq7cUQdIESAXCz3mW0wcWjucpVtisysilbz0CyOn0bdAxrY+cwZee0ndIjLt8Sc9ag1dVD1hsILcxjEsDOKMMH1SbOvHXH7EjjBtkwQRE0hu0eAZPw5TlMCVbI6PXRyxfz0Xmg3Uyw/Yq4syISe922TjiPwO5a7ppTq4vgF9wdMJP7EZ1iNvkzov0P6KwxYOfWUYx0A2vXu92iHzb2kx2GJWGidJgF7rkghbrrLgffsd4rDL1xlNeIrNi0050Sv6gSf4IPZd3M/iEkR2x4BPiQj71Q8B/tLBISKScoTIWMw4NDQzn81yXzUDFhlT1A0FYNEZlHNWpFCynUM+m29KztgQqDsBAI1F5dzLVCSso3jGcFsRt1/jE9W2o0UtayqRvukrB2JxHErf8sxBoC0CjAlhsYJwNCBXMoZezmGRVgcBnUINYwPMp5Ru+gaG3euqgwBWpPm9RflDJp76bpsgAYIXGASMc49kN00wBvYQ=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/InstagramScraper.git" dest="instagram-scraper" />
                <git url="git@github.com:zeebox/ImageTrender.git" dest="image-trender" />
            </materials>
            <stage name="instagram_scraper">
                <approval type="manual" />
                <jobs>
                    <job name="run_instagram_scraper">
                        <tasks>
                            <exec command="/bin/bash" workingdir="instagram-scraper">
                                <arg>-c</arg>
                                <arg>./scripts/run_script_in_gocd.sh scraper.js</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="image_analysis">
                <jobs>
                    <job name="run_image_analysis">
                        <tasks>
                            <exec command="/bin/bash" workingdir="image-trender">
                                <arg>-c</arg>
                                <arg>./scripts/run_script_in_gocd.sh image-analysis.js</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="transform_data">
                <jobs>
                    <job name="run_transform_data">
                        <tasks>
                            <exec command="/bin/bash" workingdir="image-trender">
                                <arg>-c</arg>
                                <arg>./scripts/run_script_in_gocd.sh transform-data.js</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="calculate_trends">
                <jobs>
                    <job name="run_calculate_trends">
                        <tasks>
                            <exec command="/bin/bash" workingdir="image-trender">
                                <arg>-c</arg>
                                <arg>./scripts/run_script_in_gocd.sh trends-calculate.js</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="boostercloud">
        <pipeline name="boostercloud-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BoosterCloud.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="node-azkaban" stageName="build_release" materialName="azkaban" />
            </materials>
        </pipeline>
        <pipeline name="boostercloud-1.x-bake" labeltemplate="${CSU_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">boostercloud</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CSU_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/BoosterCloud.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BoosterCloud.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="boostercloud-1.x-release" stageName="build_release" materialName="csu_release" />
            </materials>
        </pipeline>
        <pipeline name="boostercloud-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CSU_BAKE}" isLocked="false" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">boostercloud</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="smoke_tests_file">./boostercloud/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">BoosterCloud</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BoosterCloud.git" dest="boostercloud">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="boostercloud-1.x-bake" stageName="build" materialName="csu_bake" />
            </materials>
        </pipeline>
        <pipeline name="boostercloud-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CSU_BAKE}" isLocked="false" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">boostercloud</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="smoke_tests_file">./boostercloud/tests/smoke-tests.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE BoosterCloud ${GO_DEPENDENCY_LABEL_CSU_BAKE}</param>
                <param name="reponame">BoosterCloud</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BoosterCloud.git" dest="boostercloud">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="boostercloud-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="boostercloud-1.x-bake" stageName="build" materialName="csu_bake" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-campaign-reports-1.x-deploy-stage" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">fb_campaign_report</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-fb-campaign-reports.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-campaign-reports-1.x-deploy-live" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">fb_campaign_report</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-fb-campaign-reports.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-fb-campaign-reports-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-rooster-1.x-deploy-stage" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">rooster</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-rooster.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-rooster-1.x-deploy-live" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">rooster</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-rooster.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-rooster-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-creative-previews-1.x-deploy-stage" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">creative_previews</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-creative-previews.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-creative-previews-1.x-deploy-live" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">creative_previews</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-creative-previews.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-creative-previews-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-screenshot-creatives-1.x-deploy-stage" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">screenshot_creatives</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-fb-screenshot-creatives.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-screenshot-creatives-1.x-deploy-live" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">screenshot_creatives</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-fb-screenshot-creatives.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-fb-screenshot-creatives-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-bulk-ad-upload-1.x-deploy-stage" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">fb_bulk_ad_creation</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-bulk-ad-creation.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-fb-bulk-ad-upload-1.x-deploy-live" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">fb_bulk_ad_creation</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-bulk-ad-creation.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-fb-bulk-ad-upload-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-benchmarker-1.x-deploy-stage" isLocked="false" template="azkaban-deploy-job-auto">
            <params>
                <param name="PROJECT">benchmarker</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-benchmarker.git" dest="#{PROJECT}" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-benchmarker-1.x-deploy-live" isLocked="false" template="azkaban-deploy-job-manual">
            <params>
                <param name="PROJECT">benchmarker</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban-benchmarker.git" dest="#{PROJECT}" />
                <pipeline pipelineName="azkaban-benchmarker-1.x-deploy-stage" stageName="deploy" materialName="stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Elasticsearch">
        <pipeline name="elasticsearch-ami-1.x-bake" labeltemplate="1.0.0-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">masterdata.yml</param>
                <param name="component_name">elasticsearch</param>
                <param name="component_version">1.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/elasticsearch.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="BUILD_PARAVIRTUAL">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/elasticsearch.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="elasticsearch-kibana-ami-1.x-bake" labeltemplate="1.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">clientkibana.yml</param>
                <param name="component_name">elasticsearch-kibana</param>
                <param name="component_version">1.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/elasticsearch.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/elasticsearch.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Ansible-Tower">
        <pipeline name="tower-3.x-release" labeltemplate="3.0.3.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ansible-tower-setup.git" materialName="ansible-tower-setup">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tower-3.x-bake" labeltemplate="3.0.3.${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">install.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tower</param>
                <param name="component_repo">git@github.com:zeebox/ansible-tower-setup.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TOWER_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.3.0</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ansible-tower-setup.git" materialName="ansible-tower-setup">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tower-3.x-release" stageName="build_release" materialName="tower_release" />
                <pipeline pipelineName="ansible-ec2-automount" stageName="release" materialName="ansible-ec2-automount" />
                <pipeline pipelineName="ansible-webhop-component-settings" stageName="release" materialName="ansible-webhop-component-settings" />
                <pipeline pipelineName="ansible-autoassociate-eip" stageName="release" materialName="ansible-autoassociate-eip" />
            </materials>
        </pipeline>
        <pipeline name="tower-3.x-deploy-stage" labeltemplate="${COUNT}-deploy-${TOWER_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-2">
            <params>
                <param name="deploy_playbook">deploy-ansible-tower.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tower</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TOWER_BAKE}</param>
                <param name="smoke_tests_file">./tower/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tower</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ansible-tower-setup</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="tower-3.x-bake" stageName="build" materialName="tower_bake" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-ansible-tower.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/ansible-tower-setup.git" dest="tower" materialName="tower">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tower-3.x-deploy-live" labeltemplate="${COUNT}-deploy-${TOWER_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-2">
            <params>
                <param name="deploy_playbook">deploy-ansible-tower.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tower</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TOWER_BAKE}</param>
                <param name="smoke_tests_file">./tower/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">ansible-tower-setup</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ansible-tower-setup</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="tower-3.x-bake" stageName="build" materialName="tower_bake" />
                <pipeline pipelineName="tower-3.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy-ansible-tower.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/ansible-tower-setup.git" dest="tower" materialName="tower">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-love2love">
        <pipeline name="love2love-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh love2love</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:love2love.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-bake" labeltemplate="${LOVE2LOVE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">love2love</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_LOVE2LOVE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:love2love.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:love2love.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="love2love-1.x-release" stageName="build_release" materialName="love2love_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${LOVE2LOVE_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">love2love</param>
                <param name="brand">love2love</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LOVE2LOVE_BAKE}</param>
                <param name="smoke_tests_file">./love2love/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">love2love</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/love2love/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:love2love.2.git" dest="love2love">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-bake" stageName="build" materialName="love2love_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">love2love</param>
                <param name="brand">love2love</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-love2lovefragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:love2love.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">love2love</param>
                <param name="brand">love2love</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-love2lovefragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${LOVE2LOVE_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">love2love</param>
                <param name="brand">love2love</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LOVE2LOVE_BAKE}</param>
                <param name="smoke_tests_file">./love2love/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">love2love</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/love2love/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:love2love.2.git" dest="love2love">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-bake" stageName="build" materialName="love2love_bake" />
                <pipeline pipelineName="love2love-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">love2love</param>
                <param name="brand">love2love</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.love2lovefragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:love2love.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="love2love-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">love2love</param>
                <param name="brand">love2love</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.love2lovefragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="love2love-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-jenniferlopez">
        <pipeline name="jenniferlopez-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh jenniferlopez</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jennifer-lopez.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-bake" labeltemplate="${JENNIFERLOPEZ_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">jenniferlopez</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_JENNIFERLOPEZ_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:jennifer-lopez.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:jennifer-lopez.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="jenniferlopez-1.x-release" stageName="build_release" materialName="jenniferlopez_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${JENNIFERLOPEZ_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JENNIFERLOPEZ_BAKE}</param>
                <param name="smoke_tests_file">./jenniferlopez/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jenniferlopez</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/jennifer-lopez/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jennifer-lopez.2.git" dest="jenniferlopez">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-bake" stageName="build" materialName="jenniferlopez_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-jenniferlopezbeauty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:jennifer-lopez.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-jenniferlopezbeauty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${JENNIFERLOPEZ_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JENNIFERLOPEZ_BAKE}</param>
                <param name="smoke_tests_file">./jenniferlopez/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jenniferlopez</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/jennifer-lopez/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jennifer-lopez.2.git" dest="jenniferlopez">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-bake" stageName="build" materialName="jenniferlopez_bake" />
                <pipeline pipelineName="jenniferlopez-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.jenniferlopezbeauty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:jennifer-lopez.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jenniferlopez-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jenniferlopez</param>
                <param name="brand">jenniferlopez</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.jenniferlopezbeauty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jenniferlopez-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-jovanmusk">
        <pipeline name="jovanmusk-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh jovanmusk</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jovanmusk.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-bake" labeltemplate="${JOVANMUSK_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">jovanmusk</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_JOVANMUSK_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:jovanmusk.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:jovanmusk.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="jovanmusk-1.x-release" stageName="build_release" materialName="jovanmusk_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${JOVANMUSK_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JOVANMUSK_BAKE}</param>
                <param name="smoke_tests_file">./jovanmusk/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jovanmusk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/jovanmusk/git-5/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jovanmusk.2.git" dest="jovanmusk">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-bake" stageName="build" materialName="jovanmusk_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-jovanmusk-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:jovanmusk.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-jovanmusk-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${JOVANMUSK_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JOVANMUSK_BAKE}</param>
                <param name="smoke_tests_file">./jovanmusk/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jovanmusk</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/jovanmusk/git-5/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:jovanmusk.2.git" dest="jovanmusk">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-bake" stageName="build" materialName="jovanmusk_bake" />
                <pipeline pipelineName="jovanmusk-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.jovanmusk.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:jovanmusk.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jovanmusk-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jovanmusk</param>
                <param name="brand">jovanmusk</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.jovanmusk.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jovanmusk-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-enriqueiglesiasfragrances">
        <pipeline name="enriqueiglesiasfragrances-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh enriqueiglesiasfragrances</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:enrique.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-bake" labeltemplate="${ENRIQUEIGLESIASFRAGRANCES_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">enriqueiglesiasfragrances</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ENRIQUEIGLESIASFRAGRANCES_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:enrique.4.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:enrique.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-release" stageName="build_release" materialName="enriqueiglesiasfragrances_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ENRIQUEIGLESIASFRAGRANCES_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENRIQUEIGLESIASFRAGRANCES_BAKE}</param>
                <param name="smoke_tests_file">./enriqueiglesiasfragrances/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">enriqueiglesiasfragrances</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/enrique/git-4/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:enrique.4.git" dest="enriqueiglesiasfragrances">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-bake" stageName="build" materialName="enriqueiglesiasfragrances_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">fragrances-enriqueiglesias-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:enrique.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://fragrances-enriqueiglesias-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ENRIQUEIGLESIASFRAGRANCES_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENRIQUEIGLESIASFRAGRANCES_BAKE}</param>
                <param name="smoke_tests_file">./enriqueiglesiasfragrances/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">enriqueiglesiasfragrances</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/enrique/git-4/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:enrique.4.git" dest="enriqueiglesiasfragrances">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-bake" stageName="build" materialName="enriqueiglesiasfragrances_bake" />
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">fragrances.enriqueiglesias.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:enrique.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="enriqueiglesiasfragrances-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">enriqueiglesiasfragrances</param>
                <param name="brand">enriqueiglesiasfragrances</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://fragrances.enriqueiglesias.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="enriqueiglesiasfragrances-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cerruti1881">
        <pipeline name="cerruti1881-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cerruti1881</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cerruti1881.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-bake" labeltemplate="${CERRUTI1881_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cerruti1881</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CERRUTI1881_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:cerruti1881.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:cerruti1881.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cerruti1881-1.x-release" stageName="build_release" materialName="cerruti1881_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CERRUTI1881_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CERRUTI1881_BAKE}</param>
                <param name="smoke_tests_file">./cerruti1881/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cerruti1881</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/cerruti1881/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cerruti1881.2.git" dest="cerruti1881">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-bake" stageName="build" materialName="cerruti1881_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-cerruti1881fragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@git.assembla.com:cerruti1881.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-cerruti1881fragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CERRUTI1881_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CERRUTI1881_BAKE}</param>
                <param name="smoke_tests_file">./cerruti1881/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cerruti1881</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/cerruti1881/git-2/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:cerruti1881.2.git" dest="cerruti1881">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-bake" stageName="build" materialName="cerruti1881_bake" />
                <pipeline pipelineName="cerruti1881-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.cerruti1881fragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@git.assembla.com:cerruti1881.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cerruti1881-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cerruti1881</param>
                <param name="brand">cerruti1881</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cerruti1881fragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cerruti1881-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-gluster">
        <pipeline name="gluster-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">gluster</param>
                <param name="component_repo">git@github.com:zeebox/gluster.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/gluster.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="tests" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="ansible-gluster-autoregister" stageName="release" materialName="ansible-gluster-autoregister" />
                <pipeline pipelineName="ansible-ec2-automount" stageName="release" materialName="ansible-ec2-automount" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="marcopolo">
        <pipeline name="marcopolo-69.x-release" labeltemplate="69.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/marcopolo.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcopolo-69.x-bake" labeltemplate="${MARCOPOLO_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">marcopolo</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MARCOPOLO_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/marcopolo.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/marcopolo.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="marcopolo-69.x-release" stageName="build_release" materialName="marcopolo_release" />
            </materials>
        </pipeline>
        <pipeline name="marcopolo-69.x-deploy" labeltemplate="${MARCOPOLO_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">120</param>
                <param name="component_name">marcopolo</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MARCOPOLO_BAKE}</param>
                <param name="smoke_tests_file">marcopolo/tests/us-ops-status.json</param>
                <param name="release_notes" />
                <param name="reponame">marcopolo</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/marcopolo.git" dest="marcopolo">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="marcopolo-69.x-bake" stageName="build" materialName="marcopolo_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="asgard" />
    <pipelines group="ice">
        <pipeline name="ice-32.x-release" labeltemplate="32.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ice.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ice-32.x-bake" labeltemplate="${ICE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">ice</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ICE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ice.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ice.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="ice-32.x-release" stageName="build_release" materialName="ice_release" />
            </materials>
        </pipeline>
        <pipeline name="ice-32.x-deploy" labeltemplate="${ICE_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">ice</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ICE_BAKE}</param>
                <param name="smoke_tests_file">ice/tests/us-east-1.json</param>
                <param name="release_notes" />
                <param name="reponame">ice</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ice.git" dest="ice">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="ice-32.x-bake" stageName="build" materialName="ice_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="goserver">
        <pipeline name="goserver-92.x-bake" labeltemplate="92.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">goserver</param>
                <param name="component_version">92.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/goserver.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/goserver.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="goserver-92.x-deploy" labeltemplate="${GOSERVER_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">c3.large</param>
                <param name="startup_wait">30</param>
                <param name="component_name">goserver</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GOSERVER_BAKE}</param>
                <param name="smoke_tests_file">goserver/tests/us-ops.json</param>
                <param name="release_notes" />
                <param name="reponame">goserver</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/goserver.git" dest="goserver">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="goserver-92.x-bake" stageName="build" materialName="goserver_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="vault">
        <pipeline name="vault-60.x-bake" labeltemplate="60.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">vault</param>
                <param name="component_version">60.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/vault.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/vault.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="vault-60.x-deploy" labeltemplate="${VAULT_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">30</param>
                <param name="component_name">vault</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_VAULT_BAKE}</param>
                <param name="smoke_tests_file">vault/tests/us.json</param>
                <param name="release_notes" />
                <param name="reponame">vault</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/vault.git" dest="vault">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="vault-60.x-bake" stageName="build" materialName="vault_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="engineeringwiki">
        <pipeline name="engineeringwiki-114.x-bake" labeltemplate="114.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">engineeringwiki</param>
                <param name="component_version">114.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/engineering.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/engineering.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="wiki/**/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="engineeringwiki-114.x-deploy" labeltemplate="${ENGINEERINGWIKI_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">90</param>
                <param name="component_name">engineeringwiki</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGINEERINGWIKI_BAKE}</param>
                <param name="smoke_tests_file">engineeringwiki/tests/wiki.json</param>
                <param name="release_notes" />
                <param name="reponame">engineering</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/engineering.git" dest="engineeringwiki">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="wiki/**/*" />
                    </filter>
                </git>
                <pipeline pipelineName="engineeringwiki-114.x-bake" stageName="build" materialName="engineeringwiki_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="goagent">
        <pipeline name="goagent-5.x-bake" labeltemplate="5.${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">gocd-agent</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/go-agent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami1604</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.2.2.0</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
                <variable name="ROOT_VOLUME_SIZE">
                    <value>100</value>
                </variable>
                <variable name="ANSIBLE_VERBOSITY">
                    <value>3</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/go-agent.git" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="baseami-2.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="ansible-ec2-automount" stageName="release" materialName="ec2-automount" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="php5" />
                <pipeline pipelineName="ansible-nodejs-1.x" stageName="release" materialName="nodejs" />
                <pipeline pipelineName="ansible-docker-1.x" stageName="release" materialName="docker" />
                <pipeline pipelineName="ansible-ubuntu-ecs-agent-1.x" stageName="release" materialName="ecsagent" />
            </materials>
        </pipeline>
        <pipeline name="goagent-5.x-deploy-build" labeltemplate="${GOAGENT_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-no-test-2">
            <params>
                <param name="component_name">gocd-agent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GOAGENT_BAKE}</param>
                <param name="release_notes" />
                <param name="reponame">go-agent</param>
            </params>
            <materials>
                <pipeline pipelineName="goagent-5.x-bake" stageName="build" materialName="goagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="goagent-5.x-deploy-task" labeltemplate="${GOAGENT_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-no-test-2">
            <params>
                <param name="component_name">gocd-agent-5.x-task</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GOAGENT_BAKE}</param>
                <param name="release_notes" />
                <param name="reponame">go-agent</param>
            </params>
            <materials>
                <pipeline pipelineName="goagent-5.x-bake" stageName="build" materialName="goagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="goagent-4.x-bake" labeltemplate="4.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">gocd-agent</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/go-agent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-cc10c1da</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
                <variable name="ROOT_VOLUME_SIZE">
                    <value>100</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/go-agent.git" branch="v4" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="ansible-ec2-automount" stageName="release" materialName="ansible-ec2-automount" />
            </materials>
        </pipeline>
        <pipeline name="goagent-4.x-deploy-build" labeltemplate="${GOAGENT_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-no-test-1">
            <params>
                <param name="component_name">gocd-agent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GOAGENT_BAKE}</param>
                <param name="smoke_tests_file">./goagent/tests/noop.json</param>
                <param name="release_notes" />
                <param name="reponame">go-agent</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/go-agent.git" shallowClone="true" dest="goagent">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="goagent-4.x-bake" stageName="build" materialName="goagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="goagent-4.x-deploy-task" labeltemplate="${GOAGENT_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-no-test-1">
            <params>
                <param name="component_name">gocd-agent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GOAGENT_BAKE}</param>
                <param name="smoke_tests_file">./goagent/tests/noop.json</param>
                <param name="release_notes" />
                <param name="reponame">go-agent</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/go-agent.git" shallowClone="true" dest="goagent">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="goagent-4.x-bake" stageName="build" materialName="goagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="goagent-win-17.5-bake" isLocked="false">
            <environmentvariables>
                <variable name="PACKER_BUILD_VPC_ID">
                    <value>vpc-f9080b91</value>
                </variable>
                <variable name="PACKER_BUILD_SUBNET_ID">
                    <value>subnet-ca405da2</value>
                </variable>
                <variable name="PACKER_BUILD_REGION">
                    <value>us-east-1</value>
                </variable>
                <variable name="PACKER_BUILD_SECURITY_GROUP">
                    <value>sg-eb759184</value>
                </variable>
                <variable name="DESTINATION_AMI_VERSION">
                    <value>17.5</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/go-agent-win.git" />
            </materials>
            <stage name="packer-bake">
                <jobs>
                    <job name="packer-bake" elasticProfileId="ecs-agent-packer">
                        <tasks>
                            <exec command="make">
                                <arg>build</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <artifacts>
                            <artifact src="build/*.xml" dest="logs/" />
                            <artifact src="build/ami-id-var.tf" />
                            <artifact src="build.log" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="nexus">
        <pipeline name="nexus-11.x-bake" labeltemplate="11.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">nexus</param>
                <param name="component_version">11.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/nexus.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/nexus.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="nexus-11.x-deploy" labeltemplate="${NEXUS_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">nexus</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_NEXUS_BAKE}</param>
                <param name="smoke_tests_file">nexus/tests/test.json</param>
                <param name="release_notes" />
                <param name="reponame">nexus</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/nexus.git" dest="nexus">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="nexus-11.x-bake" stageName="build" materialName="nexus_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="runscopeagent">
        <pipeline name="runscopeagent-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/RunscopeAgent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="runscopeagent-1.x-bake" labeltemplate="${RUNSCOPEAGENT_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">runscopeagent</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/RunscopeAgent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/RunscopeAgent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="runscopeagent-1.x-release" stageName="build_release" materialName="runscopeagent_release" />
            </materials>
        </pipeline>
        <pipeline name="runscopeagent-1.x-deploy-stage" labeltemplate="${RUNSCOPEAGENT_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">180</param>
                <param name="component_name">runscopeagent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_BAKE}</param>
                <param name="smoke_tests_file">runscopeagent/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">RunscopeAgent</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/RunscopeAgent.git" dest="runscopeagent">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="runscopeagent-1.x-bake" stageName="build" materialName="runscopeagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="runscopeagent-1.x-deploy-live" labeltemplate="${RUNSCOPEAGENT_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">180</param>
                <param name="component_name">runscopeagent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_BAKE}</param>
                <param name="smoke_tests_file">runscopeagent/tests/us-live-status.json</param>
                <param name="release_notes" />
                <param name="reponame">RunscopeAgent</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/RunscopeAgent.git" dest="runscopeagent">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="runscopeagent-1.x-bake" stageName="build" materialName="runscopeagent_bake" />
                <pipeline pipelineName="runscopeagent-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-runscopeagent">
        <pipeline name="runscopeagent-webhop-1.x-bake" labeltemplate="${RUNSCOPEAGENT_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">webhop.yml</param>
                <param name="component_name">runscopeagent</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/RunscopeAgent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/RunscopeAgent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="runscopeagent-1.x-release" stageName="build_release" materialName="runscopeagent_release" />
            </materials>
        </pipeline>
        <pipeline name="runscopeagent-webhop-1.x-deploy-ops-stage" labeltemplate="${COUNT}-deploy-${RUNSCOPEAGENT_WEBHOP_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">200</param>
                <param name="component_name">runscopeagent</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_WEBHOP_BAKE}</param>
                <param name="smoke_tests_file">../runscopeagent/tests/webhop-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">RunscopeAgent</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/RunscopeAgent</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="runscopeagent-webhop-1.x-bake" stageName="build" materialName="runscopeagent_webhop_bake" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/RunscopeAgent.git" dest="runscopeagent">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="runscopeagent-webhop-1.x-deploy-ops-live" labeltemplate="${COUNT}-deploy-${RUNSCOPEAGENT_WEBHOP_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">200</param>
                <param name="component_name">runscopeagent</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RUNSCOPEAGENT_WEBHOP_BAKE}</param>
                <param name="smoke_tests_file">../runscopeagent/tests/webhop-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">RunscopeAgent</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/RunscopeAgent</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="runscopeagent-webhop-1.x-deploy-ops-stage" stageName="deploy_ami" materialName="ops_stage_deploy" />
                <pipeline pipelineName="runscopeagent-webhop-1.x-bake" stageName="build" materialName="runscopeagent_webhop_bake" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/RunscopeAgent.git" dest="runscopeagent">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="sensu">
        <pipeline name="sensu-201.x-bake" labeltemplate="201.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">sensu</param>
                <param name="component_version">201.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/sensu.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sensu.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="sensu-201.x-deploy" labeltemplate="${SENSU_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">c3.large</param>
                <param name="startup_wait">120</param>
                <param name="component_name">sensu</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SENSU_BAKE}</param>
                <param name="smoke_tests_file">sensu/tests/us-ops.json</param>
                <param name="release_notes" />
                <param name="reponame">sensu</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/sensu.git" dest="sensu">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="sensu-201.x-bake" stageName="build" materialName="sensu_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="ecsagent">
        <pipeline name="ecsagent-10.x-bake" labeltemplate="10.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">ecsagent</param>
                <param name="component_version">10.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ecsagent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ecsagent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="ecsagent-10.x-deploy" labeltemplate="${ECSAGENT_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">ecsagent</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ECSAGENT_BAKE}</param>
                <param name="smoke_tests_file">ecsagent/tests/us-ops.json</param>
                <param name="release_notes" />
                <param name="reponame">ecsagent</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ecsagent.git" dest="ecsagent">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="ecsagent-10.x-bake" stageName="build" materialName="ecsagent_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="kibana">
        <pipeline name="kibana-13.x-bake" labeltemplate="13.0.0-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">kibana</param>
                <param name="component_version">13.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/kibana.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/kibana.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="kibana-13.x-deploy" labeltemplate="${KIBANA_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">m3.medium</param>
                <param name="startup_wait">120</param>
                <param name="component_name">kibana</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_KIBANA_BAKE}</param>
                <param name="smoke_tests_file">kibana/tests/us-ops.json</param>
                <param name="release_notes" />
                <param name="reponame">kibana</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/kibana.git" dest="kibana">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="kibana-13.x-bake" stageName="build" materialName="kibana_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="realtime-data-infra">
        <pipeline name="storm-nimbus-0.9.x-bake" labeltemplate="storm-nimbus-0.9.x-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="component_name">stormnimbus</param>
                <param name="component_version">0.9.5</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@githib.com:zeebox/storm.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">storm-nimbus.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="M2_HOME">
                    <value>/usr/share/maven</value>
                </variable>
                <variable name="MAVEN_HOME">
                    <value>/usr/share/maven</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/storm.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="storm-supervisor-0.9.x-bake" labeltemplate="storm-supervisor-0.9.x-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="component_name">stormsupervisor</param>
                <param name="component_version">0.9.5</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@githib.com:zeebox/storm.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">storm-supervisor.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="M2_HOME">
                    <value>/usr/share/maven</value>
                </variable>
                <variable name="MAVEN_HOME">
                    <value>/usr/share/maven</value>
                </variable>
                <variable name="BUILD_PARAVIRTUAL">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/storm.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="sbt-release-gocd-0.x" labeltemplate="0.1.${COUNT}" template="sbt-release-1">
            <materials>
                <git url="git@github.com:zeebox/SbtReleaseGocd.git" materialName="sbt-release-gocd">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="storm-common-1.x" labeltemplate="1.0.${COUNT}" template="sbt-release-1">
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormCommon.git" materialName="storm-common">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="deploy-nimbus-stage-global-1.x" labeltemplate="${NIMBUS_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-run-ansible-playbook-realtime-1">
            <params>
                <param name="playbooks-dir">storm/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">rolling-push-nimbus.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_NIMBUS_BAKE}</param>
                <param name="instance_type">t2.small</param>
                <param name="virtualization_type">hvm</param>
                <param name="desired_capacity">1</param>
                <param name="component" />
                <param name="brand" />
                <param name="region" />
                <param name="env" />
                <param name="url" />
                <param name="service_name" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/storm.git" dest="storm" />
                <pipeline pipelineName="storm-nimbus-0.9.x-bake" stageName="build" materialName="nimbus_bake" />
            </materials>
        </pipeline>
        <pipeline name="deploy-supervisor-stage-global-1.x" labeltemplate="${SUPERVISOR_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-run-ansible-playbook-realtime-1">
            <params>
                <param name="playbooks-dir">storm/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">rolling-push-supervisor.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SUPERVISOR_BAKE}</param>
                <param name="instance_type">m1.large</param>
                <param name="virtualization_type">paravirtual</param>
                <param name="desired_capacity">4</param>
                <param name="component" />
                <param name="brand" />
                <param name="region" />
                <param name="env" />
                <param name="url" />
                <param name="service_name" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/storm.git" dest="storm" />
                <pipeline pipelineName="deploy-nimbus-stage-global-1.x" stageName="deploy" materialName="nimbus-deploy" />
                <pipeline pipelineName="storm-supervisor-0.9.x-bake" stageName="build" materialName="supervisor_bake" />
            </materials>
        </pipeline>
        <pipeline name="deploy-nimbus-live-global-1.x" labeltemplate="${NIMBUS_BAKE}-deploy-${COUNT}" isLocked="false" template="run-ansible-playbook-1">
            <params>
                <param name="playbooks-dir">storm/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">rolling-push-nimbus.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_NIMBUS_BAKE}</param>
                <param name="instance_type">t2.small</param>
                <param name="virtualization_type">hvm</param>
                <param name="desired_capacity">1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/storm.git" dest="storm" />
                <pipeline pipelineName="deploy-nimbus-stage-global-1.x" stageName="deploy" materialName="nimbus-stage-deploy" />
                <pipeline pipelineName="storm-nimbus-0.9.x-bake" stageName="build" materialName="nimbus_bake" />
            </materials>
        </pipeline>
        <pipeline name="deploy-supervisor-live-global-1.x" labeltemplate="${SUPERVISOR_BAKE}-deploy-${COUNT}" isLocked="false" template="run-ansible-playbook-1">
            <params>
                <param name="playbooks-dir">storm/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">rolling-push-supervisor.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SUPERVISOR_BAKE}</param>
                <param name="instance_type">c4.large</param>
                <param name="virtualization_type">hvm</param>
                <param name="desired_capacity">4</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/storm.git" dest="storm" />
                <pipeline pipelineName="deploy-supervisor-stage-global-1.x" stageName="deploy" materialName="supervisor-stage-deploy" />
                <pipeline pipelineName="deploy-nimbus-live-global-1.x" stageName="deploy" materialName="nimbus-live-deploy" />
                <pipeline pipelineName="storm-supervisor-0.9.x-bake" stageName="build" materialName="supervisor_bake" />
            </materials>
        </pipeline>
        <pipeline name="kinesis-backup-lambda">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="component_deploy_script">scripts/deploy.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/kinesis-backup-lambda.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="target/scala-2.11/kinesis-backup-lambda.jar" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="s3">
                <jobs>
                    <job name="s3">
                        <tasks>
                            <fetchartifact pipeline="" stage="build" job="ciBuild" srcfile="kinesis-backup-lambda.jar">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>scripts/s3_upload.sh</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="ciDeploy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_deploy_script}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="storm-common-1.x-PR" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="33f399a7-b082-4dfa-91a1-d6ee3ebf7908" />
            </materials>
        </pipeline>
        <pipeline name="storm-rebalance-lambda">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="component_deploy_script">scripts/deploy.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/storm-rebalance-lambda.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="ciDeploy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_deploy_script}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="grafana-2.6-bake" labeltemplate="grafana-2.6-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">grafana</param>
                <param name="component_version">2.6.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/grafana.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="M2_HOME">
                    <value>/usr/share/maven</value>
                </variable>
                <variable name="MAVEN_HOME">
                    <value>/usr/share/maven</value>
                </variable>
            </environmentvariables>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <git url="git@github.com:zeebox/grafana.git" materialName="grafana" />
            </materials>
        </pipeline>
        <pipeline name="grafana-2.6-deploy-ops" labeltemplate="${GRAFANA_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-run-ansible-playbook-1">
            <params>
                <param name="playbooks-dir">grafana/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">deploy.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GRAFANA_BAKE}</param>
                <param name="instance_type">t2.small</param>
                <param name="virtualization_type">hvm</param>
                <param name="desired_capacity">1</param>
                <param name="component" />
                <param name="brand" />
                <param name="region" />
                <param name="env" />
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/grafana.git" dest="grafana" materialName="grafana_git" />
                <pipeline pipelineName="grafana-2.6-bake" stageName="build" materialName="grafana_bake" />
            </materials>
        </pipeline>
        <pipeline name="grafana-3.1-bake" labeltemplate="grafana-3.1-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">grafana</param>
                <param name="component_version">3.1.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/grafana.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="M2_HOME">
                    <value>/usr/share/maven</value>
                </variable>
                <variable name="MAVEN_HOME">
                    <value>/usr/share/maven</value>
                </variable>
            </environmentvariables>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <git url="git@github.com:zeebox/grafana.git" materialName="grafana" />
            </materials>
        </pipeline>
        <pipeline name="grafana-3.1-deploy-ops" labeltemplate="${GRAFANA_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-run-ansible-playbook-realtime-1">
            <params>
                <param name="playbooks-dir">grafana/ansible</param>
                <param name="inventory">inventory.ini</param>
                <param name="playbook">deploy.yml</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GRAFANA_BAKE}</param>
                <param name="instance_type">t2.small</param>
                <param name="virtualization_type">hvm</param>
                <param name="desired_capacity">1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/grafana.git" dest="grafana" materialName="grafana_git" />
                <pipeline pipelineName="grafana-3.1-bake" stageName="build" materialName="grafana_bake" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="EngagerCorePipelines">
        <pipeline name="engagerbuilderlite-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">xunit.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerBuilderLite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engager-widget-core" />
            </materials>
        </pipeline>
        <pipeline name="engagerbuilderlite-1.x-bake" labeltemplate="${EBL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">engagerbuilderlite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_EBL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/EngagerBuilderLite.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerBuilderLite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="engagerbuilderlite-1.x-release" stageName="build_release" materialName="ebl_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerbuilderlite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${EBL_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">180</param>
                <param name="component_name">engagerbuilderlite</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_EBL_BAKE}</param>
                <param name="smoke_tests_file">./engagerbuilderlite/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">EngagerBuilderLite</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerBuilderLite.git" dest="engagerbuilderlite">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerbuilderlite-1.x-bake" stageName="build" materialName="ebl_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="engagerbuilderlite-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${EBL_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">500</param>
                <param name="component_name">engagerbuilderlite</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_EBL_BAKE}</param>
                <param name="smoke_tests_file">./engagerbuilderlite/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">EngagerBuilderLite</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerBuilderLite.git" dest="engagerbuilderlite">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerbuilderlite-1.x-bake" stageName="build" materialName="ebl_bake" />
                <pipeline pipelineName="engagerbuilderlite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="engagerwidgets-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerWidgets.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelook-service-1.x-release" stageName="build_release" materialName="engagershopthelook" />
                <pipeline pipelineName="engagershopthelookimage-service-1.x-release" stageName="build_release" materialName="engagershopthelookimage" />
                <pipeline pipelineName="engagersurvey-service-1.x-release" stageName="build_release" materialName="engagersurvey" />
                <pipeline pipelineName="engagertriviaquiz-service-1.x-release" stageName="build_release" materialName="engagertriviaquiz" />
                <pipeline pipelineName="engagerpersonality-service-1.x-release" stageName="build_release" materialName="engagerpersonality" />
                <pipeline pipelineName="engagermemorygame-service-1.x-release" stageName="build_release" materialName="engagermemorygame" />
                <pipeline pipelineName="engagerimageblurquiz-service-1.x-release" stageName="build_release" materialName="engagerimageblurquiz" />
                <pipeline pipelineName="engagershopthelookimagedirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookimagedirect" />
                <pipeline pipelineName="engagershopthelookvideodirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookvideodirect" />
                <pipeline pipelineName="engagerrelationalquiz-service-1.x-release" stageName="build_release" materialName="engagerrelationalquiz" />
                <pipeline pipelineName="engageradsurvey-service-1.x-release" stageName="build_release" materialName="engageradsurvey" />
                <pipeline pipelineName="engagervideosurvey-service-1.x-release" stageName="build_release" materialName="engagervideosurvey" />
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="engagerrelationalsurvey-service-1.x-release" stageName="build_release" materialName="engagerrelationalsurvey" />
            </materials>
        </pipeline>
        <pipeline name="engagerwidgets-service-1.x-bake" labeltemplate="${ENGAGERWIDGETS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">engagerwidgets</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ENGAGERWIDGETS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/engagerwidgets.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerWidgets.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="engagerwidgets-service-1.x-release" stageName="build_release" materialName="engagerwidgets_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerwidgets-service-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ENGAGERWIDGETS_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">180</param>
                <param name="component_name">engagerwidgets</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERWIDGETS_BAKE}</param>
                <param name="smoke_tests_file">./engagerwidgets/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">EngagerWidgets</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerWidgets.git" dest="engagerwidgets">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerwidgets-service-1.x-bake" stageName="build" materialName="engagerwidgets_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="engagerwidgets-service-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ENGAGERWIDGETS_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">240</param>
                <param name="component_name">engagerwidgets</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERWIDGETS_BAKE}</param>
                <param name="smoke_tests_file">./engagerwidgets/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE engagerwidgets Service ${GO_DEPENDENCY_LABEL_ENGAGERWIDGETS_SERVICE_BAKE}</param>
                <param name="reponame">EngagerWidgets</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerWidgets.git" dest="engagerwidgets">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerwidgets-service-1.x-bake" stageName="build" materialName="engagerwidgets_bake" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="engagertriviaquiz-service-1.x-integration-test" stageName="test-build" materialName="widget_integration_trivia" />
                <pipeline pipelineName="engager-personality-ruby-test" stageName="cucumber-tests" materialName="widget_integration_personality" />
                <pipeline pipelineName="engager-videosurvey-ruby-test" stageName="cucumber-tests" materialName="widget_integration_videosurvey" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="engager-survey-ruby-test" stageName="cucumber-tests" materialName="widget_integration_survey" />
                <pipeline pipelineName="engager-shop-the-look-image-direct-ruby-test" stageName="cucumber-tests" materialName="widget_integration_shop_the_look_image_direct" />
                <pipeline pipelineName="engager-ad-survey-ruby-test" stageName="cucumber-tests" materialName="widget_integration_ad_survey" />
                <pipeline pipelineName="engager-relational-quiz-ruby-test" stageName="cucumber-tests" materialName="widget_integration_relational_quiz" />
            </materials>
        </pipeline>
        <pipeline name="engagercatalogue-service-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerCatalogue.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
            </materials>
        </pipeline>
        <pipeline name="engagercatalogue-service-1.x-bake" labeltemplate="${ENGAGERCATALOGUE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">engagercatalogue</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ENGAGERCATALOGUE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/EngagerCatalogue.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerCatalogue.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="engagercatalogue-service-1.x-release" stageName="build_release" materialName="engagercatalogue_release" />
            </materials>
        </pipeline>
        <pipeline name="engagercatalogue-service-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ENGAGERCATALOGUE_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">180</param>
                <param name="component_name">engagercatalogue</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERCATALOGUE_BAKE}</param>
                <param name="smoke_tests_file">./EngagerCatalogue/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">EngagerCatalogue</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerCatalogue.git" dest="EngagerCatalogue">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagercatalogue-service-1.x-bake" stageName="build" materialName="engagercatalogue_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="EngagerCatalogue-service-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ENGAGERCATALOGUE_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">180</param>
                <param name="component_name">engagercatalogue</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERCATALOGUE_BAKE}</param>
                <param name="smoke_tests_file">./EngagerCatalogue/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE EngagerCatalogue Service ${GO_DEPENDENCY_LABEL_ENGAGERCATALOGUE_SERVICE_BAKE}</param>
                <param name="reponame">EngagerCatalogue</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerCatalogue.git" dest="EngagerCatalogue">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagercatalogue-service-1.x-bake" stageName="build" materialName="engagercatalogue_bake" />
                <pipeline pipelineName="engagercatalogue-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="engager-widget-core-1.x-release" labeltemplate="1.4.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/engager-widget-core.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="EngagerWidgetPipelines">
        <pipeline name="engagershopthelook-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLook.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagershopthelook-service-1.x-assetupload-stage" labeltemplate="${ENGAGERSHOPTHELOOK_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLook.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelook-service-1.x-release" stageName="build_release" materialName="engagershopthelook_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelook-service-1.x-assetupload-live" labeltemplate="${ENGAGERSHOPTHELOOK_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLook.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelook-service-1.x-release" stageName="build_release" materialName="engagershopthelook_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelook-service-1.x-integration-test" labeltemplate="1.1.${COUNT}" template="integration-test-1">
            <params>
                <param name="go_agent_resource">v5</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/test.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLook.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimage-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImage.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimage-service-1.x-assetupload-stage" labeltemplate="${ENGAGERSHOPTHELOOKIMAGE_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImage.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookimage-service-1.x-release" stageName="build_release" materialName="engagershopthelookimage_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimage-service-1.x-assetupload-live" labeltemplate="${ENGAGERSHOPTHELOOKIMAGE_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImage.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookimage-service-1.x-release" stageName="build_release" materialName="engagershopthelookimage_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimagedirect-service-1.x-release" labeltemplate="0.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImageDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimagedirect-service-1.x-assetupload-stage" labeltemplate="${ENGAGERSHOPTHELOOKIMAGEDIRECT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImageDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookimagedirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookimagedirect_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookimagedirect-service-1.x-assetupload-live" labeltemplate="${ENGAGERSHOPTHELOOKIMAGEDIRECT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImageDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookimagedirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookimagedirect_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookvideodirect-service-1.x-release" labeltemplate="0.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookVideoDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookvideodirect-service-1.x-assetupload-stage" labeltemplate="${ENGAGERSHOPTHELOOKVIDEODIRECT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookVideoDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookvideodirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookvideodirect_release" />
            </materials>
        </pipeline>
        <pipeline name="engagershopthelookvideodirect-service-1.x-assetupload-live" labeltemplate="${ENGAGERSHOPTHELOOKVIDEODIRECT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookVideoDirect.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagershopthelookvideodirect-service-1.x-release" stageName="build_release" materialName="engagershopthelookvideodirect_release" />
            </materials>
        </pipeline>
        <pipeline name="engageradsurvey-service-1.x-release" labeltemplate="1.2.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerAdSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engageradsurvey-service-1.x-assetupload-stage" labeltemplate="${ENGAGERADSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerAdSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engageradsurvey-service-1.x-release" stageName="build_release" materialName="engageradsurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engageradsurvey-service-1.x-assetupload-live" labeltemplate="${ENGAGERADSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerAdSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engageradsurvey-service-1.x-release" stageName="build_release" materialName="engageradsurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagersurvey-service-1.x-release" labeltemplate="1.2.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerSurvey.git" materialName="engagersurvey_release">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engager-widget-core" />
            </materials>
        </pipeline>
        <pipeline name="engagersurvey-service-1.x-assetupload-stage" labeltemplate="${ENGAGERSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagersurvey-service-1.x-release" stageName="build_release" materialName="engagersurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagersurvey-service-1.x-assetupload-live" labeltemplate="${ENGAGERSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagersurvey-service-1.x-release" stageName="build_release" materialName="engagersurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagertriviaquiz-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerTriviaQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagertriviaquiz-service-1.x-assetupload-stage" labeltemplate="${ENGAGERTRIVIAQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerTriviaQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagertriviaquiz-service-1.x-release" stageName="build_release" materialName="engagertriviaquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagertriviaquiz-service-1.x-assetupload-live" labeltemplate="${ENGAGERTRIVIAQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerTriviaQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagertriviaquiz-service-1.x-release" stageName="build_release" materialName="engagertriviaquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagertriviaquiz-service-1.x-integration-test" labeltemplate="1.1.${COUNT}" template="integration-test-1">
            <params>
                <param name="go_agent_resource">v5</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/test.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerTriviaQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engagerpersonality-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerPersonality.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engagerwidgetcore" />
            </materials>
        </pipeline>
        <pipeline name="engagerpersonality-service-1.x-assetupload-stage" labeltemplate="${ENGAGERPERSONALITY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerPersonality.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerpersonality-service-1.x-release" stageName="build_release" materialName="engagerpersonality_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerpersonality-service-1.x-assetupload-live" labeltemplate="${ENGAGERPERSONALITY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerPersonality.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerpersonality-service-1.x-release" stageName="build_release" materialName="engagerpersonality_release" />
            </materials>
        </pipeline>
        <pipeline name="engagervideosurvey-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerVideoSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engagerwidgetcore" />
            </materials>
        </pipeline>
        <pipeline name="engagervideosurvey-service-1.x-assetupload-stage" labeltemplate="${ENGAGERVIDEOSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerVideoSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagervideosurvey-service-1.x-release" stageName="build_release" materialName="engagervideosurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagervideosurvey-service-1.x-assetupload-live" labeltemplate="${ENGAGERVIDEOSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerVideoSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagervideosurvey-service-1.x-release" stageName="build_release" materialName="engagervideosurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalquiz-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engagerwidgetcore" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalquiz-service-1.x-assetupload-stage" labeltemplate="${ENGAGERRELATIONALQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerrelationalquiz-service-1.x-release" stageName="build_release" materialName="engagerrelationalquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalquiz-service-1.x-assetupload-live" labeltemplate="${ENGAGERRELATIONALQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerrelationalquiz-service-1.x-release" stageName="build_release" materialName="engagerrelationalquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagermemorygame-service-1.x-release" labeltemplate="1.3.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerMemoryGame.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagermemorygame-service-1.x-assetupload-stage" labeltemplate="${ENGAGERMEMORYGAME_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerMemoryGame.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagermemorygame-service-1.x-release" stageName="build_release" materialName="engagermemorygame_release" />
            </materials>
        </pipeline>
        <pipeline name="engagermemorygame-service-1.x-assetupload-live" labeltemplate="${ENGAGERMEMORYGAME_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerMemoryGame.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagermemorygame-service-1.x-release" stageName="build_release" materialName="engagermemorygame_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerimageblurquiz-service-1.x-release" labeltemplate="1.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerImageBlurQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagerimageblurquiz-service-1.x-assetupload-stage" labeltemplate="${ENGAGERIMAGEBLURQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerImageBlurQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerimageblurquiz-service-1.x-release" stageName="build_release" materialName="engagerimageblurquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerimageblurquiz-service-1.x-assetupload-live" labeltemplate="${ENGAGERIMAGEBLURQUIZ_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerImageBlurQuiz.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerimageblurquiz-service-1.x-release" stageName="build_release" materialName="engagerimageblurquiz_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalsurvey-service-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalSurvey.git" materialName="engagerrelationalsurvey_release">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engager-widget-core-1.x-release" stageName="build_release" materialName="engager-widget-core" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalsurvey-service-1.x-assetupload-stage" labeltemplate="${ENGAGERRELATIONALSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerrelationalsurvey-service-1.x-release" stageName="build_release" materialName="engagerrelationalsurvey_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerrelationalsurvey-service-1.x-assetupload-live" labeltemplate="${ENGAGERRELATIONALSURVEY_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalSurvey.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerrelationalsurvey-service-1.x-release" stageName="build_release" materialName="engagerrelationalsurvey_release" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="EngagerTestPipelines">
        <pipeline name="engager-personality-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerPersonality.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engager-videosurvey-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerVideoSurvey.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engager-survey-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerSurvey.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engager-shop-the-look-image-direct-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerShopTheLookImageDirect.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engager-ad-survey-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerAdSurvey.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="engager-relational-quiz-ruby-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/EngagerRelationalQuiz.git" />
                <pipeline pipelineName="engagerwidgets-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="engager-dashboard">
        <pipeline name="engagerdashboard-service-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerDashboard.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="engagerdashboard-service-1.x-bake" labeltemplate="${ENGAGERDASHBOARD_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">engagerdashboard</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ENGAGERDASHBOARD_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/EngagerDashboard.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerDashboard.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="engagerdashboard-service-1.x-release" stageName="build_release" materialName="engagerdashboard_release" />
            </materials>
        </pipeline>
        <pipeline name="engagerdashboard-service-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ENGAGERDASHBOARD_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">engagerdashboard</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERDASHBOARD_BAKE}</param>
                <param name="smoke_tests_file">./EngagerDashboard/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">EngagerDashboard</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerDashboard.git" dest="EngagerDashboard">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerdashboard-service-1.x-bake" stageName="build" materialName="engagerdashboard_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="EngagerDashboard-service-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ENGAGERDASHBOARD_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">engagerdashboard</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ENGAGERDASHBOARD_BAKE}</param>
                <param name="smoke_tests_file">./EngagerDashboard/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE EngagerDashboard Service ${GO_DEPENDENCY_LABEL_ENGAGERDASHBOARD_SERVICE_BAKE}</param>
                <param name="reponame">EngagerDashboard</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EngagerDashboard.git" dest="EngagerDashboard">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="engagerdashboard-service-1.x-bake" stageName="build" materialName="engagerdashboard_bake" />
                <pipeline pipelineName="engagerdashboard-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Scala-Libraries">
        <pipeline name="ZeeboxCore">
            <materials>
                <git url="git@github.com:zeebox/ZeeboxCore.git" />
            </materials>
            <stage name="Publish">
                <jobs>
                    <job name="scala210">
                        <tasks>
                            <exec command="sbt">
                                <arg>-no-colors</arg>
                                <arg>clean</arg>
                                <arg>compile</arg>
                                <arg>test:compile</arg>
                                <arg>test</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="SbtBeamly" isLocked="false">
            <params>
                <param name="component_publish_script">scripts/publish.sh</param>
            </params>
            <environmentvariables>
                <variable name="AUTO_GENERATED_FROM">
                    <value>Connector2/scripts/go/generate_pipeline.py</value>
                </variable>
                <variable name="GIT_API_TOKEN">
                    <value>002a569725f660feb9b8585cb89ae1537f42049a</value>
                </variable>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-7-oracle</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/sbt-beamly.git" dest="sbt-beamly" materialName="SbtBeamly" />
            </materials>
            <stage name="CITag">
                <jobs>
                    <job name="ciTag">
                        <tasks>
                            <exec command="/bin/bash" workingdir="sbt-beamly">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash" workingdir="sbt-beamly">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="CIRelease">
                <jobs>
                    <job name="ciRelease">
                        <tasks>
                            <exec command="/bin/bash" workingdir="sbt-beamly">
                                <arg>-c</arg>
                                <arg>git checkout ${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash" args="-c #{component_publish_script}" workingdir="sbt-beamly">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="ContextCommons2">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ContextCommons2.git" />
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="CommitAndTest">
                        <environmentvariables>
                            <variable name="MAVEN_OPTS">
                                <value>-Xms512M -Xmx2048M -XX:MaxPermSize=768m</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="**/*Test.xml" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="build_release">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="LoadTestCommon" labeltemplate="1.0-${COUNT}" isLocked="false" template="sbt-release-1">
            <params>
                <param name="JAVA_HOME">/usr/lib/jvm/java-8-oracle/</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/LoadTestCommon.git" />
            </materials>
        </pipeline>
        <pipeline name="config4s-0.x" labeltemplate="0.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/config4s.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="elasticsearch-test-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/elasticsearch-test.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="elasticsearch-test-1.x-pr" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="elasticsearch-test-pr-scm-id" />
            </materials>
        </pipeline>
        <pipeline name="loadtest-common-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/LoadTestCommon.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                        <ignore pattern="LICENSE.txt" />
                        <ignore pattern=".gitignore" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Beamly.com">
        <pipeline name="Beamlyjs" template="zeebox-autoscaling-deploy-us-only">
            <params>
                <param name="startup_wait">0</param>
                <param name="puppet_path">puppet</param>
                <param name="component_repo">git@github.com:zeebox/zeebox.js.git</param>
                <param name="instance_size">m1.small</param>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="zeebox_component_name">beamlyjs</param>
                <param name="autoscaling_build_prefix">beamlyjs-</param>
                <param name="zeebox_test_dir">./tests</param>
                <param name="release_notes" />
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_NAME">
                    <value>#{zeebox_component_name}</value>
                </variable>
                <variable name="AUTOSCALING_BUILD_PREFIX">
                    <value>#{autoscaling_build_prefix}</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>zeebox.js</value>
                </variable>
                <variable name="ZEEBOX_RELEASE_NOTES">
                    <value>https://tbonetv.jira.com/wiki/display/RELEASES/Beamly.js+Release+Notes</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/zeebox.js.git" branch="develop" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-release" labeltemplate="1.2.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="perf-dash-1.x-release" stageName="build_release" materialName="perf_dash" />
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="beamly-anonymousId-1.x-release" stageName="build_release" materialName="anonymousid" />
                <pipeline pipelineName="node-beamly-clients-1.x-release" stageName="build_release" materialName="beamlyclients" />
                <pipeline pipelineName="beamly-autobot-1.x-release" stageName="build_release" materialName="autobot" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-bake" labeltemplate="${BEAMLYSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">beamlysite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_BEAMLYSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/BeamlySite.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="beamly-site-1.x-release" stageName="build_release" materialName="beamlysite_release" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-assetupload-stage" labeltemplate="${BEAMLYSITE_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-site-1.x-release" stageName="build_release" materialName="beamlysite_release" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-assetupload-live" labeltemplate="${BEAMLYSITE_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-site-1.x-assetupload-stage" stageName="stage" materialName="assetupload_stage" />
                <pipeline pipelineName="beamly-site-1.x-deploy-stage" stageName="test_ami" materialName="stage_deploy" />
                <pipeline pipelineName="beamly-site-1.x-release" stageName="build_release" materialName="beamlysite_release" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${BEAMLYSITE_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">180</param>
                <param name="component_name">beamlysite</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BEAMLYSITE_BAKE}</param>
                <param name="smoke_tests_file">./beamlysite/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">BeamlySite</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git" dest="beamlysite">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="beamly-site-1.x-bake" stageName="build" materialName="beamlysite_bake" />
                <pipeline pipelineName="beamly-site-1.x-assetupload-stage" stageName="stage" materialName="assetupload_stage" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${BEAMLYSITE_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.micro</param>
                <param name="startup_wait">180</param>
                <param name="component_name">beamlysite</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BEAMLYSITE_BAKE}</param>
                <param name="smoke_tests_file">./beamlysite/tests/smoke-tests.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE BeamlySite ${GO_DEPENDENCY_LABEL_BEAMLYSITE_BAKE}</param>
                <param name="reponame">BeamlySite</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git" dest="beamlysite">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="beamly-site-1.x-bake" stageName="build" materialName="beamlysite_bake" />
                <pipeline pipelineName="beamly-site-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="beamly-site-1.x-assetupload-live" stageName="stage" materialName="assetupload_live" />
                <pipeline pipelineName="beamly-site-1.x-test" stageName="test-build" materialName="test_stage" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-1.x-test" labeltemplate="${COUNT}-test-${beamlysite_release}" isLocked="false" template="integration-test-1">
            <params>
                <param name="go_agent_resource">v5</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/test.sh</param>
                <param name="test_reports_path">test/reports/junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git" branch="poc_ruby_tests" />
                <pipeline pipelineName="beamly-site-1.x-assetupload-stage" stageName="stage" materialName="assetupload_stage" />
                <pipeline pipelineName="beamly-site-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="beamly-site-1.x-release" stageName="build_release" materialName="beamlysite_release" />
            </materials>
        </pipeline>
        <pipeline name="beamly-site-poc-ruby-cucumber-test" template="cucumber-ruby">
            <materials>
                <git url="git@github.com:zeebox/BeamlySite.git" branch="poc_ruby_tests" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="BaseSite" />
    <pipelines group="CoreComponents">
        <pipeline name="newslettersignup-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-newsletter-signup.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="newslettersignup-1.x-docupload" labeltemplate="${NEWSLETTERSIGNUP_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-newsletter-signup.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="newslettersignup-1.x-release" stageName="release-to-npm" materialName="newslettersignup_release" />
            </materials>
        </pipeline>
        <pipeline name="beamlycomponentcss-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/component-styleguide.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="beamlycomponentcss-1.x-docupload" labeltemplate="${BEAMLYCOMPONENTCSS_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/component-styleguide.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamlycomponentcss-1.x-release" stageName="release-to-npm" materialName="beamlycomponentcss_release" />
            </materials>
        </pipeline>
        <pipeline name="reducers-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-reducers.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="reducers-1.x-docupload" labeltemplate="${REDUCERS_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-reducers.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="reducers-1.x-release" stageName="release-to-npm" materialName="reducers_release" />
            </materials>
        </pipeline>
        <pipeline name="globalfooter-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-global-footer.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="globalfooter-1.x-docupload" labeltemplate="${GLOBALFOOTER_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-global-footer.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="globalfooter-1.x-release" stageName="release-to-npm" materialName="globalfooter_release" />
            </materials>
        </pipeline>
        <pipeline name="toggletargetheight-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-toggle-target-height.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="toggletargetheight-1.x-docupload" labeltemplate="${TOGGLETARGETHEIGHT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-toggle-target-height.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight_release" />
            </materials>
        </pipeline>
        <pipeline name="formvalidation-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-form-validation.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="formvalidation-1.x-docupload" labeltemplate="${FORMVALIDATION_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-form-validation.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="formvalidation-1.x-release" stageName="release-to-npm" materialName="formvalidation_release" />
            </materials>
        </pipeline>
        <pipeline name="hero-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-hero.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="hero-1.x-docupload" labeltemplate="${HERO_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-hero.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="hero-1.x-release" stageName="release-to-npm" materialName="hero_release" />
            </materials>
        </pipeline>
        <pipeline name="search-2.x-release" labeltemplate="2.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-search.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="search-2.x-docupload" labeltemplate="${SEARCH_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-search.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="search-2.x-release" stageName="release-to-npm" materialName="search_release" />
            </materials>
        </pipeline>
        <pipeline name="globalheader-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-global-header.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="globalheader-1.x-docupload" labeltemplate="${GLOBALHEADER_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-global-header.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="globalheader-1.x-release" stageName="release-to-npm" materialName="globalheader_release" />
            </materials>
        </pipeline>
        <pipeline name="contentcards-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-cards.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="contentcards-1.x-docupload" labeltemplate="${CONTENTCARDS_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-cards.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="contentcards-1.x-release" stageName="release-to-npm" materialName="contentcards_release" />
            </materials>
        </pipeline>
        <pipeline name="cookiealert-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-cookie-alert.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="cookiealert-1.x-docupload" labeltemplate="${COOKIEALERT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-cookie-alert.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="cookiealert-1.x-release" stageName="release-to-npm" materialName="cookiealert_release" />
            </materials>
        </pipeline>
        <pipeline name="lazyloading-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-lazy-loading.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="lazyloading-1.x-docupload" labeltemplate="${LAZYLOADING_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-lazy-loading.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="lazyloading-1.x-release" stageName="release-to-npm" materialName="lazyloading_release" />
            </materials>
        </pipeline>
        <pipeline name="carousel-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-carousel.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="carousel-1.x-docupload" labeltemplate="${CAROUSEL_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-carousel.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="carousel-1.x-release" stageName="release-to-npm" materialName="carousel_release" />
            </materials>
        </pipeline>
        <pipeline name="product-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-product.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="base-css-release" />
                <pipeline pipelineName="cinder-js-1.x-release" stageName="build_release" materialName="cinder-js-release" />
                <pipeline pipelineName="toggletargetheight-1.x-release" stageName="release-to-npm" materialName="toggletargetheight-release" />
                <pipeline pipelineName="component-base-config-1.x-release" stageName="build_release" materialName="component-base-config-release" />
            </materials>
        </pipeline>
        <pipeline name="product-1.x-docupload" labeltemplate="${PRODUCT_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-product.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="product-1.x-release" stageName="release-to-npm" materialName="product_release" />
            </materials>
        </pipeline>
        <pipeline name="base-css-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-base-css.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="base-css-1.x-docupload" labeltemplate="${BASECSS_RELEASE}-upload-${COUNT}" template="shell-command-1">
            <params>
                <param name="command">scripts/publish-to-s3.sh</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-base-css.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="base-css-1.x-release" stageName="build_release" materialName="basecss_release" />
            </materials>
        </pipeline>
        <pipeline name="globalfooter-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="693a5b00-cfe3-4569-b4e8-1176e58ca303" />
            </materials>
        </pipeline>
        <pipeline name="component-styleguide-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_styleguide_git" />
            </materials>
        </pipeline>
        <pipeline name="carousel-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_carousel_git" />
            </materials>
        </pipeline>
        <pipeline name="cookiealert-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_cookiealert_git" />
            </materials>
        </pipeline>
        <pipeline name="formvalidation-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_formvalidation_git" />
            </materials>
        </pipeline>
        <pipeline name="hero-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_hero_git" />
            </materials>
        </pipeline>
        <pipeline name="lazyloading-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_lazyloading_git" />
            </materials>
        </pipeline>
        <pipeline name="search-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_search_git" />
            </materials>
        </pipeline>
        <pipeline name="contentcards-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_content_cards_git" />
            </materials>
        </pipeline>
        <pipeline name="globalheader-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_globalheader_git" />
            </materials>
        </pipeline>
        <pipeline name="toggletargetheight-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/other-tests.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="component_toggletargetheight_git" />
            </materials>
        </pipeline>
        <pipeline name="formvalidation-1.x-tests" template="core-component-release-tests-1">
            <params>
                <param name="component_pr_verify_script" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-form-validation.git" branch="spike/core-component-cucumber" />
            </materials>
        </pipeline>
        <pipeline name="newsletter-signup-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="66d740ef-eae6-44ac-bae8-f6879aedb49f" />
            </materials>
        </pipeline>
        <pipeline name="product-pr" template="component-pr-1">
            <params>
                <param name="component_build_command">scripts/build-pr.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_performance_command">scripts/other-tests.sh</param>
                <param name="component_percy_command">scripts/other-tests.sh</param>
                <param name="component_cucumber_command">scripts/cucumber.sh</param>
                <param name="component_accessibility_command">scripts/other-tests.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <scm ref="373b9100-c511-4e03-b28f-51ab5e98c18d" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="FlumeServer">
        <pipeline name="flumeserver-53.x-bake" labeltemplate="53.0.${COUNT}-flume-1.4.0" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">flumeserver</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/FlumeServer.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/FlumeServer.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="flumeserver-53.x-deploy-ops" labeltemplate="${FLUMESERVER_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">flumeserver</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_FLUMESERVER_BAKE}</param>
                <param name="smoke_tests_file">flumeserver/tests/us-east-1.json</param>
                <param name="release_notes" />
                <param name="reponame">FlumeServer</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/FlumeServer.git" dest="flumeserver">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="flumeserver-53.x-bake" stageName="build" materialName="flumeserver_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Webhop-Tools">
        <pipeline name="goose4-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/goose4.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sanch-go-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/sanch-go.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="goose4-1.x-release" stageName="build_release" materialName="goose4_release" />
            </materials>
        </pipeline>
        <pipeline name="trilamb-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/trilamb.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="trilamb-1.x-deploy" labeltemplate="${COUNT}-deploy-${TRILAMB_RELEASE}" isLocked="false">
            <params>
                <param name="artifact_name">trilamb</param>
                <param name="artifact_version">${GO_DEPENDENCY_LABEL_TRILAMB_RELEASE}</param>
                <param name="lambda_name">webhop-cc2-trilamb-logs</param>
                <param name="lambda_runtime">python2.7</param>
                <param name="lambda_handler">tri-lamb.handler</param>
                <param name="lambda_role">trilamb-log-aggregation-role</param>
                <param name="lambda_description">Used by CC2.0 components.</param>
                <param name="lambda_env_vars">ES_URL=https://search-cc2-trilamb-pbbywyccpfkkirh2kwtryurxqm.eu-central-1.es.amazonaws.com</param>
            </params>
            <materials>
                <pipeline pipelineName="trilamb-1.x-release" stageName="build_release" materialName="trilamb_release" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/trilamb.git" dest="trilamb" />
            </materials>
            <stage name="deploy_lambda">
                <approval type="manual" />
                <jobs>
                    <job name="ansible-deploy-lambda">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy-lambda.yml --extra-vars "artifact_name=#{artifact_name} artifact_version=#{artifact_version} lambda_name=#{lambda_name} lambda_runtime=#{lambda_runtime} lambda_handler=#{lambda_handler} lambda_role=#{lambda_role} lambda_description='#{lambda_description}' lambda_env_vars='#{lambda_env_vars}'"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>task</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="shredis-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/shredis.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Webhop-Consul">
        <pipeline name="bojo-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/go-bojo.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="consul-2.x-release" labeltemplate="2.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/consul.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="consul-2.x-bake" labeltemplate="2.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">consul</param>
                <param name="component_repo">git@github.com:zeebox/consul.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CONSUL_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/consul.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="consul-2.x-release" stageName="build_release" materialName="consul_release" />
                <pipeline pipelineName="bojo-1.x-release" stageName="build_release" materialName="bojo_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="sanch_go_release" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
            </materials>
        </pipeline>
        <pipeline name="consul-2.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CONSUL_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-consul.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">500</param>
                <param name="component_name">consul</param>
                <param name="brand">consul</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CONSUL_BAKE}</param>
                <param name="smoke_tests_file">./consul/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">consul</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/consul</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="consul-2.x-bake" stageName="build" materialName="consul_bake" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/consul.git" dest="consul" materialName="consul">
                    <filter>
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_play.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="consul-2.x-deploy-live" labeltemplate="${COUNT}-deploy-${CONSUL_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy-consul.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">consul</param>
                <param name="brand">consul</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CONSUL_BAKE}</param>
                <param name="smoke_tests_file">./consul/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">consul</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/consul</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="consul-2.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="consul-2.x-bake" stageName="build" materialName="consul_bake" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-tykdashboard-experimental">
        <pipeline name="tykdashboard-2.x-experimental-release" labeltemplate="2.2.${COUNT}-experimental" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git" branch="luis/use-mongodb-atlas">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykdashboard-2.x-experimental-bake" labeltemplate="${TYKDASHBOARD_EXPERIMENTAL_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tykdashboard</param>
                <param name="component_repo">git@github.com:zeebox/webhop-tyk-dashboard.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TYKDASHBOARD_EXPERIMENTAL_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git" branch="luis/use-mongodb-atlas" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tykdashboard-2.x-experimental-release" stageName="build_release" materialName="tykdashboard_experimental_release" />
                <pipeline pipelineName="ansible-tyk-component" stageName="release" materialName="ansible-tyk-component" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-tykdashboard">
        <pipeline name="tykdashboard-2.x-release" labeltemplate="2.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykdashboard-2.x-bake" labeltemplate="${TYKDASHBOARD_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tykdashboard</param>
                <param name="component_repo">git@github.com:zeebox/webhop-tyk-dashboard.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TYKDASHBOARD_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tykdashboard-2.x-release" stageName="build_release" materialName="tykdashboard_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go-release" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
                <pipeline pipelineName="ansible-tyk-component" stageName="release" />
            </materials>
        </pipeline>
        <pipeline name="tykdashboard-2.x-deploy-stage" labeltemplate="${COUNT}-deploy-${TYKDASHBOARD_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykdashboard.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykdashboard</param>
                <param name="brand">tykdashboard</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKDASHBOARD_BAKE}</param>
                <param name="smoke_tests_file">./tykdashboard/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykdashboard</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-dashboard</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykdashboard-2.x-bake" stageName="build" materialName="tykdashboard_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git" dest="tykdashboard" materialName="tykdashboard" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykdashboard-2.x-deploy-live" labeltemplate="${COUNT}-deploy-${TYKDASHBOARD_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykdashboard.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykdashboard</param>
                <param name="brand">tykdashboard</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKDASHBOARD_BAKE}</param>
                <param name="smoke_tests_file">./tykdashboard/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykdashboard</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-dashboard</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykdashboard-2.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="tykdashboard-2.x-bake" stageName="build" materialName="tykdashboard_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-dashboard.git" dest="tykdashboard" materialName="tykdashboard" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-tykpump">
        <pipeline name="tykpump-2.x-release" labeltemplate="2.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-pump.git" branch="luis/initial-work">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykpump-2.x-bake" labeltemplate="${TYKPUMP_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tykpump</param>
                <param name="component_repo">git@github.com:zeebox/webhop-tyk-pump.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TYKPUMP_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-pump.git" branch="luis/initial-work" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tykpump-2.x-release" stageName="build_release" materialName="tykpump_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go-release" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
                <pipeline pipelineName="ansible-tyk-component" stageName="release" />
            </materials>
        </pipeline>
        <pipeline name="tykpump-2.x-deploy-stage" labeltemplate="${COUNT}-deploy-${TYKPUMP_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykpump</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKPUMP_BAKE}</param>
                <param name="smoke_tests_file">../tyk-pump/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tyk-pump</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-pump</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykpump-2.x-bake" stageName="build" materialName="tykpump_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-pump.git" dest="tykpump" materialName="tykpump" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykpump-2.x-deploy-live" labeltemplate="${COUNT}-deploy-${TYKPUMP_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykpump.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykpump</param>
                <param name="brand">tykpump</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_tykpump_BAKE}</param>
                <param name="smoke_tests_file">./tykpump/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykpump</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-pump</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykpump-2.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="tykpump-2.x-bake" stageName="build" materialName="tykpump_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-pump.git" dest="tykpump" materialName="tykpump" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-tykgateway">
        <pipeline name="tykgateway-2.x-release" labeltemplate="2.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-gateway.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykgateway-2.x-bake" labeltemplate="${TYKGATEWAY_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tykgateway</param>
                <param name="component_repo">git@github.com:zeebox/webhop-tyk-gateway.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TYKGATEWAY_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-gateway.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tykgateway-2.x-release" stageName="build_release" materialName="tykgateway_release" />
                <pipeline pipelineName="ansible-tyk-component" stageName="release" materialName="ansible-tyk-component" />
                <pipeline pipelineName="ansible-tyk-gateway" stageName="release" materialName="ansible-tyk-gateway" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go-release" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
            </materials>
        </pipeline>
        <pipeline name="tykgateway-2.x-deploy-stage" labeltemplate="${COUNT}-deploy-${TYKGATEWAY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykgateway.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykgateway</param>
                <param name="brand">tykgateway</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKGATEWAY_BAKE}</param>
                <param name="smoke_tests_file">./tykgateway/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykgateway</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-gateway</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykgateway-2.x-bake" stageName="build" materialName="tykgateway_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-gateway.git" dest="tykgateway" materialName="tykgateway" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykgateway-2.x-deploy-live" labeltemplate="${COUNT}-deploy-${TYKGATEWAY_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykgateway.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykgateway</param>
                <param name="brand">tykgateway</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKGATEWAY_BAKE}</param>
                <param name="smoke_tests_file">./tykgateway/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykgateway</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-gateway</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykgateway-2.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="tykgateway-2.x-bake" stageName="build" materialName="tykgateway_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-gateway.git" dest="tykgateway" materialName="tykgateway" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Webhop-TykMongoDB">
        <pipeline name="tykmongodb-2.x-release" labeltemplate="2.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-mongodb.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykmongodb-2.x-bake" labeltemplate="${TYKMONGODB_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">tykmongodb</param>
                <param name="component_repo">git@github.com:zeebox/webhop-tyk-mongodb.git</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TYKMONGODB_RELEASE}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-tyk-mongodb.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="tykmongodb-2.x-release" stageName="build_release" materialName="tykmongodb_release" />
                <pipeline pipelineName="ansible-mongodb" stageName="release" materialName="ansible-mongodb" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go-release" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
            </materials>
        </pipeline>
        <pipeline name="tykmongodb-2.x-deploy-stage" labeltemplate="${COUNT}-deploy-${TYKMONGODB_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-mongodb.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykmongodb</param>
                <param name="brand">tykmongodb</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKMONGODB_BAKE}</param>
                <param name="smoke_tests_file">./tykmongodb/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykmongodb</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-mongodb</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykmongodb-2.x-bake" stageName="build" materialName="tykmongodb_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-mongodb.git" dest="tykmongodb" materialName="tykmongodb" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="tykmongodb-2.x-deploy-live" labeltemplate="${COUNT}-deploy-${TYKMONGODB_BAKE}" template="manual-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-tykmongodb.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">tykmongodb</param>
                <param name="brand">tykmongodb</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_TYKMONGODB_BAKE}</param>
                <param name="smoke_tests_file">./tykmongodb/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">tykmongodb</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/webhop-tyk-mongodb</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="tykmongodb-2.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="tykmongodb-2.x-bake" stageName="build" materialName="tykmongodb_bake" />
                <git url="git@github.com:zeebox/webhop-tyk-mongodb.git" dest="tykmongodb" materialName="tykmongodb" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="ansible-roles">
        <pipeline name="ansible-sanch-go-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-sanch-go.git" />
                <pipeline pipelineName="sanch-go-1.x-release" stageName="build_release" materialName="sanch_go" />
            </materials>
        </pipeline>
        <pipeline name="ansible-consul-agent-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-consul-agent.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-beamly-metrics-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-beamly-metrics.git" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Platform">
        <pipeline name="kasper-schemeichel-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/kasper-schmeichel.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="webhopbase-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/aws-baseami.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="webhopbase-1.x-bake" labeltemplate="${WEBHOPBASE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">webhopbase</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_WEBHOPBASE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/aws-baseami.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-332ffe25</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/aws-baseami.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-release" stageName="build_release" materialName="webhopbase_release" />
            </materials>
        </pipeline>
        <pipeline name="baseami-2.x-bake" labeltemplate="2.${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">baseami1604</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/aws-baseami.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-cd0f5cb6</value>
                </variable>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.3.1.0</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/aws-baseami.git" branch="rebase-on-16.04">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="baseami-2.x-experimental-bake" labeltemplate="2.${COUNT}-experimental" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">baseami1604experimental</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/aws-baseami.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-cd0f5cb6</value>
                </variable>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.3.1.0</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/aws-baseami.git" branch="add-sysadmin-tooling">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="platform-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">platform</param>
                <param name="component_repo">git@github.com:zeebox/platform.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/platform.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="tests" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="platform-1.x-deploy-ops" labeltemplate="${COUNT}-deploy-${PLATFORM_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">platform</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_PLATFORM_BAKE}</param>
                <param name="smoke_tests_file">./platform/tests/platform.json</param>
                <param name="release_notes" />
                <param name="reponame">platform</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/platform.git" dest="platform">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="platform-1.x-bake" stageName="build" materialName="platform_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="haproxy-1.x-bake" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">haproxy</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/haproxy.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/haproxy.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="HAProxy" template="cloudformation-update">
            <params>
                <param name="component_name">haproxy</param>
                <param name="component_repo">git@github.com:zeebox/haproxy.git</param>
                <param name="us_stage_stack_parameters">DNS=haproxy-stage-us.beamly.com,COUNTRY=us,ENVIRONMENT=stage,INSTANCETYPE=c3.large</param>
                <param name="us_live_stack_parameters">DNS=haproxy-live-us.beamly.com,COUNTRY=us,ENVIRONMENT=live,INSTANCETYPE=c3.large</param>
                <param name="test_instance_size">t2.small</param>
                <param name="us_stage_userdata">deploy/userdata_stage_us</param>
                <param name="us_live_userdata">deploy/userdata_live_us</param>
                <param name="us_stage_stack_name">haproxy-stage-us</param>
                <param name="us_live_stack_name">haproxy-live-us</param>
                <param name="stack_name" />
                <param name="userdata" />
                <param name="stack_parameters" />
                <param name="test_file" />
                <param name="ami_version" />
                <param name="smoke_tests_file" />
                <param name="startup_wait" />
                <param name="template_file" />
                <param name="instance_size" />
                <param name="dns" />
            </params>
            <environmentvariables>
                <variable name="GIT_API_TOKEN">
                    <value>002a569725f660feb9b8585cb89ae1537f42049a</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_NAME">
                    <value>haproxy</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_REPO">
                    <value>git@github.com:zeebox/haproxy.git</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/haproxy.git" materialName="Haproxy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="baseami-1.x-bake" labeltemplate="1.1.${COUNT}">
            <params>
                <param name="puppet_path">puppet</param>
                <param name="component_name">baseami</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/baseami.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-79e55f6f</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/baseami.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="bake_ami">
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_bake --component-name="#{component_name}" --component-version="#{component_version}" --component-sha="#{component_sha}" --ami-version="#{ami_version}" --component-repo="#{component_repo}" --foundation-ami-name="#{foundation_ami_name}" --foundation-ami-version="#{foundation_ami_version}"  ${BUILD_PARAVIRTUAL:+--also-build-paravirtual} --target-regions="#{target_regions}"</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="baseami" isLocked="false">
            <timer onlyOnChanges="true">0 0 6 ? * *</timer>
            <materials>
                <git url="git@github.com:zeebox/baseami.git" materialName="beamly-baseami" />
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="verify-puppet">
                        <tasks>
                            <exec command="/bin/echo">
                                <arg>noop</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bake-base-amis">
                <environmentvariables>
                    <variable name="AWS_ACCESS_KEY">
                        <value />
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value />
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>.</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>git@github.com:zeebox/baseami.git</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>beamlybase</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <environmentvariables>
                            <variable name="ZEEBOX_FOUNDATION_AMI_PARAVIRTUAL">
                                <value>ami-59a1004f</value>
                            </variable>
                            <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                                <value>ami-7fa00169</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="validate-base-amis">
                <jobs>
                    <job name="us">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>bokken --environment ops --country us --component beamlybase --amiversion ${GO_PIPELINE_COUNTER} --testfile</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/sleep">
                                <arg>60</arg>
                                <runif status="passed" />
                            </exec>
                            <rake>
                                <runif status="passed" />
                            </rake>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/mark_validated.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="ice" template="deploy-cloudformation-us-east-only-manual-release">
            <params>
                <param name="region">us-east-1</param>
                <param name="startup_wait">300</param>
                <param name="test_env">ops</param>
                <param name="component_name">ice</param>
                <param name="component_repo">git@github.com:zeebox</param>
                <param name="test_timeout">300</param>
                <param name="stack_name">ice</param>
                <param name="template_parameters">INSTANCESIZE=m1.small</param>
                <param name="country">us</param>
                <param name="component_size">c3.large</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ice.git" />
            </materials>
        </pipeline>
        <pipeline name="flume" template="asgs-update-regions">
            <params>
                <param name="test_env">ops</param>
                <param name="component_name">flumeserver</param>
                <param name="component_repo">git@github.com:zeebox/FlumeServer.git</param>
                <param name="test_timeout">310</param>
                <param name="component_size">m1.small</param>
                <param name="environment">ops</param>
                <param name="release_notes" />
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                    <value>m1.small</value>
                </variable>
                <variable name="ZEEBOX_STARTUP_WAIT">
                    <value>310</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/FlumeServer.git" />
            </materials>
        </pipeline>
        <pipeline name="msp-1.x-release" labeltemplate="1.2.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MicroServiceProxy.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="msp-1.x-bake" labeltemplate="${MSP_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">msp</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MSP_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/MicroServiceProxy.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MicroServiceProxy.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="msp-1.x-release" stageName="build_release" materialName="msp_release" />
            </materials>
        </pipeline>
        <pipeline name="msp-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MSP_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">msp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MSP_BAKE}</param>
                <param name="smoke_tests_file">./msp/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">MicroServiceProxy</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MicroServiceProxy.git" dest="msp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="msp-1.x-bake" stageName="build" materialName="msp_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="msp-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MSP_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">msp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MSP_BAKE}</param>
                <param name="smoke_tests_file">./msp/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE MicroServiceProxy ${GO_DEPENDENCY_LABEL_MSP_BAKE}</param>
                <param name="reponame">MicroServiceProxy</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MicroServiceProxy.git" dest="msp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="msp-1.x-bake" stageName="build" materialName="msp_bake" />
                <pipeline pipelineName="msp-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="pythoncommons" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/pythoncommons.git" />
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="cheesecake" timeout="10">
                        <tasks>
                            <exec command="scripts/test_cheesecake.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="pylint">
                        <tasks>
                            <exec command="scripts/test_pylint.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test">
                <jobs>
                    <job name="run_unittests">
                        <tasks>
                            <exec command="scripts/test_unit_tests_with_coverage.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="cover_unit/index.html" />
                        </tabs>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="cover_unit" />
                        </artifacts>
                    </job>
                    <job name="run_integration_tests">
                        <tasks>
                            <exec command="scripts/test_integration_tests_with_coverage.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="promote">
                <jobs>
                    <job name="promote">
                        <tasks>
                            <exec command="scripts/git_tag_and_merge_release.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_to_all_agents">
                <jobs>
                    <job name="deploy_to_all_agents" runOnAllAgents="true">
                        <tasks>
                            <exec command="/usr/bin/git">
                                <arg>checkout</arg>
                                <arg>release</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/usr/bin/git">
                                <arg>pull</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/usr/bin/sudo">
                                <arg>/opt/zeebox/virtualenvs/scripts_env/bin/pip</arg>
                                <arg>install</arg>
                                <arg>.</arg>
                                <arg>--upgrade</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/usr/bin/sudo">
                                <arg>/opt/zeebox/virtualenvs/autoscaling/bin/pip</arg>
                                <arg>install</arg>
                                <arg>.</arg>
                                <arg>--upgrade</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/usr/bin/sudo">
                                <arg>/usr/bin/git</arg>
                                <arg>checkout</arg>
                                <arg>master</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>rootagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="autoscaling-tested">
            <params>
                <param name="autoscaling_build_prefix">autoscaling-</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_NAME">
                    <value>autoscaling</value>
                </variable>
                <variable name="AUTOSCALING_BUILD_PREFIX">
                    <value>#{autoscaling_build_prefix}</value>
                </variable>
                <variable name="AWS_ACCESS_KEY">
                    <value>AKIAIUWFOYMRX7OVGNOQ</value>
                </variable>
                <variable name="AWS_SECRET_KEY">
                    <value>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</value>
                </variable>
                <variable name="AWS_ACCESS_KEY_ID">
                    <value>AKIAIUWFOYMRX7OVGNOQ</value>
                </variable>
                <variable name="AWS_SECRET_ACCESS_KEY">
                    <value>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</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/autoscaling.git" />
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="pylint">
                        <tasks>
                            <exec command="tests/test_pylint.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="unit_tests">
                        <tasks>
                            <exec command="scripts/prep_virtualenv.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/nosetests">
                                <arg>-v</arg>
                                <arg>-s</arg>
                                <arg>tests/unit/</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_ami_bake">
                <jobs>
                    <job name="ansible_ami_bake">
                        <tasks>
                            <exec command="tests/prep_virtualenv.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="tests/test_ansible_ami_bake.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="puppet_ami_bake">
                        <tasks>
                            <exec command="tests/prep_virtualenv.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="tests/test_puppet_ami_bake.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_ami_test">
                <jobs>
                    <job name="test_ami_test">
                        <tasks>
                            <exec command="tests/prep_virtualenv.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="tests/test_ami_test.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_ami_deploy">
                <jobs>
                    <job name="test_ami_deploy">
                        <environmentvariables>
                            <variable name="ZEEBOX_RELEASE_NOTES">
                                <value>testing deploy notifications work for autoscaling version &lt;GO_PIPELINE_LABEL&gt;</value>
                            </variable>
                            <variable name="ZEEBOX_COMPONENT_REPONAME">
                                <value>autoscaling</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="tests/prep_virtualenv.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="tests/test_ami_deploy.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="promote_to_release">
                <jobs>
                    <job name="promote_to_release">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/git_tag_and_merge_release.sh</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_all_agents">
                <jobs>
                    <job name="deploy" runOnAllAgents="true">
                        <tasks>
                            <exec command="scripts/update_go_agent.sh" />
                        </tasks>
                        <resources>
                            <resource>rootagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="ldap-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">ldap</param>
                <param name="component_repo">git@github.com:zeebox/ldap.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-7fa00169</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>True</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ldap.git" branch="ubuntu-precise">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="SCRIPTS.md" />
                        <ignore pattern="CLIENT_CONFIGURATION.md" />
                        <ignore pattern="docs*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="ldap-1.x-deploy-ops" labeltemplate="${COUNT}-deploy-${LDAP_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">ldap</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LDAP_BAKE}</param>
                <param name="smoke_tests_file">./ldap/tests/us-east-1.json</param>
                <param name="release_notes" />
                <param name="reponame">ldap</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ldap.git" branch="ubuntu-precise" dest="ldap">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="ldap-1.x-bake" stageName="build" materialName="ldap_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="ldap-2.x-bake" labeltemplate="2.${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">ldap</param>
                <param name="component_repo">git@github.com:zeebox/ldap.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami1604</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.2.2.0</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
                <variable name="ROOT_VOLUME_SIZE">
                    <value>100</value>
                </variable>
                <variable name="ANSIBLE_VERBOSITY">
                    <value>3</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ldap.git" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="SCRIPTS.md" />
                        <ignore pattern="CLIENT_CONFIGURATION.md" />
                        <ignore pattern="docs*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-2.x-bake" stageName="build" materialName="baseami" />
            </materials>
        </pipeline>
        <pipeline name="ldap-2.x-deploy-ops" labeltemplate="${COUNT}-deploy-${LDAP_BAKE}" template="manual-deploy-ami-2">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">ldap</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LDAP_BAKE}</param>
                <param name="smoke_tests_file">./ldap/tests/us-east-1.json</param>
                <param name="release_notes" />
                <param name="reponame">ldap</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ldap.git" branch="ubuntu-xenial" shallowClone="true" dest="ldap">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="ldap-2.x-bake" stageName="build" materialName="ldap_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="nat" template="beamly-autoscaling-deploy-ops-only-hvm">
            <params>
                <param name="puppet_path">puppet</param>
                <param name="component_name">nat</param>
                <param name="component_repo">git@github.com:zeebox/nat.git</param>
                <param name="release_notes" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/nat.git" />
            </materials>
        </pipeline>
        <pipeline name="aptcache-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">aptcache</param>
                <param name="component_repo">git@github.com:zeebox/AptCache.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/AptCache.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="tests" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="aptcache-1.x-deploy-ops" labeltemplate="${COUNT}-deploy-${APTCACHE_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">aptcache</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_APTCACHE_BAKE}</param>
                <param name="smoke_tests_file">./AptCache/tests/us-ops.json</param>
                <param name="release_notes" />
                <param name="reponame">AptCache</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/AptCache.git" dest="AptCache">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="aptcache-1.x-bake" stageName="build" materialName="aptcache_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="CleanupAgents" isLocked="false">
            <timer>0 0/30 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/goserver.git" />
                <pipeline pipelineName="goagent-4.x-deploy-build" stageName="deploy_ami" materialName="goagent-4.x-deploy-build" />
                <pipeline pipelineName="goagent-4.x-deploy-task" stageName="deploy_ami" materialName="goagent-4.x-deploy-task" />
            </materials>
            <stage name="CleanupAgents">
                <jobs>
                    <job name="CleanupAgents" elasticProfileId="ecs-agent-python">
                        <tasks>
                            <exec command="python">
                                <arg>ansible/roles/goserver/files/cleanup-agents.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="HAProxy_Config_Update">
            <materials>
                <git url="git@github.com:zeebox/haproxy.git" />
            </materials>
            <stage name="global-update">
                <jobs>
                    <job name="global-update">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/refresh_haproxy_simple_db.py</arg>
                                <arg>--quiet</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="vagrant-prescript">
            <materials>
                <git url="git@github.com:zeebox/vagrant.git" />
            </materials>
            <stage name="upload-to-s3">
                <jobs>
                    <job name="upload-to-s3">
                        <tasks>
                            <exec command="/usr/bin/s3cmd">
                                <arg>put</arg>
                                <arg>--acl-public</arg>
                                <arg>scripts/prep-vagrant.sh</arg>
                                <arg>s3://zeebox-tarballs/prep-vagrant.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="bokken">
            <materials>
                <git url="git@github.com:zeebox/bokken.git" />
            </materials>
            <stage name="verify">
                <jobs>
                    <job name="run_tests">
                        <tasks>
                            <exec command="make">
                                <arg>updatedeps</arg>
                                <arg>test</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="cross_compile">
                        <tasks>
                            <exec command="make">
                                <arg>build</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="sync_to_s3">
                        <tasks>
                            <exec command="make">
                                <arg>upload</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="bokken-2.x-release" labeltemplate="2.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/bokken.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="pythoncommons-2.x" labeltemplate="2.0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/pythoncommons.git" branch="2.x" />
            </materials>
            <stage name="release">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>go_build.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="coverage_html/index.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="target/dist/pythoncommons/dist/*" dest="dist" />
                            <test src="target/reports/TEST-*.xml" dest="unittests" />
                            <artifact src="target/reports/coverage_html" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="platform" template="beamly-simple-ami-bake-no-test">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="autoscaling_build_prefix" />
                <param name="zeebox_component_name">platform</param>
                <param name="component_repo">git@github.com:zeebox/platform.git</param>
                <param name="puppet_path">puppet</param>
                <param name="component_release_script">scripts/build.sh</param>
                <param name="playbook" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/platform.git" />
            </materials>
        </pipeline>
        <pipeline name="gears-1.0.x" labeltemplate="1.0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/gears.git" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="pythoncommons-2.x" stageName="release" materialName="pythoncommons" />
            </materials>
            <stage name="release">
                <jobs>
                    <job name="build">
                        <tasks>
                            <fetchartifact pipeline="pythoncommons-2.x" stage="release" job="build" srcdir="dist" dest="pythoncommons">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>go_build.sh</arg>
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="coverage_html/index.html" />
                        </tabs>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="target/dist/gears/dist/*" dest="dist" />
                            <test src="target/reports/TEST-*.xml" dest="unittests" />
                            <artifact src="target/reports/coverage_html" />
                            <artifact src="target/gears_env*" dest="gears_env" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="general-release">
                <approval type="manual" />
                <jobs>
                    <job name="noop">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>echo "gears general release: rebake and redeploy the world."</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="gears-1.1.x" labeltemplate="1.1.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/gears.git" shallowClone="true" materialName="gears">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="pythoncommons-2.x" stageName="release" materialName="pythoncommons" />
            </materials>
            <stage name="pre-release">
                <jobs>
                    <job name="build">
                        <tasks>
                            <fetchartifact pipeline="pythoncommons-2.x" stage="release" job="build" srcdir="dist" dest="pythoncommons">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>go_build.sh</arg>
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="coverage_html/index.html" />
                        </tabs>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="target/dist/gears/dist/*" dest="dist" />
                            <test src="target/reports/TEST-*.xml" dest="unittests" />
                            <artifact src="target/reports/coverage_html" />
                            <artifact src="target/gears_env*" dest="gears_env" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="general-release">
                <approval type="manual" />
                <jobs>
                    <job name="noop">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>echo "gears general release: rebake and redeploy the world."</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="platform-scripts" labeltemplate="0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/platform-scripts.git" dest="scripts" materialName="scripts" />
                <git url="git@github.com:zeebox/homebrew-tap.git" dest="homebrew" autoUpdate="false" materialName="homebrew" />
            </materials>
            <stage name="tag-and-update-beamly-tap">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="./release.sh" workingdir="scripts">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="widget-scripts" labeltemplate="0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/BuilderLiteScripts.git" dest="scripts" materialName="scripts" />
                <git url="git@github.com:zeebox/homebrew-tap.git" dest="homebrew" autoUpdate="false" materialName="homebrew" />
            </materials>
            <stage name="tag-and-update-beamly-tap">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="scripts/release.sh" workingdir="scripts">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="vpn-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">vpn</param>
                <param name="component_repo">git@github.com:zeebox/vpn.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
                <param name="ZEEBOX_FOUNDATION_AMI_HVM">ami-7fa00169</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-f4cc1de2</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>True</value>
                </variable>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.2.2.0</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/vpn.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="ansible-webhop-component-settings" stageName="release" materialName="ansible-webhop-component-settings" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
            </materials>
        </pipeline>
        <pipeline name="baseami-nodejs-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">baseami-nodejs</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/baseami-nodejs.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/baseami-nodejs.git" materialName="baseami-nodejs" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="baseami-nodejs6-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">baseami-nodejs6</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/baseami-nodejs.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/baseami-nodejs.git" branch="node-v6" materialName="baseami-nodejs6" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="remove-llvm-apt-repo">
            <materials>
                <git url="git@github.com:zeebox/platform-scripts.git" branch="chris/awsauth-keychain" shallowClone="true" autoUpdate="false" />
            </materials>
            <stage name="kill-llvm">
                <jobs>
                    <job name="kill-llvm" runOnAllAgents="true">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f /etc/apt/sources.list.d/llvm.list ]; then sudo rm /etc/apt/sources.list.d/llvm.list &amp;&amp; sudo apt-get update; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="remove-llvm-apt-repo-ops">
            <materials>
                <git url="git@github.com:zeebox/platform-scripts.git" branch="chris/awsauth-keychain" shallowClone="true" autoUpdate="false" />
            </materials>
            <stage name="kill-llvm">
                <jobs>
                    <job name="kill-llvm" runOnAllAgents="true">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f /etc/apt/sources.list.d/llvm.list ]; then sudo rm /etc/apt/sources.list.d/llvm.list &amp;&amp; sudo apt-get update; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="remove-llvm-apt-repo-live" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/platform-scripts.git" branch="chris/awsauth-keychain" shallowClone="true" autoUpdate="false" />
            </materials>
            <stage name="kill-llvm">
                <jobs>
                    <job name="kill-llvm" runOnAllAgents="true">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f /etc/apt/sources.list.d/llvm.list ]; then sudo rm /etc/apt/sources.list.d/llvm.list &amp;&amp; sudo apt-get update; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="remove-llvm-apt-repo-stage" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/platform-scripts.git" branch="chris/awsauth-keychain" shallowClone="true" autoUpdate="false" />
            </materials>
            <stage name="kill-llvm">
                <jobs>
                    <job name="kill-llvm" runOnAllAgents="true">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f /etc/apt/sources.list.d/llvm.list ]; then sudo rm /etc/apt/sources.list.d/llvm.list &amp;&amp; sudo apt-get update; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="haproxy-1.x-deploy-stage" labeltemplate="${AMI}" isLocked="false" template="cloudformation-update">
            <params>
                <param name="component_name">haproxy</param>
                <param name="component_repo">git@github.com:zeebox/haproxy.git</param>
                <param name="test_instance_size">t2.small</param>
                <param name="stack_parameters">DNS=haproxy-stage-us.beamly.com,COUNTRY=us,ENVIRONMENT=stage,INSTANCETYPE=c3.large</param>
                <param name="userdata">haproxy/deploy/userdata_stage_us</param>
                <param name="stack_name">haproxy-stage-us</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI}</param>
                <param name="smoke_tests_file">haproxy/tests/us-stage.json</param>
                <param name="startup_wait">300</param>
                <param name="template_file">haproxy/cloudformation/haproxy.template</param>
                <param name="instance_size">c3.large</param>
                <param name="dns">haproxy-stage-us.beamly.com</param>
            </params>
            <environmentvariables>
                <variable name="GIT_API_TOKEN">
                    <value>002a569725f660feb9b8585cb89ae1537f42049a</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_NAME">
                    <value>haproxy</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_REPO">
                    <value>git@github.com:zeebox/haproxy.git</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/haproxy.git" shallowClone="true" dest="haproxy" materialName="Haproxy" />
                <pipeline pipelineName="haproxy-1.x-bake" stageName="build" materialName="ami" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="haproxy-1.x-deploy-live" labeltemplate="${AMI}" isLocked="false" template="cloudformation-update">
            <params>
                <param name="component_name">haproxy</param>
                <param name="component_repo">git@github.com:zeebox/haproxy.git</param>
                <param name="test_instance_size">t2.small</param>
                <param name="stack_parameters">DNS=haproxy-live-us.beamly.com,COUNTRY=us,ENVIRONMENT=live,INSTANCETYPE=c3.large</param>
                <param name="userdata">haproxy/deploy/userdata_live_us</param>
                <param name="stack_name">haproxy-live-us</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI}</param>
                <param name="smoke_tests_file">haproxy/tests/us-live.json</param>
                <param name="startup_wait">300</param>
                <param name="template_file">haproxy/cloudformation/haproxy.template</param>
                <param name="instance_size">c3.large</param>
                <param name="dns">haproxy-live-us.beamly.com</param>
            </params>
            <environmentvariables>
                <variable name="GIT_API_TOKEN">
                    <value>002a569725f660feb9b8585cb89ae1537f42049a</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_NAME">
                    <value>haproxy</value>
                </variable>
                <variable name="ZEEBOX_COMPONENT_REPO">
                    <value>git@github.com:zeebox/haproxy.git</value>
                </variable>
                <variable name="AMI_VERSION">
                    <value>${GO_DEPENDENCY_LABEL_AMI}</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/haproxy.git" shallowClone="true" dest="haproxy" materialName="Haproxy" />
                <pipeline pipelineName="haproxy-1.x-deploy-stage" stageName="verifyamis" materialName="stage" />
                <git url="git@github.com:zeebox/autoscaling.git" branch="amiversion" shallowClone="true" dest="autoscaling" materialName="autoscaling" />
                <pipeline pipelineName="haproxy-1.x-bake" stageName="build" materialName="ami" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="webhopbase-nodejs6-1.x-bake" labeltemplate="webhop-1.0.${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">webhopbase-nodejs6</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/baseami-nodejs.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/baseami-nodejs.git" branch="node-v6" materialName="baseami-nodejs6" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="gocd-ecsagents-deploy" isLocked="true" template="terraform-no-artifact">
            <params>
                <param name="Brand">ops</param>
                <param name="AWSAccount">beamly</param>
                <param name="Environment">ops</param>
                <param name="Region">us-east-1</param>
                <param name="Libretto">gocd-ecsagents</param>
                <param name="TFDirectory">tf-platform/</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/tf-platform.git" invertFilter="true" dest="tf-platform">
                    <filter>
                        <ignore pattern="libretti/#{Libretto}/**/*.*" />
                        <ignore pattern="Makefile" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/tf-beamly-gocd-escagents.git" dest="tf-beamly-gocd-escagents" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="ScheduledTasks">
        <pipeline name="aws_cleanup" isLocked="false">
            <timer>0 0 10,18 ? * MON-FRI</timer>
            <materials>
                <git url="git@github.com:zeebox/autoscaling.git" branch="release" />
            </materials>
            <stage name="cleanup">
                <approval type="manual" />
                <jobs>
                    <job name="empty_s3_buckets">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_s3_buckets.py</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="available_ebs_volumes">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_available_ebs_volumes.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="terminate_stopped_instances">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_stopped_instances.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="unused_launch_configurations">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_launch_configs_lacking_asgs.py</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="test_instances">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_gouser_instances.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="enable_cross_zone_load_balancing">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_cross_zone_load_balancing.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="instances_without_tags">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_instances_without_tags.py</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="disable_monitoring_on_non_autoscaled_instances">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/disable_monitoring_on_non_autoscaled_instances.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="snapshots_without_amis">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_unused_snapshots.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="unused_amis">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/clean_amis.py.DISABLED</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="UpdateDashboards" isLocked="false">
            <timer>0 0,20,40 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/Dashboarder.git" dest="dashboardscripts" materialName="dashboardscripts" />
                <git url="git@github.com:beamly/fastlydash.git" dest="fastlydash" materialName="fastlydash" />
                <git url="git@github.com:zeebox/webhop-dashboards.git" dest="webhop-dashboards" materialName="webhop-dashboards" />
            </materials>
            <stage name="UpdateDashboards">
                <jobs>
                    <job name="UpdateDashboards" timeout="15">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/webhop/bin/python" workingdir="webhop-dashboards">
                                <arg>update-pipeline-dashboard.py</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/dashboard/bin/python" workingdir="fastlydash">
                                <arg>fastlydash.py</arg>
                                <arg>50159d3314cd3743e9cf5847757d184f</arg>
                                <arg>--s3bucket</arg>
                                <arg>zeebox-tarballs</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/dashboard/bin/python" workingdir="fastlydash">
                                <arg>fastlydash.py</arg>
                                <arg>912c9dbe37194ed05899603751dfb8a0</arg>
                                <arg>--s3bucket</arg>
                                <arg>zeebox-tarballs</arg>
                                <arg>--filename</arg>
                                <arg>fastly-stats-webhop.html</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="./run_all.sh" workingdir="dashboardscripts/geckoboard">
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/dashboard/bin/python" workingdir="dashboardscripts/geckoboard">
                                <arg>html-dynanmodb-table-summary.py</arg>
                                <arg>--s3bucket</arg>
                                <arg>zeebox-tarballs</arg>
                                <arg>--filename</arg>
                                <arg>dynamodb-summary.html</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/dashboard/bin/python" workingdir="dashboardscripts/geckoboard">
                                <arg>html-elb-summary.py</arg>
                                <arg>--s3bucket</arg>
                                <arg>zeebox-tarballs</arg>
                                <arg>--filename</arg>
                                <arg>elb-stats.html</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="TrimUSElasticSearchIndices" isLocked="false">
            <timer>0 0 10 * * ? *</timer>
            <environmentvariables>
                <variable name="HOST">
                    <value>zeebox-us-east-1.ops.us.elasticsearch.beamly.com</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/goagent.git" />
            </materials>
            <stage name="TrimIndices">
                <approval type="manual" />
                <jobs>
                    <job name="TrimIndices">
                        <environmentvariables>
                            <variable name="DELETE_OLDER_THAN">
                                <value>18</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash" workingdir="scripts">
                                <arg>manageindices.bash</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="AutoscalingStatus" isLocked="false">
            <timer>0 * * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/Autoscaling.git" />
            </materials>
            <stage name="run_script">
                <jobs>
                    <job name="grab_asg_sizes" elasticProfileId="ecs-agent-python">
                        <tasks>
                            <exec command="python">
                                <arg>scripts/manage/asg_sizes_to_graphite.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="UpdateConfluenceFromLDAP" isLocked="false">
            <timer>0 0/15 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/ldap.git" materialName="ldap" />
            </materials>
            <stage name="update">
                <jobs>
                    <job name="updateConfluence">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/update-confluence.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="go2graphite" isLocked="false">
            <timer>0 0,20,40 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/go2graphite.git" />
            </materials>
            <stage name="run">
                <jobs>
                    <job name="run">
                        <tasks>
                            <exec command="sbt">
                                <arg>-no-colors</arg>
                                <arg>run</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="watchdogs" isLocked="false">
            <timer>0 0 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/watchdogs.git" dest="watchdogs" materialName="watchdogs" />
                <git url="git@github.com:zeebox/security-audit-config.git" dest="config" materialName="config" />
                <pipeline pipelineName="export-outlook365-users" stageName="export_users" />
            </materials>
            <stage name="run_audit">
                <environmentvariables>
                    <variable name="WATCHDOG_CONFIG_LOCATION">
                        <value>../../config/config.py</value>
                    </variable>
                    <variable name="WATCHDOG_CONFIG_DIR">
                        <value>../../config/</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="run_audit">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>--clear</arg>
                                <arg>/tmp/watchdogs</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/watchdogs/bin/pip">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>watchdogs/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/watchdogs/bin/pip">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>config/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/watchdogs/bin/py.test" workingdir="watchdogs/enabled_tests">
                                <arg>--html=watchdogs-report.html</arg>
                                <arg>--self-contained-html</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/aws_cli/bin/aws">
                                <arg>--region=eu-central-1</arg>
                                <arg>s3</arg>
                                <arg>cp</arg>
                                <arg>watchdogs/enabled_tests/watchdogs-report.html</arg>
                                <arg>s3://platform-location-restricted/</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>task</resource>
                            <resource>v5</resource>
                        </resources>
                        <artifacts>
                            <test src="watchdogs/enabled_tests/watchdogs-report.html" />
                            <test src="watchdogs/enabled_tests/watchdogs-report.xml" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Facebook_Brand_Calibration_Pruning" isLocked="false">
            <timer>0 0/30 * 1/1 * ? *</timer>
            <environmentvariables>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="prune">
                <jobs>
                    <job name="prune">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts/fb_ads/ad_hoc_scripts">
                                <arg>fb_calibration_pruning.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="export-outlook365-users" isLocked="false">
            <timer>0 0 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/watchdogs.git" dest="watchdogs" materialName="watchdogs" />
                <git url="git@github.com:zeebox/security-audit-config.git" dest="config" materialName="config" />
            </materials>
            <stage name="export_users">
                <jobs>
                    <job name="export_outlook_users">
                        <environmentvariables>
                            <variable name="PSModulePath">
                                <value>C:\Users\Administrator\Documents\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules\;C:\Program Files (x86)\AWS Tools\PowerShell\</value>
                            </variable>
                            <variable name="OFFICE_365_USERNAME">
                                <value>readonlyaudit@beamly.com</value>
                            </variable>
                            <variable name="OFFICE_365_PASSWORD">
                                <value>Xaso4721</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe">
                                <arg>watchdogs/scripts/export-office365-outlook-users.ps1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>powershell</resource>
                        </resources>
                        <artifacts>
                            <artifact src="users.csv" />
                            <artifact src="admins.txt" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="watchdogs-ecs" isLocked="false">
            <timer>0 0 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/watchdogs.git" dest="watchdogs" materialName="watchdogs" />
                <git url="git@github.com:zeebox/security-audit-config.git" dest="config" materialName="config" />
                <pipeline pipelineName="export-outlook365-users" stageName="export_users" materialName="export-outlook365-users" />
            </materials>
            <stage name="run_audit">
                <environmentvariables>
                    <variable name="WATCHDOG_CONFIG_LOCATION">
                        <value>../../config/config.py</value>
                    </variable>
                    <variable name="WATCHDOG_CONFIG_DIR">
                        <value>../../config/</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="run_audit" elasticProfileId="ecs-agent-python">
                        <tasks>
                            <exec command="pip">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>watchdogs/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="pip">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>config/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="py.test" workingdir="watchdogs/enabled_tests">
                                <arg>--html=watchdogs-report.html</arg>
                                <arg>--junitxml=watchdogs-report.xml</arg>
                                <arg>--self-contained-html</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>xmllint --format watchdogs/enabled_tests/watchdogs-report.xml &gt; junit.xml</arg>
                                <runif status="any" />
                            </exec>
                            <exec command="aws">
                                <arg>--region=eu-central-1</arg>
                                <arg>s3</arg>
                                <arg>cp</arg>
                                <arg>watchdogs/enabled_tests/watchdogs-report.html</arg>
                                <arg>s3://platform-location-restricted/</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Report" path="watchdogs-report.html" />
                        </tabs>
                        <artifacts>
                            <artifact src="watchdogs/enabled_tests/watchdogs-report.html" />
                            <test src="junit.xml" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="Stage_On_Off">
        <pipeline name="Stage_us_on" template="Stage_power_switch">
            <params>
                <param name="country">us</param>
                <param name="power">on</param>
            </params>
            <timer>0 30 7 ? * MON-FRI</timer>
            <materials>
                <git url="git@github.com:zeebox/autoscaling.git" />
            </materials>
        </pipeline>
        <pipeline name="Stage_us_off" template="Stage_power_switch">
            <params>
                <param name="country">us</param>
                <param name="power">off</param>
            </params>
            <timer>0 30 1 ? * *</timer>
            <materials>
                <git url="git@github.com:zeebox/autoscaling.git" />
            </materials>
        </pipeline>
        <pipeline name="allumer-le-stage">
            <materials>
                <git url="git@github.com:zeebox/allumer-le-stage.git" />
            </materials>
            <stage name="toS3">
                <jobs>
                    <job name="toS3">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>s3cmd put * s3://allumer-le-stage.zeebox.com --recursive</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="PersistenceTiers">
        <pipeline name="Graphite_AMI" template="beamly-us-autoscaling-deploy-ops-only">
            <params>
                <param name="startup_wait">120</param>
                <param name="zeebox_test_file" />
                <param name="puppet_path">puppet</param>
                <param name="component_name">graphite</param>
                <param name="component_repo">github.com:zeebox/graphite.git</param>
                <param name="instance_size">c3.large</param>
                <param name="autoscaling_scripts_dir">scripts/deploy</param>
                <param name="environment">ops</param>
                <param name="release_notes" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/graphite.git" />
            </materials>
        </pipeline>
        <pipeline name="neo4j-enterprise-173.x-bake" labeltemplate="173.0.0-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">neo4j</param>
                <param name="component_version">173.0.0</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/neo4j-enterprise.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/neo4j-enterprise.git" branch="chris/ansible">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Metrics_STAGE">
        <pipeline name="Metrics_fb_ad_export_STAGE" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="QUBOLE_AUTH_TOKEN" secure="true">
                    <encryptedValue>/Kqt++iHvfLIRM9Uw+8HroohXtA11J7qBqc0G+OL6+WT1GOkVIq3RnA1OhuUS99z++7zumjooyTn44EmvrFMapixE7vIwyHJ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage" cleanWorkingDir="true">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>twitter_metrics/build/scripts/build_and_publish.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_FB_image_export" isLocked="false">
            <timer>0 45 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_ad_images.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="metrics_get_fb_videos" isLocked="false">
            <timer>0 15 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCwIp5C6ISvrNHIY43AWlnsGm2J0y/BW6nV0YWD8YKYmR7+6llFPOBE0oY42EVMAr2uGoBrkhAJ020Fq7pE80YFzpQvUaIBHPS5ctcdSKGmZiovJaqU5wpiRwyB2kdg5AFfIOeTFxeg/LeDYkAWpIMF4tlRQqKZfQ2GySRNZCyUeQRa6BjtGoEPVfV7vphA53YtX7EV52O62PlrZWsXjPvG+</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_ad_videos.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_insights_api_check_STAGE" isLocked="false">
            <timer>0 0 8 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/insight_api_checker.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_high_level_metrics" isLocked="false">
            <timer>0 0 6 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script" elasticProfileId="ecs-agent-python">
                        <environmentvariables>
                            <variable name="PYTHONPATH">
                                <value>"$PYTHONPATH:$CWD/python_scripts/</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/global_daily_metrics_usd.py</arg>
                                <arg />
                                <runif status="passed" />
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metric_fb_account_campaign_checker" isLocked="false">
            <timer>0 0 7,12,15,19 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="sftp_username" secure="true">
                    <encryptedValue>Kn6uV7FfnpA=</encryptedValue>
                </variable>
                <variable name="sftp_password" secure="true">
                    <encryptedValue>Lj8dYWRTooI=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/new_campaign_checker.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_weekly_spend_data" isLocked="false">
            <timer>0 0 0,2,4,6,8,10,12,14,16,18,20,22 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/generate_brand_client_files.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_COTY_STAGE" isLocked="false">
            <timer>0 10,20,30,40,50 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/facebook_ad_export.py env=stage customer_id=00002 fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_EXTERNAL_STAGE" isLocked="false">
            <timer>0 45 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/facebook_ad_export.py env=stage excluded_customer_ids=00002,00001 fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_BEAMLY_STAGE" isLocked="false">
            <timer>0 3 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/facebook_ad_export.py env=stage customer_id=00001 fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_creative_insights" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_campaign_creatives_data.py campaign_filter=last_run</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Mterics_create_customer_files" isLocked="false">
            <timer>0 0 2,8,12,16,20 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/create_customer_data_files.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_get_fb_countries" isLocked="false">
            <timer>0 0 6 ? * 6L</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_countries.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_get_video_insights_by_duration" isLocked="false">
            <timer>0 0 5 * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_video_data_per_campaign.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_check_metrics_format" isLocked="false">
            <timer>0 15 7 ? * *</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/check_campaign_metrics.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_update_campaign_end_dates" isLocked="false">
            <timer>0 15 6 ? * *</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/check_campaign_end_dates.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="DOJO_datorama_email_ingest" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="o365_account">
                    <value>dataingest@beamly.com</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="o365_key" secure="true">
                    <encryptedValue>TP34GrZ/Pu1DM2N4Z7WxtISIUzRrmrOu</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./pymail/requirements.txt</arg>
                                <arg>--script ./pymail/pymailIntercept.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="TEST_LOCAL_ENV" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCwIp5C6ISvrNHIY43AWlnsGm2J0y/BW6nV0YWD8YKYmR7+6llFPOBE0oY42EVMAr2uGoBrkhAJ020Fq7pE80YFzpQvUaIBHPS5ctcdSKGmZiovJaqU5wpiRwyB2kdg5AFfIOeTFxeg/LeDYkAWpIMF4tlRQqKZfQ2GySRNZCyUeQRa6BjtGoEPVfV7vphA53YtX7EV52O62PlrZWsXjPvG+</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="local-virtualenv" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_ad_images.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_rerun_historical_campaigns" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/utils/rerun_fb_campaign_extract_with_missing_ads.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_dojo_metrics_STAGE" labeltemplate="1.0.${COUNT}" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="QUBOLE_AUTH_TOKEN" secure="true">
                    <encryptedValue>/Kqt++iHvfLIRM9Uw+8HroohXtA11J7qBqc0G+OL6+WT1GOkVIq3RnA1OhuUS99z++7zumjooyTn44EmvrFMapixE7vIwyHJ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage" cleanWorkingDir="true">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/bin/bash" workingdir="dojo_metrics">
                                <arg>-c</arg>
                                <arg>./build/scripts/build_and_publish.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_rerun_campaign_extract_STAGE" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="QUBOLE_AUTH_TOKEN" secure="true">
                    <encryptedValue>/Kqt++iHvfLIRM9Uw+8HroohXtA11J7qBqc0G+OL6+WT1GOkVIq3RnA1OhuUS99z++7zumjooyTn44EmvrFMapixE7vIwyHJ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage" cleanWorkingDir="true">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>twitter_metrics/build/scripts/build_and_publish.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="Wordpress">
        <pipeline name="wp-taxonomy-events" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-taxonomy-events</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_category_events_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-taxonomy-events.git" />
            </materials>
        </pipeline>
        <pipeline name="wp-content-events" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-content-events</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_category_events_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-content-events.git" />
            </materials>
        </pipeline>
        <pipeline name="article-service-1.x-release" labeltemplate="1.2.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ArticleService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-addressable-workers-0.x-release" stageName="build_release" materialName="express-addressable-workers" />
                <pipeline pipelineName="express-requestid-0.x-release" stageName="build_release" materialName="express-requestid" />
                <pipeline pipelineName="request-q-0.x-release" stageName="build_release" materialName="request-q" />
                <pipeline pipelineName="node-rediswrap-0.x-release" stageName="build_release" materialName="rediswrap" />
                <pipeline pipelineName="node-response-envelope" stageName="build_release" materialName="response-envelope" />
            </materials>
        </pipeline>
        <pipeline name="article-service-1.x-bake" labeltemplate="${ARTICLES_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">articles</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ARTICLES_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ArticleService.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ArticleService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="article-service-1.x-release" stageName="build_release" materialName="articles_release" />
            </materials>
        </pipeline>
        <pipeline name="article-service-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ARTICLES_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">articles</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ARTICLES_BAKE}</param>
                <param name="smoke_tests_file">./articleservice/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">ArticleService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ArticleService.git" dest="articleservice">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="article-service-1.x-bake" stageName="build" materialName="articles_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="article-service-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ARTICLES_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">articles</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ARTICLES_BAKE}</param>
                <param name="smoke_tests_file">./articleservice/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Article Service ${GO_DEPENDENCY_LABEL_ARTICLES_BAKE}</param>
                <param name="reponame">ArticleService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ArticleService.git" dest="articleservice">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="article-service-1.x-bake" stageName="build" materialName="articles_bake" />
                <pipeline pipelineName="article-service-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="editorialwp-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EditorialWordpress.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="editorialwp-1.x-bake" labeltemplate="${EDITORIALWP_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">editorialwp</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_EDITORIALWP_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/EditorialWordpress.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EditorialWordpress.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="editorialwp-1.x-release" stageName="build_release" materialName="editorialwp_release" />
                <pipeline pipelineName="wp-taxonomy-events" stageName="release" materialName="wp_taxonomy_events_release" />
                <pipeline pipelineName="wp-content-events" stageName="release" materialName="wp_content_events_release" />
                <pipeline pipelineName="wp-menu-events" stageName="release" materialName="wp_menu_events_release" />
                <pipeline pipelineName="wp-events-core" stageName="release" materialName="wp_events_core_release" />
                <pipeline pipelineName="wp-beamly-gallery" stageName="release" materialName="wp_beamly_gallery_release" />
                <pipeline pipelineName="wp-article-stats" stageName="release" materialName="wp_article_stats_release" />
            </materials>
        </pipeline>
        <pipeline name="editorialwp-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${EDITORIALWP_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">editorialwp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_EDITORIALWP_BAKE}</param>
                <param name="smoke_tests_file">./EditorialWordpress/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">EditorialWordpress</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EditorialWordpress.git" dest="EditorialWordpress">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="editorialwp-1.x-bake" stageName="build" materialName="editorialwp_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="editorialwp-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${EDITORIALWP_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">editorialwp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_EDITORIALWP_BAKE}</param>
                <param name="smoke_tests_file">./EditorialWordpress/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Editorial Wordpress ${GO_DEPENDENCY_LABEL_EDITORIALWP_SERVICE_BAKE}</param>
                <param name="reponame">EditorialWordpress</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/EditorialWordpress.git" dest="EditorialWordpress">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="editorialwp-1.x-bake" stageName="build" materialName="editorialwp_bake" />
                <pipeline pipelineName="editorialwp-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="build-article-topologies-1.x" labeltemplate="0.1.${COUNT}" template="sbt-release-1">
            <materials>
                <git url="git@github.com:zeebox/StormArticleTopology.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="storm-common-1.x" stageName="release" materialName="storm-common" />
            </materials>
        </pipeline>
        <pipeline name="deploy-article-topology-stage-us" labeltemplate="${COUNT}-${upstream}" template="deploy-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.article.ArticleTopology</param>
                <param name="environment">stage</param>
                <param name="nexus_name">article-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">article-topology.jar</param>
                <param name="topology_name">article-topology</param>
                <param name="nimbus_host">nimbus01.us.stage.storm.beamly.com</param>
                <param name="subproject_dir">article-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-taxonomy-topology-stage-us" labeltemplate="${COUNT}-${upstream}" template="deploy-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.taxonomy.TaxonomyTopology</param>
                <param name="environment">stage</param>
                <param name="nexus_name">taxonomy-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">taxonomy-topology.jar</param>
                <param name="topology_name">taxonomy-topology</param>
                <param name="nimbus_host">nimbus01.us.stage.storm.beamly.com</param>
                <param name="subproject_dir">taxonomy-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-article-pageview-topology-stage-us" labeltemplate="${COUNT}-${upstream}" template="deploy-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.article.ArticlePageViewTopology</param>
                <param name="environment">stage</param>
                <param name="nexus_name">article-pageview-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">article-pageview-topology.jar</param>
                <param name="topology_name">article-pageview-topology</param>
                <param name="nimbus_host">nimbus01.us.stage.storm.beamly.com</param>
                <param name="subproject_dir">article-pageview-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-article-topology-live-us" labeltemplate="${COUNT}-${upstream}" template="deploy-live-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.article.ArticleTopology</param>
                <param name="environment">live</param>
                <param name="nexus_name">article-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">article-topology.jar</param>
                <param name="topology_name">article-topology</param>
                <param name="nimbus_host">nimbus01.us.live.storm.beamly.com</param>
                <param name="subproject_dir">article-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-taxonomy-topology-live-us" labeltemplate="${COUNT}-${upstream}" template="deploy-live-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.taxonomy.TaxonomyTopology</param>
                <param name="environment">live</param>
                <param name="nexus_name">taxonomy-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">taxonomy-topology.jar</param>
                <param name="topology_name">taxonomy-topology</param>
                <param name="nimbus_host">nimbus01.us.live.storm.beamly.com</param>
                <param name="subproject_dir">taxonomy-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-article-pageview-topology-live-us" labeltemplate="${COUNT}-${upstream}" template="deploy-live-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.article.ArticlePageViewTopology</param>
                <param name="environment">live</param>
                <param name="nexus_name">article-pageview-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">article-pageview-topology.jar</param>
                <param name="topology_name">article-pageview-topology</param>
                <param name="nimbus_host">nimbus01.us.live.storm.beamly.com</param>
                <param name="subproject_dir">article-pageview-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="ArticleServicePR" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="1696fa8c-276c-4fca-9e3c-342cd7674987">
                    <filter>
                        <ignore pattern="package.json" />
                    </filter>
                </scm>
            </materials>
        </pipeline>
        <pipeline name="build-article-topologies-1.x-PR" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="6ada5833-7620-44cc-b514-bfb167da9cd9" />
            </materials>
        </pipeline>
        <pipeline name="menu-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MenuService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-addressable-workers-0.x-release" stageName="build_release" materialName="express-addressable-workers" />
                <pipeline pipelineName="express-requestid-0.x-release" stageName="build_release" materialName="express-requestid" />
                <pipeline pipelineName="request-q-0.x-release" stageName="build_release" materialName="request-q" />
            </materials>
        </pipeline>
        <pipeline name="menu-service-1.x-bake" labeltemplate="${MENUS_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">menus</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MENUS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/MenuService.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MenuService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="menu-service-1.x-release" stageName="build_release" materialName="menus_release" />
            </materials>
        </pipeline>
        <pipeline name="menu-service-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MENUS_BAKE}" isLocked="false" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">menus</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MENUS_BAKE}</param>
                <param name="smoke_tests_file">./menuservice/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">MenuService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MenuService.git" dest="menuservice">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="menu-service-1.x-bake" stageName="build" materialName="menus_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="menu-service-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MENUS_BAKE}" isLocked="false" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">menus</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MENUS_BAKE}</param>
                <param name="smoke_tests_file">./menuservice/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Menu Service ${GO_DEPENDENCY_LABEL_MENUS_BAKE}</param>
                <param name="reponame">MenuService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/MenuService.git" dest="menuservice">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="menu-service-1.x-bake" stageName="build" materialName="menus_bake" />
                <pipeline pipelineName="menu-service-1.x-deploy-stage" stageName="test_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="wp-events-core" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-events-core</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_category_events_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-events-core.git" />
            </materials>
        </pipeline>
        <pipeline name="wp-menu-events" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-menu-events</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_category_events_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-menu-events.git" />
            </materials>
        </pipeline>
        <pipeline name="deploy-menu-topology-stage-us" labeltemplate="${COUNT}-${upstream}" template="deploy-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.menu.MenuTopology</param>
                <param name="environment">stage</param>
                <param name="nexus_name">menu-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">menu-topology.jar</param>
                <param name="topology_name">menu-topology</param>
                <param name="nimbus_host">nimbus01.us.stage.storm.beamly.com</param>
                <param name="subproject_dir">menu-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="deploy-menu-topology-live-us" labeltemplate="${COUNT}-${upstream}" template="deploy-live-storm-topology-from-nexus-and-git">
            <params>
                <param name="nexus_path">com/beamly/realtime</param>
                <param name="topology_repo">git@github.com:zeebox/StormArticleTopology.git</param>
                <param name="main_class">com.zeebox.event.menu.MenuTopology</param>
                <param name="environment">live</param>
                <param name="nexus_name">menu-topology</param>
                <param name="main_args">false</param>
                <param name="jar_name">menu-topology.jar</param>
                <param name="topology_name">menu-topology</param>
                <param name="nimbus_host">nimbus01.us.live.storm.beamly.com</param>
                <param name="subproject_dir">menu-topology/</param>
                <param name="country">us</param>
                <param name="upstream_version">${GO_DEPENDENCY_LABEL_UPSTREAM}</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_COMPONENT_REPONAME">
                    <value>StormArticleTopology</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/StormTopologyDeployment.git" branch="use-nexus-and-github" />
                <pipeline pipelineName="build-article-topologies-1.x" stageName="release" materialName="upstream" />
            </materials>
        </pipeline>
        <pipeline name="wp-article-stats" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-article-stats</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_category_events_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-article-stats.git" />
            </materials>
        </pipeline>
        <pipeline name="wp-beamly-gallery" template="wordpress-plugin">
            <params>
                <param name="wp_plugin_name">wp-beamly-gallery</param>
                <param name="wp_version">latest</param>
                <param name="wp_test_db_name">wp_beamly_gallery_tests</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/wp-beamly-gallery.git" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="CentralBrandDatabase">
        <pipeline name="centralbranddatabase-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabase.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="node-rediswrap-0.x-release" stageName="build_release" materialName="rediswrap" />
                <pipeline pipelineName="node-response-envelope" stageName="build_release" materialName="response-envelope" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabase-1.x-bake" labeltemplate="${CENTRALBRANDDATABASE_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">centralbranddatabase</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/CentralBrandDatabase.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">baseami-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabase.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="centralbranddatabase-1.x-release" stageName="build_release" materialName="centralbranddatabase_release" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabase-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CENTRALBRANDDATABASE_BAKE}" isLocked="false" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">centralbranddatabase</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASE_BAKE}</param>
                <param name="smoke_tests_file">./centralbranddatabase/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">CentralBrandDatabase</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabase.git" dest="centralbranddatabase">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="centralbranddatabase-1.x-bake" stageName="build" materialName="centralbranddatabase_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabase-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CENTRALBRANDDATABASE_BAKE}" isLocked="false" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">300</param>
                <param name="component_name">centralbranddatabase</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASE_BAKE}</param>
                <param name="smoke_tests_file">./centralbranddatabase/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Central Brand Database ${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASE_BAKE}</param>
                <param name="reponame">CentralBrandDatabase</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabase.git" dest="centralbranddatabase">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="centralbranddatabase-1.x-bake" stageName="build" materialName="centralbranddatabase_bake" />
                <pipeline pipelineName="centralbranddatabase-1.x-deploy-stage" stageName="test_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabase-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="NPM_CONFIG_PREFIX">
                    <value />
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="d06aa8d7-0171-4601-913c-e50b9a567ce5" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-ringmaster">
        <pipeline name="ringmaster-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringmaster-service.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="node-rediswrap-0.x-release" stageName="build_release" materialName="rediswrap" />
                <pipeline pipelineName="node-response-envelope" stageName="build_release" materialName="response-envelope" />
            </materials>
        </pipeline>
        <pipeline name="ringmaster-service-webhop-1.x-bake" labeltemplate="${RINGMASTER_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">webhop.yml</param>
                <param name="component_name">ringmaster</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_RINGMASTER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ringmaster-service.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringmaster-service.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="ringmaster-service-1.x-release" stageName="build_release" materialName="ringmaster_release" />
                <pipeline pipelineName="ansible-consul-agent-1.x-release" stageName="release" materialName="consul_agent" />
            </materials>
        </pipeline>
        <pipeline name="ringmaster-service-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${RINGMASTER_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">ringmaster</param>
                <param name="brand" />
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RINGMASTER_BAKE}</param>
                <param name="smoke_tests_file">./ringmaster/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">ringmaster-service</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ringmaster-service</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringmaster-service.git" dest="ringmaster">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="ringmaster-service-webhop-1.x-bake" stageName="build" materialName="ringmaster_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ringmaster-service-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${RINGMASTER_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">ringmaster</param>
                <param name="brand" />
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RINGMASTER_BAKE}</param>
                <param name="smoke_tests_file">./ringmaster/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">ringmaster-service</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ringmaster-service</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ringmaster-service.git" dest="ringmaster">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="ringmaster-service-webhop-1.x-bake" stageName="build" materialName="ringmaster_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ringmaster-service-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="ringmaster-deploy-stage" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Backups">
        <pipeline name="github-backup" isLocked="false">
            <timer>0 0 8 ? * *</timer>
            <environmentvariables>
                <variable name="GITHUB_TOKEN" secure="true">
                    <encryptedValue>YPm1A+rTCtz6IAafFtLcNHS3d+ejTM4JZDDl6/A3sDkNqZ0Po9HDL95vUkPwTEbP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/goagent.git" />
            </materials>
            <stage name="backup">
                <jobs>
                    <job name="backup">
                        <tasks>
                            <exec command="scripts/backup-github.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="elasticsearch-articles-live-backup" template="elasticsearch-backup">
            <params>
                <param name="cluster">articles</param>
                <param name="country">us</param>
                <param name="environment">live</param>
                <param name="index">live_articles</param>
            </params>
            <timer>0 0/30 * ? * * *</timer>
            <materials>
                <git url="git@github.com:zeebox/elasticsearch.git" branch="go/empty-material-for-backup-jobs" autoUpdate="false" />
            </materials>
        </pipeline>
        <pipeline name="elasticsearch-articles-stage-backup" template="elasticsearch-backup">
            <params>
                <param name="cluster">articles</param>
                <param name="country">us</param>
                <param name="environment">stage</param>
                <param name="index">stage_articles</param>
            </params>
            <timer>0 0 * ? * * *</timer>
            <materials>
                <git url="git@github.com:zeebox/elasticsearch.git" branch="go/empty-material-for-backup-jobs" autoUpdate="false" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="node-modules">
        <pipeline name="node-share-link-util-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="node-module-release-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="component_unit_test_command">scripts/unit-test.sh</param>
                <param name="component_release_command">scripts/publish.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-share-link-util.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-beamly-render" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/express-beamly-render.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-beamly-render-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/express-beamly-render.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-realtime-tracking" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-realtime-tracking.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-realtime-tracking-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-realtime-tracking.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-service-client" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-service-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-service-client-2.x-release" labeltemplate="2.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-service-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cinder-js" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/cinder-js.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cinder-js-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/cinder-js.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-beamly-clients" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="4ac34ecb-9358-4a66-b8b3-6f7a6b6e8159" />
            </materials>
        </pipeline>
        <pipeline name="node-beamly-clients-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-beamly-clients.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-form-validators" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-form-validators.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-form-validators-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-form-validators.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="perf-dash" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="e989d4e2-5492-407b-a173-4e613d182965" />
            </materials>
        </pipeline>
        <pipeline name="perf-dash-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/perf-dash.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-autobot-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-autobot.git" materialName="beamly-autobot">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-anonymousId-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-anonymousId.git" materialName="anonymous_id">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-autoscaling-0.x-release" labeltemplate="0.15.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <pipeline pipelineName="express-access-logger-flume-0.x-release" stageName="build_release" materialName="express-access-logger-flume" />
                <pipeline pipelineName="express-requestid-0.x-release" stageName="build_release" materialName="express-requestid" />
                <pipeline pipelineName="express-se4-0.x-release" stageName="build_release" materialName="express-se4" />
                <pipeline pipelineName="flume-http-0.x-release" stageName="build_release" materialName="flume-http" />
                <pipeline pipelineName="request-q-0.x-release" stageName="build_release" materialName="request-q" />
                <pipeline pipelineName="winston-flume-0.x-release" stageName="build_release" materialName="winston-flume" />
                <git url="git@github.com:zeebox/node-autoscaling.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="express-addressable-workers-0.x-release" stageName="build_release" materialName="express-addressable-workers" />
                <pipeline pipelineName="node-punisher-1.x-release" stageName="build_release" materialName="punisher" />
            </materials>
        </pipeline>
        <pipeline name="node-punisher-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-punisher.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="react-beamly-b2b-1.x-release" labeltemplate="1.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/react-beamly-b2b.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-access-logger-flume-0.x-release" labeltemplate="0.4.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <pipeline pipelineName="winston-flume-0.x-release" stageName="build_release" materialName="winston-flume" />
                <pipeline pipelineName="flume-http-0.x-release" stageName="build_release" materialName="flume-http" />
                <git url="git@github.com:zeebox/node-express-access-logger-flume.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-requestid-0.x-release" labeltemplate="0.2.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-express-requestid.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-se4-0.x-release" labeltemplate="0.12.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <pipeline pipelineName="express-addressable-workers-0.x-release" stageName="build_release" materialName="express-addressable-workers" />
                <git url="git@github.com:zeebox/node-express-se4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="express-addressable-workers-0.x-release" labeltemplate="0.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-express-addressable-workers.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="flume-http-0.x-release" labeltemplate="0.5.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-flume-http.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="request-q-0.x-release" labeltemplate="0.1.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-request-q.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="winston-flume-0.x-release" labeltemplate="0.2.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <pipeline pipelineName="flume-http-0.x-release" stageName="build_release" materialName="flume-http" />
                <git url="git@github.com:zeebox/node-winston-flume.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-scss-lint-1.x-release" labeltemplate="2.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-scss-lint.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="gulp-tasks-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/gulp-tasks.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-azkaban" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-azkaban.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-js-lint-v2" labeltemplate="2.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-js-lint.git" branch="versions/v2">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-js-lint-v3" labeltemplate="3.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-js-lint.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-response-envelope" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-response-envelope.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-rediswrap-0.x-release" labeltemplate="0.1.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/node-rediswrap.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="node-autoscaling-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="b9a2c68f-be26-44ad-a234-3914a25f538b" />
            </materials>
        </pipeline>
        <pipeline name="node-punisher-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="55146cdf-e2cf-448d-8d12-84e9ffcb7eb6" />
            </materials>
        </pipeline>
        <pipeline name="node-response-envelope-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="7016719f-ceaf-4c75-98d2-5f3b431c46d8" />
            </materials>
        </pipeline>
        <pipeline name="beamly-content-client-3.x-release" labeltemplate="3.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-content-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-service-client-2.x-release" stageName="build_release" materialName="beamly_service_client" />
            </materials>
        </pipeline>
        <pipeline name="beamly-bazaarvoice-client-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-bazaarvoice-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-service-client-2.x-release" stageName="build_release" materialName="beamly_service_client" />
            </materials>
        </pipeline>
        <pipeline name="beamly-geoip-client-2.x-release" labeltemplate="2.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-geoip-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-service-client-2.x-release" stageName="build_release" materialName="beamly_service_client" />
            </materials>
        </pipeline>
        <pipeline name="beamly-store-client-2.x-release" labeltemplate="2.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-store-client.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="beamly-service-client-2.x-release" stageName="build_release" materialName="beamly_service_client" />
            </materials>
        </pipeline>
        <pipeline name="beamly-component-generator" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-generator.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beamly-component-generator-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/beamly-component-generator.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="component-base-config" labeltemplate="1.0.${COUNT}" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/component-base-config.git" />
            </materials>
        </pipeline>
        <pipeline name="component-base-config-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/</param>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/component-base-config.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="eslint-plugin-beamly-es5-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/eslint-plugin-beamly-es5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="core-content-transformation-tester-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="coverage_reports_path">coverage/</param>
                <param name="test_reports_path">junitresults.xml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-transformation-tester.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="tyk" />
    <pipelines group="webhop-systemprofessionalapp">
        <pipeline name="systemprofessionalapp-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh systemprofessionalapp</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-bake" labeltemplate="${SYSTEMPROFESSIONALAPP_RELEASE}-b${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">systemprofessionalapp</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_SYSTEMPROFESSIONALAPP_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/systemprofessionalapp.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-bc34a8aa</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="pre-release" materialName="gears" />
                <pipeline pipelineName="systemprofessionalapp-1.x-release" stageName="build_release" materialName="systemprofessionalapp_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${SYSTEMPROFESSIONALAPP_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SYSTEMPROFESSIONALAPP_BAKE}</param>
                <param name="smoke_tests_file">./systemprofessionalapp/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">systemprofessionalapp</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/systemprofessionalapp.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git" dest="systemprofessionalapp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-bake" stageName="build" materialName="systemprofessionalapp_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">systemprofessionalapp-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://systemprofessionalapp-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${SYSTEMPROFESSIONALAPP_BAKE}" template="manual-deploy-webhop-ami-with-db-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SYSTEMPROFESSIONALAPP_BAKE}</param>
                <param name="smoke_tests_file">./systemprofessionalapp/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">systemprofessionalapp</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/systemprofessionalapp.com</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git" dest="systemprofessionalapp">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-bake" stageName="build" materialName="systemprofessionalapp_bake" />
                <pipeline pipelineName="systemprofessionalapp-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">systemprofessionalapp.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-total-service-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-deploy-live" stageName="deploy_ami" materialName="live_migration" />
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">systemprofessionalapp</param>
                <param name="brand">systemprofessionalapp</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://systemprofessionalapp.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="systemprofessionalapp-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="systemprofessionalapp-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/systemprofessionalapp.com.git" materialName="systemprofessionalapp_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-beyonceparfums">
        <pipeline name="beyonceparfums-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh beyonceparfums</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beyonce.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-bake" labeltemplate="${BEYONCEPARFUMS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">beyonceparfums</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_BEYONCEPARFUMS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:beyonce.4.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:beyonce.4.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="beyonceparfums-1.x-release" stageName="build_release" materialName="beyonceparfums_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${BEYONCEPARFUMS_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BEYONCEPARFUMS_BAKE}</param>
                <param name="smoke_tests_file">./beyonceparfums/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">beyonceparfums</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/beyonce/git-4/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beyonce.4.git" dest="beyonceparfums">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-bake" stageName="build" materialName="beyonceparfums_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-beyonceparfums-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:beyonce.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-beyonceparfums-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-beyonceparfums-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${BEYONCEPARFUMS_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BEYONCEPARFUMS_BAKE}</param>
                <param name="smoke_tests_file">./beyonceparfums/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">beyonceparfums</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/beyonce/git-4/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beyonce.4.git" dest="beyonceparfums" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-bake" stageName="build" materialName="beyonceparfums_bake" />
                <pipeline pipelineName="beyonceparfums-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.beyonceparfums.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:beyonce.4.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beyonceparfums.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beyonceparfums.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="beyonceparfums-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beyonceparfums</param>
                <param name="brand">beyonceparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beyonceparfums.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 41 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 41 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=beyonceparfums aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="beyonceparfums-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:beyonce.4.git" materialName="beyonceparfums_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="zookeeper">
        <pipeline name="zookeeper-1.x-bake" labeltemplate="47.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">zookeeper</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/zookeeper.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/zookeeper.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="zookeeper-1.x-deploy-stage" labeltemplate="${ZOOKEEPER_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">140</param>
                <param name="component_name">zookeeper</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ZOOKEEPER_BAKE}</param>
                <param name="smoke_tests_file">./zookeeper/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">zookeeper</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/zookeeper.git" dest="zookeeper">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="zookeeper-1.x-bake" stageName="build" materialName="zookeeper_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="zookeeper-1.x-deploy-live" labeltemplate="${ZOOKEEPER_BAKE}-deploy-${COUNT}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">m1.small</param>
                <param name="startup_wait">140</param>
                <param name="component_name">zookeeper</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ZOOKEEPER_BAKE}</param>
                <param name="smoke_tests_file">./zookeeper/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Zookeeper ${GO_DEPENDENCY_LABEL_ZOOKEEPER_BAKE}</param>
                <param name="reponame">zookeeper</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/zookeeper.git" dest="zookeeper">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="zookeeper-1.x-bake" stageName="build" materialName="zookeeper_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="zookeeper-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="rabbitmq" />
    <pipelines group="Consul">
        <pipeline name="consul-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">consul</param>
                <param name="component_repo">git@github.com:zeebox/consul.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/consul.git" branch="v1.x" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="consul-1.x-deploy-ops" labeltemplate="${COUNT}-deploy-${CONSUL_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">consul</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CONSUL_BAKE}</param>
                <param name="smoke_tests_file">./consul/tests/us-ops-status.json</param>
                <param name="release_notes" />
                <param name="reponame">consul</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/consul.git" dest="consul">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="consul-1.x-bake" stageName="build" materialName="consul_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="ConsulBackup" isLocked="false">
            <timer>0 0/10 * * * ?</timer>
            <materials>
                <git url="git@github.com:zeebox/consul.git" />
            </materials>
            <stage name="backup">
                <jobs>
                    <job name="backup_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/consul/bin/python">
                                <arg>scripts/consul_backup.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="graphiteami">
        <pipeline name="graphite-1.x-bake" labeltemplate="1.0.${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_name">graphite</param>
                <param name="component_repo">git@github.com:zeebox/graphite.git</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/graphite.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="tests" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
            </materials>
        </pipeline>
        <pipeline name="graphite-1.x-deploy-ops" labeltemplate="${COUNT}-deploy-${GRAPHITE_BAKE}" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">c3.large</param>
                <param name="startup_wait">120</param>
                <param name="component_name">graphite</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_GRAPHITE_BAKE}</param>
                <param name="smoke_tests_file">./graphite/tests/us-live-status.json</param>
                <param name="release_notes" />
                <param name="reponame">graphite</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/graphite.git" dest="graphite">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="graphite-1.x-bake" stageName="build" materialName="graphite_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="azkaban">
        <pipeline name="azkaban-2.5.x-bake" labeltemplate="2.5.x-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">azkaban</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/azkaban.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.1.2.0</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/azkaban.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-2.5.x-deploy-stage" labeltemplate="${COUNT}-deploy-${AZKABAN_BAKE}" isLocked="false" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">azkaban</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AZKABAN_BAKE}</param>
                <param name="smoke_tests_file">./azkaban/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">azkaban</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/azkaban.git" dest="azkaban" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="azkaban-2.5.x-bake" stageName="build" materialName="azkaban_bake" />
            </materials>
        </pipeline>
        <pipeline name="azkaban-2.5.x-deploy-live" labeltemplate="${COUNT}-deploy-${AZKABAN_BAKE}" isLocked="false" template="manual-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.medium</param>
                <param name="startup_wait">150</param>
                <param name="component_name">azkaban</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AZKABAN_BAKE}</param>
                <param name="smoke_tests_file">./azkaban/tests/us-live-status.json</param>
                <param name="release_notes" />
                <param name="reponame">azkaban</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/azkaban.git" dest="azkaban" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="azkaban-2.5.x-bake" stageName="build" materialName="azkaban_bake" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop">
        <pipeline name="ansible-webhop-base-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:webhop/ansible-webhop-base.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-apache2-pagespeed-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:webhop/ansible-apache2-pagespeed.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-php5-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:webhop/ansible-php5.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-drush" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:webhop/ansible-drush.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-bootstrap-drupal-vagrant" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:webhop/ansible-bootstrap-drupal-vagrant.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-gluster-autoregister" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-gluster-autoregister.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-ec2-automount" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-ec2-automount.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-autoassociate-eip" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-autoassociate-eip.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-nodejs-1.x" labeltemplate="1.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-nodejs.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-docker-1.x" labeltemplate="1.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-docker.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-ubuntu-ecs-agent-1.x" labeltemplate="1.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-ubuntu-ecs-agent.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-webhop-component-settings" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-webhop-component-settings.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-gluster-client" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-gluster-client.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-webhop-drupal-settings" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-webhop-drupal-settings.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-webhop-monitoring" labeltemplate="1.0.${COUNT}" isLocked="false" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-webhop-monitoring.git" />
            </materials>
        </pipeline>
        <pipeline name="webhop-vagrant-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="vagrant-1">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="vagrant_build_artifact_path">vagrant</param>
                <param name="vagrantfile_build_path">Vagrantfile</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-vagrant.git" />
            </materials>
        </pipeline>
        <pipeline name="zendesk-article-upload" labeltemplate="1.0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/webhop-zendesk-articles.git" dest="zendesk-upload" materialName="zendesk-upload" />
            </materials>
            <stage name="upload_to_zendesk">
                <jobs>
                    <job name="upload">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/zendesk/bin/python" workingdir="zendesk-upload">
                                <arg>upload_articles.py</arg>
                                <arg>articles/</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="ansible-tyk-gateway" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-tyk-gateway.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-tyk-dashboard" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-tyk-dashboard.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-tyk-pump" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-tyk-pump.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-tyk-component" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-tyk-component.git" />
            </materials>
        </pipeline>
        <pipeline name="ansible-mongodb" template="ansible-release-1">
            <materials>
                <git url="git@github.com:zeebox/ansible-mongodb.git" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2atomicparfumsdrupal">
        <pipeline name="cc2atomicparfumsdrupal-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cc2atomicparfumsdrupal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumsdrupal-1.x-bake" labeltemplate="${CC2ATOMICPARFUMSDRUPAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2atomicparfumsdrupal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2ATOMICPARFUMSDRUPAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/atomicparfums-drupal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name" />
                <param name="foundation_ami_version" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-drupal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="cc2atomicparfumsdrupal-1.x-release" stageName="build_release" materialName="cc2atomicparfumsdrupal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumsdrupal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2ATOMICPARFUMSDRUPAL_BAKE}" template="auto-deploy-webhop-cc2drupal-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cc2atomicparfumsdrupal</param>
                <param name="brand">cc2atomicparfums</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2ATOMICPARFUMSDRUPAL_BAKE}</param>
                <param name="smoke_tests_file">../cc2atomicparfums-drupal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2atomicparfums-drupal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/atomicparfums-drupal</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-drupal.git" dest="cc2atomicparfums-drupal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumsdrupal-1.x-bake" stageName="build" materialName="cc2atomicparfumsdrupal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumsdrupal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cc2atomicparfumsdrupal</param>
                <param name="brand">cc2atomicparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumsdrupal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumsdrupal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cc2atomicparfumsdrupal</param>
                <param name="brand">cc2atomicparfums</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">admin-atomic-parfums-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumsdrupal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/atomicparfums-drupal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2atomicparfumssite">
        <pipeline name="cc2atomicparfumssite-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="express-beamly-render-1.x-release" stageName="build_release" materialName="express_beamly_render" />
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumssite-1.x-bake" labeltemplate="${CC2ATOMICPARFUMSSITE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cc2atomicparfumssite</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CC2ATOMICPARFUMSSITE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/atomicparfums-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="cc2atomicparfumssite-1.x-release" stageName="build_release" materialName="cc2atomicparfumssite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumssite-1.x-assetupload-stage" labeltemplate="${CC2ATOMICPARFUMSSITE_RELEASE}-upload-${COUNT}" isLocked="false" template="shell-command-1">
            <params>
                <param name="command">scripts/populate-asset-cache.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumssite-1.x-release" stageName="build_release" materialName="cc2atomicparfumssite_release" />
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumssite-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CC2ATOMICPARFUMSSITE_BAKE}" template="auto-deploy-webhop-cc2site-ami-1">
            <params>
                <param name="deploy_playbook">deploy-cc2.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">600</param>
                <param name="component_name">cc2atomicparfumssite</param>
                <param name="brand">cc2atomicparfums</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CC2ATOMICPARFUMSSITE_BAKE}</param>
                <param name="smoke_tests_file">./cc2atomicparfums-site/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cc2atomicparfums-site</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/atomicparfums-site</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-site.git" dest="cc2atomicparfums-site">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumssite-1.x-bake" stageName="build" materialName="cc2atomicparfumssite_bake" />
                <pipeline pipelineName="cc2atomicparfumssite-1.x-assetupload-stage" stageName="stage" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumssite-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-2">
            <params>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumssite-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <git url="git@github.com:cotyinc/atomicparfums-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cc2atomicparfumssite-1.x-post-release-acceptance-tests-stage" template="acceptance-tests">
            <params>
                <param name="test_profile">staging_tests</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/atomicparfums-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cc2atomicparfumssite-1.x-post-release-cdn-update-stage" stageName="cdn-update" materialName="deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cc2">
        <pipeline name="cc2maxfactorsite-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">./scripts/pull-request.sh</param>
            </params>
            <materials>
                <scm ref="ec9bce4b-cfcc-43b9-a74d-804bfeae5b29" />
            </materials>
        </pipeline>
        <pipeline name="cc2escadasite-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">./scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="8baee2f1-eaa7-4876-b37e-34e5fbf27305" />
            </materials>
        </pipeline>
        <pipeline name="cc2marcjacobssite-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">./scripts/pull-request.sh</param>
            </params>
            <materials>
                <scm ref="5fe16b2b-9b4e-410a-baa5-b8f9ef262fd6" />
            </materials>
        </pipeline>
        <pipeline name="cc2sallyhansen-pr" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">./scripts/pull-request.sh</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/sallyhansen-site.git" materialName="sallyhansen-site.git" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-jilsander">
        <pipeline name="jilsander-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh jilsander</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-bake" labeltemplate="${JILSANDER_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">jilsander</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_JILSANDER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/jilsanderfragrances.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="jilsander-1.x-release" stageName="build_release" materialName="jilsander_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${JILSANDER_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JILSANDER_BAKE}</param>
                <param name="smoke_tests_file">./jilsander/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jilsander</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/jil-sander/git-4/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git" dest="jilsander">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-bake" stageName="build" materialName="jilsander_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-jilsanderfragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-jilsanderfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-jilsanderfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${JILSANDER_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_JILSANDER_BAKE}</param>
                <param name="smoke_tests_file">./jilsander/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">jilsander</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/jil-sander/git-4/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git" dest="jilsander" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-bake" stageName="build" materialName="jilsander_bake" />
                <pipeline pipelineName="jilsander-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.jilsanderfragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.jilsanderfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.jilsanderfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="jilsander-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">jilsander</param>
                <param name="brand">jilsander</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.jilsanderfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 8 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="jilsander-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 8 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=jilsander aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="jilsander-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/jilsanderfragrances.com.git" materialName="jilsander_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-balenciagafragrance">
        <pipeline name="balenciagafragrance-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh balenciagafragrance</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:balanciaga.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-bake" labeltemplate="${BALENCIAGAFRAGRANCE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">balenciagafragrance</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_BALENCIAGAFRAGRANCE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:balanciaga.3.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:balanciaga.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="balenciagafragrance-1.x-release" stageName="build_release" materialName="balenciagafragrance_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${BALENCIAGAFRAGRANCE_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BALENCIAGAFRAGRANCE_BAKE}</param>
                <param name="smoke_tests_file">./balenciagafragrance/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">balenciagafragrance</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/balanciaga/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:balanciaga.3.git" dest="balenciagafragrance">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-bake" stageName="build" materialName="balenciagafragrance_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-balenciagafragrance-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:balanciaga.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-balenciagafragrance-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-balenciagafragrance-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${BALENCIAGAFRAGRANCE_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BALENCIAGAFRAGRANCE_BAKE}</param>
                <param name="smoke_tests_file">./balenciagafragrance/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">balenciagafragrance</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/balanciaga/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:balanciaga.3.git" dest="balenciagafragrance" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-bake" stageName="build" materialName="balenciagafragrance_bake" />
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.balenciagafragrance.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:balanciaga.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.balenciagafragrance.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.balenciagafragrance.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="balenciagafragrance-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">balenciagafragrance</param>
                <param name="brand">balenciagafragrance</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.balenciagafragrance.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 3 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 3 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=balenciagafragrance aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="balenciagafragrance-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:balanciaga.3.git" materialName="balenciagafragrance_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-beckham">
        <pipeline name="beckham-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh beckham</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beckham-fragrance.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-bake" labeltemplate="${BECKHAM_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">beckham</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_BECKHAM_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:beckham-fragrance.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:beckham-fragrance.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="beckham-1.x-release" stageName="build_release" materialName="beckham_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${BECKHAM_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">beckham</param>
                <param name="brand">beckham</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BECKHAM_BAKE}</param>
                <param name="smoke_tests_file">./beckham/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">beckham</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/beckham-fragrance/git-2/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beckham-fragrance.2.git" dest="beckham">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-bake" stageName="build" materialName="beckham_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-beckham-fragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:beckham-fragrance.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-beckham-fragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-beckham-fragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${BECKHAM_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">beckham</param>
                <param name="brand">beckham</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_BECKHAM_BAKE}</param>
                <param name="smoke_tests_file">./beckham/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">beckham</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/beckham-fragrance/git-2/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:beckham-fragrance.2.git" dest="beckham" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-bake" stageName="build" materialName="beckham_bake" />
                <pipeline pipelineName="beckham-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.beckham-fragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:beckham-fragrance.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beckham-fragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beckham-fragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="beckham-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">beckham</param>
                <param name="brand">beckham</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.beckham-fragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 16 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="beckham-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 16 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=beckham aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="beckham-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:beckham-fragrance.2.git" materialName="beckham_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-astor">
        <pipeline name="astor-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh astor</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:astor.12.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-bake" labeltemplate="${ASTOR_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">astor</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_ASTOR_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:astor.12.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:astor.12.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="astor-1.x-release" stageName="build_release" materialName="astor_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${ASTOR_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">astor</param>
                <param name="brand">astor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ASTOR_BAKE}</param>
                <param name="smoke_tests_file">./astor/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">astor</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/astor/git-12/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:astor.12.git" dest="astor">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-bake" stageName="build" materialName="astor_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-astorcosmetics-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:astor.12.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-astorcosmetics-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-astorcosmetics-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${ASTOR_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">astor</param>
                <param name="brand">astor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ASTOR_BAKE}</param>
                <param name="smoke_tests_file">./astor/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">astor</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/astor/git-12/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:astor.12.git" dest="astor" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-bake" stageName="build" materialName="astor_bake" />
                <pipeline pipelineName="astor-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.astorcosmetics.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:astor.12.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.astorcosmetics.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.astorcosmetics.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="astor-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">astor</param>
                <param name="brand">astor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.astorcosmetics.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 5 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="astor-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 5 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=astor aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="astor-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:astor.12.git" materialName="astor_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-katyperry">
        <pipeline name="katyperry-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh katyperry</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:katy-perry.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-bake" labeltemplate="${KATYPERRY_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">katyperry</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_KATYPERRY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:katy-perry.2.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:katy-perry.2.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="katyperry-1.x-release" stageName="build_release" materialName="katyperry_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${KATYPERRY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_KATYPERRY_BAKE}</param>
                <param name="smoke_tests_file">./katyperry/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">katyperry</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/katy-perry/git-2/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:katy-perry.2.git" dest="katyperry">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-bake" stageName="build" materialName="katyperry_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-katyperryfragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:katy-perry.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-katyperryfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-katyperryfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${KATYPERRY_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_KATYPERRY_BAKE}</param>
                <param name="smoke_tests_file">./katyperry/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">katyperry</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/katy-perry/git-2/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:katy-perry.2.git" dest="katyperry" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-bake" stageName="build" materialName="katyperry_bake" />
                <pipeline pipelineName="katyperry-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.katyperryfragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:katy-perry.2.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.katyperryfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.katyperryfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="katyperry-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">katyperry</param>
                <param name="brand">katyperry</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.katyperryfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 21 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="katyperry-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 21 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=katyperry aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="katyperry-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:katy-perry.2.git" materialName="katyperry_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-lancaster">
        <pipeline name="lancaster-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh lancaster</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:lancaster.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-bake" labeltemplate="${LANCASTER_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">lancaster</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_LANCASTER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:lancaster.5.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:lancaster.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="lancaster-1.x-release" stageName="build_release" materialName="lancaster_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${LANCASTER_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LANCASTER_BAKE}</param>
                <param name="smoke_tests_file">./lancaster/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">lancaster</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/lancaster/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:lancaster.5.git" dest="lancaster">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-bake" stageName="build" materialName="lancaster_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-lancaster-beauty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:lancaster.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-lancaster-beauty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-lancaster-beauty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${LANCASTER_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_LANCASTER_BAKE}</param>
                <param name="smoke_tests_file">./lancaster/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">lancaster</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/lancaster/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:lancaster.5.git" dest="lancaster" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-bake" stageName="build" materialName="lancaster_bake" />
                <pipeline pipelineName="lancaster-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.lancaster-beauty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:lancaster.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.lancaster-beauty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.lancaster-beauty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="lancaster-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">lancaster</param>
                <param name="brand">lancaster</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.lancaster-beauty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 16 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="lancaster-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 16 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=lancaster aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="lancaster-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:lancaster.5.git" materialName="lancaster_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-manhattan">
        <pipeline name="manhattan-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh manhattan</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-bake" labeltemplate="${MANHATTAN_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">manhattan</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MANHATTAN_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:manhattan-cosmetics.3.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="manhattan-1.x-release" stageName="build_release" materialName="manhattan_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MANHATTAN_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MANHATTAN_BAKE}</param>
                <param name="smoke_tests_file">./manhattan/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">manhattan</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/manhattan-cosmetics/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git" dest="manhattan">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-bake" stageName="build" materialName="manhattan_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-manhattan-de.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-manhattan-de.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-manhattan-de.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MANHATTAN_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MANHATTAN_BAKE}</param>
                <param name="smoke_tests_file">./manhattan/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">manhattan</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/manhattan-cosmetics/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git" dest="manhattan" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-bake" stageName="build" materialName="manhattan_bake" />
                <pipeline pipelineName="manhattan-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.manhattan.de</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.manhattan.de/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.manhattan.de/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="manhattan-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">manhattan</param>
                <param name="brand">manhattan</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.manhattan.de/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 43 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="manhattan-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 43 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=manhattan aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manhattan-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:manhattan-cosmetics.3.git" materialName="manhattan_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-marcjacobs">
        <pipeline name="marcjacobs-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh marcjacobs</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-bake" labeltemplate="${MARCJACOBS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">marcjacobs</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MARCJACOBS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:dotmarcjacobs-com.7.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="marcjacobs-1.x-release" stageName="build_release" materialName="marcjacobs_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MARCJACOBS_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MARCJACOBS_BAKE}</param>
                <param name="smoke_tests_file">./marcjacobs/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">marcjacobs</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/dotmarcjacobs-com/git-7/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git" dest="marcjacobs">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-bake" stageName="build" materialName="marcjacobs_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-marcjacobsfragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-marcjacobsfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-marcjacobsfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MARCJACOBS_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MARCJACOBS_BAKE}</param>
                <param name="smoke_tests_file">./marcjacobs/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">marcjacobs</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/dotmarcjacobs-com/git-7/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git" dest="marcjacobs" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-bake" stageName="build" materialName="marcjacobs_bake" />
                <pipeline pipelineName="marcjacobs-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.marcjacobsfragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.marcjacobsfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.marcjacobsfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="marcjacobs-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">marcjacobs</param>
                <param name="brand">marcjacobs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.marcjacobsfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 16 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="marcjacobs-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 16 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=marcjacobs aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="marcjacobs-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:dotmarcjacobs-com.7.git" materialName="marcjacobs_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-misssporty">
        <pipeline name="misssporty-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh misssporty</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miss-sporty.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-bake" labeltemplate="${MISSSPORTY_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">misssporty</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MISSSPORTY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:miss-sporty.3.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:miss-sporty.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="misssporty-1.x-release" stageName="build_release" materialName="misssporty_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MISSSPORTY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MISSSPORTY_BAKE}</param>
                <param name="smoke_tests_file">./misssporty/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">misssporty</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/miss-sporty/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miss-sporty.3.git" dest="misssporty">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-bake" stageName="build" materialName="misssporty_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">uk-miss-sporty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:miss-sporty.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://uk-miss-sporty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://uk-miss-sporty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MISSSPORTY_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MISSSPORTY_BAKE}</param>
                <param name="smoke_tests_file">./misssporty/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">misssporty</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/miss-sporty/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:miss-sporty.3.git" dest="misssporty" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-bake" stageName="build" materialName="misssporty_bake" />
                <pipeline pipelineName="misssporty-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">uk.miss-sporty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:miss-sporty.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://uk.miss-sporty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://uk.miss-sporty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="misssporty-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">misssporty</param>
                <param name="brand">misssporty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://uk.miss-sporty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 44 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="misssporty-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 44 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=misssporty aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="misssporty-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:miss-sporty.3.git" materialName="misssporty_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-newyorkcolor">
        <pipeline name="newyorkcolor-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh newyorkcolor</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:new-york-color.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-bake" labeltemplate="${NEWYORKCOLOR_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">newyorkcolor</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_NEWYORKCOLOR_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:new-york-color.5.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:new-york-color.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="newyorkcolor-1.x-release" stageName="build_release" materialName="newyorkcolor_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${NEWYORKCOLOR_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_NEWYORKCOLOR_BAKE}</param>
                <param name="smoke_tests_file">./newyorkcolor/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">newyorkcolor</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/new-york-color/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:new-york-color.5.git" dest="newyorkcolor">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-bake" stageName="build" materialName="newyorkcolor_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-newyorkcolor-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:new-york-color.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-newyorkcolor-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-newyorkcolor-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${NEWYORKCOLOR_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_NEWYORKCOLOR_BAKE}</param>
                <param name="smoke_tests_file">./newyorkcolor/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">newyorkcolor</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/new-york-color/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:new-york-color.5.git" dest="newyorkcolor" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-bake" stageName="build" materialName="newyorkcolor_bake" />
                <pipeline pipelineName="newyorkcolor-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.newyorkcolor.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:new-york-color.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.newyorkcolor.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.newyorkcolor.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="newyorkcolor-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">newyorkcolor</param>
                <param name="brand">newyorkcolor</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.newyorkcolor.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 48 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 48 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=newyorkcolor aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="newyorkcolor-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:new-york-color.5.git" materialName="newyorkcolor_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-playboy">
        <pipeline name="playboy-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh playboy</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:playboy-fragrance.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-bake" labeltemplate="${PLAYBOY_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">playboy</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_PLAYBOY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:playboy-fragrance.5.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:playboy-fragrance.5.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="playboy-1.x-release" stageName="build_release" materialName="playboy_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${PLAYBOY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">playboy</param>
                <param name="brand">playboy</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_PLAYBOY_BAKE}</param>
                <param name="smoke_tests_file">./playboy/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">playboy</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/playboy-fragrance/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:playboy-fragrance.5.git" dest="playboy">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-bake" stageName="build" materialName="playboy_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-playboyfragrances-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:playboy-fragrance.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-playboyfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-playboyfragrances-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${PLAYBOY_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">playboy</param>
                <param name="brand">playboy</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_PLAYBOY_BAKE}</param>
                <param name="smoke_tests_file">./playboy/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">playboy</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/playboy-fragrance/git-5/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:playboy-fragrance.5.git" dest="playboy" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-bake" stageName="build" materialName="playboy_bake" />
                <pipeline pipelineName="playboy-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.playboyfragrances.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:playboy-fragrance.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.playboyfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.playboyfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="playboy-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">playboy</param>
                <param name="brand">playboy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.playboyfragrances.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 7 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="playboy-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 7 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=playboy aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="playboy-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:playboy-fragrance.5.git" materialName="playboy_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-sassoon">
        <pipeline name="sassoon-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh sassoon</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sassoon.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-bake" labeltemplate="${SASSOON_RELEASE}-b${COUNT}" template="component-runtime-3">
            <params>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_name">sassoon</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_SASSOON_RELEASE}</param>
                <param name="component_repo">git@github.com:cotyinc/www.sassoon.com.git</param>
            </params>
            <environmentvariables>
                <variable name="PACKER_ANSIBLE_VERSION">
                    <value>2.0.2.0</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/www.sassoon.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="sassoon-1.x-release" stageName="build_release" materialName="sassoon_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${SASSOON_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SASSOON_BAKE}</param>
                <param name="smoke_tests_file">../sassoon/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">sassoon</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/www.sassoon.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sassoon.com.git" dest="sassoon">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-bake" stageName="build" materialName="sassoon_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <environmentvariables>
                <variable name="DRUPAL_VERSION">
                    <value>8</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-sassoon-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/www.sassoon.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-sassoon-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-sassoon-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${SASSOON_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SASSOON_BAKE}</param>
                <param name="smoke_tests_file">./sassoon/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">sassoon</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/www.sassoon.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sassoon.com.git" dest="sassoon" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-bake" stageName="build" materialName="sassoon_bake" />
                <pipeline pipelineName="sassoon-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.sassoon.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/www.sassoon.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sassoon.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sassoon.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="sassoon-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sassoon</param>
                <param name="brand">sassoon</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sassoon.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 38 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sassoon-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 38 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=sassoon aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="sassoon-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/www.sassoon.com.git" materialName="sassoon_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-maxfactoracademy">
        <pipeline name="maxfactoracademy-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh maxfactoracademy</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-bake" labeltemplate="${MAXFACTORACADEMY_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">maxfactoracademy</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_MAXFACTORACADEMY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/www.maxfactoracademy.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="maxfactoracademy-1.x-release" stageName="build_release" materialName="maxfactoracademy_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${MAXFACTORACADEMY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MAXFACTORACADEMY_BAKE}</param>
                <param name="smoke_tests_file">./maxfactoracademy/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">maxfactoracademy</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/www.maxfactoracademy.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git" dest="maxfactoracademy">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-bake" stageName="build" materialName="maxfactoracademy_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-maxfactoracademy-net.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-maxfactoracademy-net.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-maxfactoracademy-net.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${MAXFACTORACADEMY_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_MAXFACTORACADEMY_BAKE}</param>
                <param name="smoke_tests_file">./maxfactoracademy/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">maxfactoracademy</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/www.maxfactoracademy.com</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git" dest="maxfactoracademy" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-bake" stageName="build" materialName="maxfactoracademy_bake" />
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.maxfactoracademy.net</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.maxfactoracademy.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.maxfactoracademy.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="maxfactoracademy-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">maxfactoracademy</param>
                <param name="brand">maxfactoracademy</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.maxfactoracademy.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 6 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 6 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=maxfactoracademy aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="maxfactoracademy-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/www.maxfactoracademy.com.git" materialName="maxfactoracademy_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-rimmel">
        <pipeline name="rimmel-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh rimmel</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-bake" labeltemplate="${RIMMEL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">rimmel</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_RIMMEL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/www.rimmellondon.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="rimmel-1.x-release" stageName="build_release" materialName="rimmel_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${RIMMEL_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RIMMEL_BAKE}</param>
                <param name="smoke_tests_file">./rimmel/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">rimmel</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/rimmel/git-18/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git" dest="rimmel">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-bake" stageName="build" materialName="rimmel_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-rimmellondon-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-rimmellondon-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-rimmellondon-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${RIMMEL_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_RIMMEL_BAKE}</param>
                <param name="smoke_tests_file">./rimmel/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">rimmel</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/rimmel/git-18/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git" dest="rimmel" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-bake" stageName="build" materialName="rimmel_bake" />
                <pipeline pipelineName="rimmel-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.rimmellondon.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.rimmellondon.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.rimmellondon.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="rimmel-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">rimmel</param>
                <param name="brand">rimmel</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.rimmellondon.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 39 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="rimmel-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 39 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=rimmel aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="rimmel-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/www.rimmellondon.com.git" materialName="rimmel_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-opi">
        <pipeline name="opi-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh opi</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/opi-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-bake" labeltemplate="${OPI_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">opi</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_OPI_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/opi-site.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/opi-site.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="opi-1.x-release" stageName="build_release" materialName="opi_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${OPI_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">opi</param>
                <param name="brand">opi</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_OPI_BAKE}</param>
                <param name="smoke_tests_file">./opi/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">opi</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/opi-site</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/opi-site.git" dest="opi">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-bake" stageName="build" materialName="opi_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-opi-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/opi-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-opi-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-opi-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${OPI_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">opi</param>
                <param name="brand">opi</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_OPI_BAKE}</param>
                <param name="smoke_tests_file">./opi/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">opi</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/cotyinc/opi-site</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <environmentvariables>
                <variable name="instance_type">
                    <value>t2.medium</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/opi-site.git" dest="opi" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-bake" stageName="build" materialName="opi_bake" />
                <pipeline pipelineName="opi-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.opi.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/opi-site.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.opi.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.opi.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="opi-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">opi</param>
                <param name="brand">opi</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.opi.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 14 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="opi-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 14 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=opi aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="opi-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/opi-site.git" materialName="opi_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-sallyhansen">
        <pipeline name="sallyhansen-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh sallyhansen</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-bake" labeltemplate="${SALLYHANSEN_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">sallyhansen</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_SALLYHANSEN_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:cotyinc/www.sallyhansen.com.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="sallyhansen-1.x-release" stageName="build_release" materialName="sallyhansen_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${SALLYHANSEN_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SALLYHANSEN_BAKE}</param>
                <param name="smoke_tests_file">./sallyhansen/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">sallyhansen</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/sally-hansen/git-6/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git" dest="sallyhansen">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-bake" stageName="build" materialName="sallyhansen_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-sallyhansen-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-sallyhansen-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-sallyhansen-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${SALLYHANSEN_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_SALLYHANSEN_BAKE}</param>
                <param name="smoke_tests_file">./sallyhansen/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">sallyhansen</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/sally-hansen/git-6/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git" dest="sallyhansen" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-bake" stageName="build" materialName="sallyhansen_bake" />
                <pipeline pipelineName="sallyhansen-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.sallyhansen.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sallyhansen.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sallyhansen.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="sallyhansen-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">sallyhansen</param>
                <param name="brand">sallyhansen</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.sallyhansen.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 34 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="sallyhansen-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 34 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=sallyhansen aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="sallyhansen-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@github.com:cotyinc/www.sallyhansen.com.git" materialName="sallyhansen_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotyhouse">
        <pipeline name="cotyhouse-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cotyhouse</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-extranet.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-bake" labeltemplate="${COTYHOUSE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cotyhouse</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTYHOUSE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:coty-extranet.3.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:coty-extranet.3.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cotyhouse-1.x-release" stageName="build_release" materialName="cotyhouse_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYHOUSE_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYHOUSE_BAKE}</param>
                <param name="smoke_tests_file">./cotyhouse/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyhouse</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-extranet/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-extranet.3.git" dest="cotyhouse">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-bake" stageName="build" materialName="cotyhouse_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">thehouse-coty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:coty-extranet.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://thehouse-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://thehouse-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYHOUSE_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYHOUSE_BAKE}</param>
                <param name="smoke_tests_file">./cotyhouse/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyhouse</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-extranet/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-extranet.3.git" dest="cotyhouse" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-bake" stageName="build" materialName="cotyhouse_bake" />
                <pipeline pipelineName="cotyhouse-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">thehouse.coty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-extranet.3.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://thehouse.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://thehouse.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyhouse-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyhouse</param>
                <param name="brand">cotyhouse</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://thehouse.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 28 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyhouse-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 28 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=cotyhouse aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cotyhouse-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:coty-extranet.3.git" materialName="cotyhouse_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-coty">
        <pipeline name="coty-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh coty</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-com.6.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-bake" labeltemplate="${COTY_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">coty</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTY_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:coty-com.6.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:coty-com.6.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="coty-1.x-release" stageName="build_release" materialName="coty_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTY_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coty</param>
                <param name="brand">coty</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTY_BAKE}</param>
                <param name="smoke_tests_file">./coty/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coty</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-com/git-6/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-com.6.git" dest="coty">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-bake" stageName="build" materialName="coty_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-coty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:coty-com.6.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTY_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">coty</param>
                <param name="brand">coty</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTY_BAKE}</param>
                <param name="smoke_tests_file">./coty/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">coty</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-com/git-6/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-com.6.git" dest="coty" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-bake" stageName="build" materialName="coty_bake" />
                <pipeline pipelineName="coty-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.coty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-com.6.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="coty-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">coty</param>
                <param name="brand">coty</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 55 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="coty-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 55 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=coty aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="coty-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:coty-com.6.git" materialName="coty_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="provocateur">
        <pipeline name="provocateur-1.x-release" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage</param>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/provocateur.git" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="provocateur-1.x-deploy" template="shell-command-1">
            <params>
                <param name="command">scripts/deploy.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/provocateur.git" shallowClone="true">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
                <pipeline pipelineName="provocateur-1.x-release" stageName="build_release" materialName="provocateur_release" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotycore">
        <pipeline name="cotycore-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cotycore</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-core-7.10.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-bake" labeltemplate="${COTYCORE_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cotycore</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTYCORE_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:coty-core-7.10.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:coty-core-7.10.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cotycore-1.x-release" stageName="build_release" materialName="cotycore_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYCORE_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYCORE_BAKE}</param>
                <param name="smoke_tests_file">./cotycore/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotycore</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-core-7/git-10/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-core-7.10.git" dest="cotycore">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-bake" stageName="build" materialName="cotycore_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-cotycore-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:coty-core-7.10.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-cotycore-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-cotycore-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYCORE_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYCORE_BAKE}</param>
                <param name="smoke_tests_file">./cotycore/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotycore</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/coty-core-7/git-10/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-core-7.10.git" dest="cotycore" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-bake" stageName="build" materialName="cotycore_bake" />
                <pipeline pipelineName="cotycore-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.cotycore.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-core-7.10.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cotycore.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cotycore.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotycore-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotycore</param>
                <param name="brand">cotycore</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.cotycore.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 46 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotycore-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 46 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=cotycore aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cotycore-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:coty-core-7.10.git" materialName="cotycore_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotyconsumeraffairs">
        <pipeline name="cotyconsumeraffairs-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cotyconsumeraffairs</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:webhop.cca.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-bake" labeltemplate="${COTYCONSUMERAFFAIRS_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cotyconsumeraffairs</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTYCONSUMERAFFAIRS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:webhop.cca.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:webhop.cca.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cotyconsumeraffairs-1.x-release" stageName="build_release" materialName="cotyconsumeraffairs_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYCONSUMERAFFAIRS_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYCONSUMERAFFAIRS_BAKE}</param>
                <param name="smoke_tests_file">./cotyconsumeraffairs/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyconsumeraffairs</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/webhop/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:webhop.cca.git" dest="cotyconsumeraffairs">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-bake" stageName="build" materialName="cotyconsumeraffairs_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">coty-cotyconsumeraffairs-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:webhop.cca.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://coty-cotyconsumeraffairs-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://coty-cotyconsumeraffairs-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYCONSUMERAFFAIRS_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYCONSUMERAFFAIRS_BAKE}</param>
                <param name="smoke_tests_file">./cotyconsumeraffairs/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyconsumeraffairs</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://assembla.com/spaces/webhop/git-3/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:webhop.cca.git" dest="cotyconsumeraffairs" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-bake" stageName="build" materialName="cotyconsumeraffairs_bake" />
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">coty.cotyconsumeraffairs.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:webhop.cca.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://coty.cotyconsumeraffairs.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://coty.cotyconsumeraffairs.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyconsumeraffairs-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyconsumeraffairs</param>
                <param name="brand">cotyconsumeraffairs</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://coty.cotyconsumeraffairs.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 4 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 4 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=cotyconsumeraffairs aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cotyconsumeraffairs-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:webhop.cca.git" materialName="cotyconsumeraffairs_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-solr">
        <pipeline name="webhop-zookeeper-3.4.8-bake" labeltemplate="3.4.8-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_repo">git@githib.com:zeebox/webhop-zookeeper.git</param>
                <param name="playbook">site.yml</param>
                <param name="component_name">webhop-zookeeper</param>
                <param name="component_version">3.4.8</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version" />
                <param name="foundation_ami_name" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/webhop-zookeeper.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible-webhop-base" />
            </materials>
        </pipeline>
        <pipeline name="webhop-solr-5.5.1-bake" labeltemplate="5.5.1-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_repo">git@github.com:zeebox/webhop-solr.git</param>
                <param name="playbook">site.yml</param>
                <param name="component_name">webhop-solr</param>
                <param name="component_version">5.5.1</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version" />
                <param name="foundation_ami_name" />
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="ZEEBOX_FOUNDATION_AMI_HVM">
                    <value>ami-83ecc194</value>
                </variable>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/webhop-solr.git" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible-webhop-base" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-ckonegold">
        <pipeline name="ckonegold-1.x-release" labeltemplate="1.0.${COUNT}" template="release-webhop-s3-1">
            <params>
                <param name="component_build_command">scripts/build.sh ckonegold</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="go_agent_resource">v5</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:calvinklein.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/static-site-optimizer.git" dest="static-site-optimizer" />
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CKONEGOLD_RELEASE}" template="auto-deploy-webhop-s3-1">
            <params>
                <param name="component">ckonegold</param>
                <param name="version">${GO_DEPENDENCY_LABEL_CKONEGOLD_RELEASE}</param>
                <param name="web_link">https://www-ckonegoldpr-com.staging.ointernal.net/</param>
                <param name="s3_bucket">www-ckonegoldpr-com-staging-ointernal-net</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://www.assembla.com/spaces/calvinklein/git-5/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:calvinklein.5.git" dest="ckonegold">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-release" stageName="build_release" materialName="ckonegold_release" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">ckonegold</param>
                <param name="brand">ckonegold</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">www-ckonegoldpr-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-deploy-stage" stageName="s3_upload" materialName="stage_deploy" />
                <git url="git@git.assembla.com:calvinklein.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">ckonegold</param>
                <param name="brand">ckonegold</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://www-ckonegoldpr-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CKONEGOLD_RELEASE}" template="manual-deploy-webhop-s3-1">
            <params>
                <param name="component">ckonegold</param>
                <param name="version">${GO_DEPENDENCY_LABEL_CKONEGOLD_RELEASE}</param>
                <param name="web_link">https://www.ckonegoldpr.com/</param>
                <param name="s3_bucket">www-ckonegoldpr-com</param>
                <param name="region">eu-central-1</param>
                <param name="component_git_repo">https://www.assembla.com/spaces/calvinklein/git-5/source</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:calvinklein.5.git" dest="ckonegold">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-release" stageName="build_release" materialName="ckonegold_release" />
                <pipeline pipelineName="ckonegold-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-total-service-purge.yml</param>
                <param name="component">ckonegold</param>
                <param name="brand">ckonegold</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">www.ckonegoldpr.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-deploy-live" stageName="s3_upload" materialName="live_migration" />
                <git url="git@git.assembla.com:calvinklein.5.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="ckonegold-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">ckonegold</param>
                <param name="brand">ckonegold</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://www.ckonegoldpr.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="ckonegold-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Metrics_inactive">
        <pipeline name="ga_uniques_s3_export" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>/tmp/ga_uniques_s3_export</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/ga_uniques_s3_export/bin/pip" workingdir="python_scripts">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/ga_uniques_s3_export/bin/python" workingdir="python_scripts">
                                <arg>ga_uniques_to_s3.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="seven_day_uniques_trend" isLocked="false">
            <timer>0 0 0,9,12,16,20 * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>/tmp/metrics</arg>
                            </exec>
                            <exec command="/tmp/metrics/bin/pip" workingdir="python_scripts">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics/bin/python" workingdir="python_scripts">
                                <arg>GA/seven_day_uniques_trend.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="metrics_bigquery_table_stats" isLocked="false">
            <timer>0 25,55 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>/tmp/metrics_bigquery_table_stats</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_bigquery_table_stats/bin/pip" workingdir="python_scripts">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_bigquery_table_stats/bin/python" workingdir="python_scripts">
                                <arg>GA/bigquery_table_stats.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="metrics_quizly_export_to_s3" isLocked="false">
            <timer>0 30 19 * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>/tmp/metrics_quizly_export_to_s3</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_quizly_export_to_s3/bin/pip" workingdir="python_scripts">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_quizly_export_to_s3/bin/python" workingdir="python_scripts">
                                <arg>quizly_report_to_s3.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Runestone" template="deploy-dev-stage-live-us-east-only-manual-live-release">
            <params>
                <param name="autoscaling_build_prefix" />
                <param name="startup_wait">30</param>
                <param name="puppet_path">puppet</param>
                <param name="component_repo">git@github.com:zeebox/Runestone.git</param>
                <param name="instance_size">t2.small</param>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="zeebox_component_name">runestone</param>
                <param name="bake_agent_type">goagent</param>
                <param name="maven_opts">-Xmx1024m -XX:MaxPermSize=128m</param>
                <param name="release_notes" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/Runestone.git" branch="develop" />
            </materials>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_v3" isLocked="false">
            <timer>0 5 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_363406088</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_US_fb_ad_export_v3" isLocked="false">
            <timer>0 30 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_102005256632301</arg>
                                <arg>force=1</arg>
                                <arg>fr=1</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_ga_uniques_export" isLocked="false">
            <timer>0 0 20 * * ?</timer>
            <environmentvariables>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>uniques.py</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_specific_campaign" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="s3_bucket">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_915313031896409</arg>
                                <arg>cid=6044105511840</arg>
                                <arg>force_reload=1</arg>
                                <arg>force=true</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_specific_US_campaign" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_102005256632301</arg>
                                <arg>cid=6035849896242</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_from_BRANCH" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="feature/Request_changed_ad_sets_only" />
            </materials>
            <stage name="Stage">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_363406088</arg>
                                <arg>cid=6026881864911</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_from_BRANCH_US" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="feature/Request_changed_ad_sets_only" />
            </materials>
            <stage name="Stage">
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_102005256632301</arg>
                                <arg>cid=6027316167442</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_FB_UK2_account_export" isLocked="false">
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>act=act_915313031896409</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_US_STAGE" isLocked="false">
            <timer>0 10,25,40,55 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>env=stage</arg>
                                <arg>act=act_102005256632301</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="BigQueryETL" isLocked="false">
            <timer>0 0 8 1/1 * ? *</timer>
            <environmentvariables>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="oauth2client_fix" />
            </materials>
            <stage name="ETL">
                <jobs>
                    <job name="ETL">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>GA/fb_to_bq_ad_set_data.py</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>GA/etl.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="metrics_get_fb_images" isLocked="false">
            <timer>0 45 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/usr/bin/virtualenv">
                                <arg>/tmp/metrics_get_fb_images</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_get_fb_images/bin/pip" workingdir="python_scripts">
                                <arg>install</arg>
                                <arg>-r</arg>
                                <arg>requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/tmp/metrics_get_fb_images/bin/python" workingdir="python_scripts">
                                <arg>get_fb_ad_images.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_FB_capture_test_data" isLocked="false">
            <timer>0 0/10 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>2c0W5Ydtytg3gVOWUWPWHeXFcwJS8UodE+M2KiOgR+9M2qcRfZllE7phHR79PuxmfNaxolGKsxb/7KA3eXfPr/dnVoi+IxtGYuKG2KPsQB/IfvhvMhIth49lGVmY9NgV9ujq6WCLVlXsozmok3/gPdsnFsBy1beCkp3Tr/K/jSNlfjDWurSU7xCCVTJ+7Odk4tZX9wyMqkQuAClfoonEzAWOtvkOUW4r2mb+iJi0ICmFxklQgJnpl5h2s5VPDNNRwiowfugWTUk=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>fb_get_inactive_ad_set_data.py</arg>
                                <arg>ad_set_id=6029480723111</arg>
                                <runif status="any" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_expoirt_mult_accounts_STAGE" isLocked="false">
            <timer>0 5,20,35,50 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>env=stage</arg>
                                <arg>act=act_933997396694639,act_966373886790323,act_966288183465560,act_964192017008510,act_964181907009521,act_964181130342932,act_952394401521605,act_971062166321495,act_975180595909652,act_972236879537357,act_986723124755399,act_985664254861286,act_983902325037479,act_987828291311549,act_990957890998589,act_990956504332061,act_991028304324881</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_us_stage_NOT_PAID" isLocked="false">
            <timer>0 */1 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>WhLrxArn3zlXa/iQtglVOfvj789rISe3fxDmPuWsdtS+hon/+mQr7QvqJJnbeFzbBFOk2NVUaj5hqA0aiGhm2g+uWtb58e+MAooZNweMRN2beCilcEi6JlrlutXR+zf58olDN7XSyvoluyvtMQlghwGdGOcTZxWMZ1h3SFLl9tn7j/8ghqc919bOldinXHUGcldwhpdkR8sx0Vd+CgT5qUR2XLsRy8IdzG/DdvZly4lYX9tCPpGCWvuzOEC0HjOkIOH/WDvblHs=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>env=stage</arg>
                                <arg>act=act_102005256632301_NP</arg>
                                <arg>fr=1</arg>
                                <arg>force=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_check_campaign_end_dates" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts/fb_ads/utils">
                                <arg>check_campaign_end_dates.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_campaign_end_date_update" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>fb_ads/scripts/check_campaign_end_dates.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_uk_acct1_STAGE" isLocked="false">
            <timer>0 10,15,25,37,40,48,55 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket_name">
                    <value>beamly-metrics-stage</value>
                </variable>
                <variable name="env">
                    <value>stage</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCx6n2sKyJ1RDnlu0AUy9h4ycG5yp5d41h9NUK7DXfWpVtvcQe9PmxvRJyV0TiTzproSQR8GUmyDqCCYA/h3IjGw4jnGirchuUokJnDUD0/XETPjg9XiULUXPlY0TExYgCkmyf/60Nshbvj/JVXOBNqdkFnYnHwdoGPqcBiSoM05CoRWCz1/aYhzZzyFO27xeh7nNTW8aa5nJ1YN6jmtBJ/7</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/metrics_python/bin/python" workingdir="python_scripts">
                                <arg>facebook_ad_export.py</arg>
                                <arg>env=stage</arg>
                                <arg>act=act_363406088</arg>
                                <arg>force=1</arg>
                                <arg>fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="dash">
        <pipeline name="poem-predictive-model-1.x" labeltemplate="1.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/poem-predictive-model.git" />
            </materials>
            <stage name="qubole-job">
                <jobs>
                    <job name="update-qubole-job">
                        <tasks>
                            <exec command="./scripts/update-qubole-job.sh">
                                <arg>8639</arg>
                                <arg>2z3eswz5tbzTN9y7M6zxLv1kDKJJppzJd1ALXKcsqAjc8hN9QMy8qgzTpTpnnx9C</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="twitter-audience" labeltemplate="1.0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/twitter-audience.git" />
            </materials>
            <stage name="release">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>go_build.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-kafka">
        <pipeline name="kafka-2.x-bake-experimental" labeltemplate="2.1-alpha-${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">kafka-broker.yml</param>
                <param name="component_name">kafka</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ansible-confluent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_AWS_BASEAMI}</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="aws_baseami" />
                <git url="git@github.com:zeebox/ansible-confluent-provisioning.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="kafka-2.x-bake" labeltemplate="2.0.${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">kafka-broker.yml</param>
                <param name="component_name">kafka</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ansible-confluent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_AWS_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="aws_baseami" />
                <git url="git@github.com:zeebox/ansible-confluent-provisioning.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="confluent-control-center-3.x-bake" labeltemplate="3.2-confluentcontrolcenter-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">control-center.yml</param>
                <param name="component_name">confluentcontrolcenter</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ansible-confluent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_AWS_BASEAMI}</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="aws_baseami" />
                <git url="git@github.com:zeebox/ansible-confluent-provisioning.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="confluent-rest-proxy-3.x-bake" labeltemplate="3.2-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">kafka-rest.yml</param>
                <param name="component_name">confluentrestproxy</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ansible-confluent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_AWS_BASEAMI}</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="aws_baseami" />
                <git url="git@github.com:zeebox/ansible-confluent-provisioning.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="kafka">
        <pipeline name="kafka-1.x-bake" labeltemplate="1.0.${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">kafka</param>
                <param name="component_version">${GO_PIPELINE_LABEL}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ansible-confluent.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <git url="git@github.com:zeebox/ansible-confluent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="kafka-1.x-deploy-stage" labeltemplate="${KAFKA_BAKE}-deploy-${COUNT}" isLocked="true" template="auto-run-ansible-playbook-realtime-1">
            <params>
                <param name="inventory">ec2.py</param>
                <param name="desired_capacity">1</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_KAFKA_BAKE}</param>
                <param name="virtualization_type">hvm</param>
                <param name="playbooks-dir">orchestration</param>
                <param name="instance_type">t2.small</param>
                <param name="playbook">rolling-push-ensemble.yml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ansible-confluent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="kafka-1.x-bake" stageName="build" materialName="kafka_bake" />
                <pipeline pipelineName="kafka-1.x-test-stage" stageName="deploy" materialName="kafka_test_stage" />
            </materials>
        </pipeline>
        <pipeline name="kafka-1.x-test-stage" labeltemplate="${KAFKA_BAKE}-deploy-${COUNT}" isLocked="true" template="auto-run-ansible-playbook-realtime-1">
            <params>
                <param name="inventory">ec2.py</param>
                <param name="desired_capacity">1</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_KAFKA_BAKE}</param>
                <param name="virtualization_type">hvm</param>
                <param name="playbooks-dir">orchestration</param>
                <param name="instance_type">t2.small</param>
                <param name="playbook">test_ami.yml</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ansible-confluent.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                    </filter>
                </git>
                <pipeline pipelineName="kafka-1.x-bake" stageName="build" materialName="kafka_bake" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="core-services-drupal">
        <pipeline name="drupal-content-events-7.x-1.x" labeltemplate="7.x-1.${COUNT}" isLocked="false" template="drupal-module">
            <params>
                <param name="drupal_module_name">beamly_content_events</param>
                <param name="major_version">1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/drupal-content-events.git" materialName="drupal-content-events">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="*.info" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="drupal-content-events-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh beamly_content_events</param>
            </params>
            <materials>
                <scm ref="2958fa39-22b5-4387-ac43-16fe65f89baa" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="coreservices-spark-sample-deploy">
        <pipeline name="ansible-qubole-spark-deploy-1.x-release">
            <materials>
                <git url="git@github.com:zeebox/ansible-qubole-spark-deployment.git">
                    <filter>
                        <ignore pattern="spark-sample-deploy" />
                    </filter>
                </git>
            </materials>
            <stage name="release">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="trigger">
                <jobs>
                    <job name="trigger-downstreams">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>echo "Trigger downstream deploys"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="webhop-cotyvendorportal">
        <pipeline name="cotyvendorportal-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh cotyvendorportal</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
                <param name="autoscaling_build_prefix">beamly-</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-vendor-portal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-bake" labeltemplate="${COTYVENDORPORTAL_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">cotyvendorportal</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COTYVENDORPORTAL_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@git.assembla.com:coty-vendor-portal.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASEAMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <environmentvariables>
                <variable name="INSTALL_ANSIBLE_DEPENDENCIES">
                    <value>true</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@git.assembla.com:coty-vendor-portal.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="baseami" />
                <pipeline pipelineName="cotyvendorportal-1.x-release" stageName="build_release" materialName="cotyvendorportal_release" />
                <pipeline pipelineName="ansible-webhop-base-release" stageName="release" materialName="ansible_webhop_base" />
                <pipeline pipelineName="ansible-apache2-pagespeed-release" stageName="release" materialName="ansible-apache2-pagespeed" />
                <pipeline pipelineName="ansible-php5-release" stageName="release" materialName="ansible-php5-release" />
                <pipeline pipelineName="ansible-gluster-client" stageName="release" materialName="ansible-gluster-client" />
                <pipeline pipelineName="ansible-drush" stageName="release" materialName="ansible-drush" />
                <pipeline pipelineName="ansible-webhop-drupal-settings" stageName="release" materialName="ansible-webhop-drupal-settings" />
                <pipeline pipelineName="ansible-webhop-monitoring" stageName="release" materialName="ansible-webhop-monitoring" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${COTYVENDORPORTAL_BAKE}" template="auto-deploy-webhop-ami-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYVENDORPORTAL_BAKE}</param>
                <param name="smoke_tests_file">./cotyvendorportal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyvendorportal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/coty-vendor-portal/git/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-vendor-portal.git" dest="cotyvendorportal">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-bake" stageName="build" materialName="cotyvendorportal_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-migrate-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-cdn-update-stage" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="service_name">supplier-coty-com.staging.ointernal.net</param>
                <param name="cdn_config_path">component/cdn/stage-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-migrate-stage" stageName="deploy" materialName="stage_migration" />
                <git url="git@git.assembla.com:coty-vendor-portal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-performance-checks-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://supplier-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-cdn-update-stage" stageName="purge" materialName="stage_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-assertions-stage" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">stage</param>
                <param name="url">https://supplier-coty-com.staging.ointernal.net/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-performance-checks-stage" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${COTYVENDORPORTAL_BAKE}" template="manual-deploy-webhop-ami-drupal-1">
            <params>
                <param name="deploy_playbook">deploy.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_COTYVENDORPORTAL_BAKE}</param>
                <param name="smoke_tests_file">./cotyvendorportal/tests/smoke-tests.json</param>
                <param name="release_notes" />
                <param name="reponame">cotyvendorportal</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://coty.assembla.com/spaces/coty-vendor-portal/git/source</param>
                <param name="go_agent_resource">v5</param>
            </params>
            <materials>
                <git url="git@git.assembla.com:coty-vendor-portal.git" dest="cotyvendorportal" materialName="git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-bake" stageName="build" materialName="cotyvendorportal_bake" />
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-assertions-stage" stageName="deploy" materialName="post-release-assertions" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="deploy.yml" />
                        <ignore pattern="components/beamly_default_vars.yml" />
                        <ignore pattern="components/discovery.yml" />
                        <ignore pattern="components/notify-slack.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-migrate-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-post-release-update.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url" />
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-deploy-live" stageName="deploy_ami" materialName="live_deploy" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-cdn-update-live" template="webhop-fastly-update-1">
            <params>
                <param name="purge_playbook">cdn-post-release-purge.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="service_name">supplier.coty.com</param>
                <param name="cdn_config_path">component/cdn/live-config.yml</param>
                <param name="cdn_baseconfig_path" />
                <param name="dryrun">no</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" invertFilter="true" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="cdn-post-release-purge.yml" />
                        <ignore pattern="sync-fastly-service.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-migrate-live" stageName="deploy" materialName="live_migration" />
                <git url="git@git.assembla.com:coty-vendor-portal.git" dest="component">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-performance-checks-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">url-performance-checks.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://supplier.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report" />
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-cdn-update-live" stageName="purge" materialName="live_cdn_update" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-post-release-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://supplier.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
                <pipeline pipelineName="cotyvendorportal-1.x-post-release-performance-checks-live" stageName="deploy" materialName="post-release-performance-checks" />
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-scheduled-assertions-live" template="auto-run-ansible-playbook-1">
            <params>
                <param name="desired_capacity" />
                <param name="ami_version" />
                <param name="virtualization_type" />
                <param name="playbooks-dir">.</param>
                <param name="inventory">n/a</param>
                <param name="instance_type" />
                <param name="playbook">drupal-site-assertions.yml</param>
                <param name="component">cotyvendorportal</param>
                <param name="brand">cotyvendorportal</param>
                <param name="region">eu-central-1</param>
                <param name="env">live</param>
                <param name="url">https://supplier.coty.com/</param>
                <param name="service_name" />
                <param name="generate_report">true</param>
            </params>
            <timer>0 24 0/7 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="deploy*" />
                        <ignore pattern="performance-*" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-scheduled-live-db-vagrant-export" isLocked="true">
            <timer>0 24 6 * * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/webhop-orchestration.git" />
            </materials>
            <stage name="export-and-upload">
                <approval type="manual" />
                <jobs>
                    <job name="export-and-upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook drupal-db-sync.yml --extra-vars "component=cotyvendorportal aws_region=eu-central-1 sync_dbs=no sync_upstream=no replace_vagrant_snapshot=yes backup_before_sync=no sanitize_db=no"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cotyvendorportal-1.x-test-vagrant" labeltemplate="${WEBHOP_VAGRANT}-b${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="webhop-vagrant-1.x-release" stageName="build_release" materialName="webhop_vagrant" />
                <git url="git@git.assembla.com:coty-vendor-portal.git" materialName="cotyvendorportal_release" />
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcfile="Vagrantfile">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="webhop-vagrant-1.x-release" stage="build_release" job="invoke_build_script" srcdir="vagrant">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>vagrant/gold-commit.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="dash-metamorpher">
        <pipeline name="metamorpher-1.x-pr" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
                <variable name="FACEBOOK_SYSTEM_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="FACEBOOK_ADMIN_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCxTwVqmulJKviJZgaU4YHMliJU1/c4wPZbgILJd7d7o/yH4v4QT7f2siO19ALuXw3qsjti/OBW+Lh4W7UyP18uh7U+jGXiFBtVfZ7rU2WVZouMf9FrFqXpMIRKmFKDXiabtPv8uZc5naT59qNs2i6q5V1H1rspwCuwZNlvdHgLNhRs7qe0u3q5X0r9fE+yoCt6S3nPwiUrp/EuuH5RlA9vfwDwEQmt0aT6nLqXC6fOCsyZ0k4M39gif</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="a30e4921-b5f6-4f23-aef7-0d74f1afe941" />
            </materials>
        </pipeline>
        <pipeline name="metamorpher-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <environmentvariables>
                <variable name="FACEBOOK_SYSTEM_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="FACEBOOK_ADMIN_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCxTwVqmulJKviJZgaU4YHMliJU1/c4wPZbgILJd7d7o/yH4v4QT7f2siO19ALuXw3qsjti/OBW+Lh4W7UyP18uh7U+jGXiFBtVfZ7rU2WVZouMf9FrFqXpMIRKmFKDXiabtPv8uZc5naT59qNs2i6q5V1H1rspwCuwZNlvdHgLNhRs7qe0u3q5X0r9fE+yoCt6S3nPwiUrp/EuuH5RlA9vfwDwEQmt0aT6nLqXC6fOCsyZ0k4M39gif</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/metamorpher.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="facebookfetch-1.x-bake" labeltemplate="${METAMORPHER_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="component_name">facebookfetch</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_METAMORPHER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/metamorpher.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="bake_agent_type">goagentdeploy</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="FACEBOOK_SYSTEM_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="FACEBOOK_ADMIN_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCxTwVqmulJKviJZgaU4YHMliJU1/c4wPZbgILJd7d7o/yH4v4QT7f2siO19ALuXw3qsjti/OBW+Lh4W7UyP18uh7U+jGXiFBtVfZ7rU2WVZouMf9FrFqXpMIRKmFKDXiabtPv8uZc5naT59qNs2i6q5V1H1rspwCuwZNlvdHgLNhRs7qe0u3q5X0r9fE+yoCt6S3nPwiUrp/EuuH5RlA9vfwDwEQmt0aT6nLqXC6fOCsyZ0k4M39gif</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ansible-facebook-fetch.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="metamorpher-1.x-release" stageName="build_release" materialName="metamorpher_release" />
            </materials>
        </pipeline>
        <pipeline name="facebookfetch-1.x-deploy-stage" labeltemplate="${FACEBOOK_FETCH_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-no-test-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">facebookfetch</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_FACEBOOK_FETCH_BAKE}</param>
                <param name="smoke_tests_file">./metamorpher/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">metamorpher</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/metamorpher.git" dest="metamorpher">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="facebookfetch-1.x-bake" stageName="build" materialName="facebook_fetch_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="facebookfetch-1.x-deploy-live" labeltemplate="${FACEBOOK_FETCH_BAKE}-deploy-${COUNT}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">metamorpher</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_METAMORPHER_BAKE}</param>
                <param name="smoke_tests_file">./metamorpher/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE Metamorpher ${GO_DEPENDENCY_LABEL_METAMORPHER_BAKE}</param>
                <param name="reponame">metamorpher</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/metamorpher.git" dest="metamorpher">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="facebookfetch-1.x-bake" stageName="build" materialName="facebook_fetch_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="facebookfetch-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
        <pipeline name="campaigndeltas-1.x-bake" labeltemplate="${METAMORPHER_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="component_name">campaigndeltas</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_METAMORPHER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/metamorpher.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="bake_agent_type">goagentdeploy</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="FACEBOOK_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCwxK6XMNgDFckp8XnpoA2rVhnvyA7RtP4yCfxx8vZ+84rp0H24yIMU0ReeRNXCizAiCPFrhY8xgvzZsRNcZSos5pWHFgi2U6tE2YXIUmsZBQ8GwCKMBKjaLOC+FJw0rVQRloUZP3R/DWV9FHAmJxNN3Kd1uLprbG+lUSYN/azlmBkX30Lodc91pmQgQhhGrA6TxbTgMeKSS4PRpFBZfQ5kCSvznTQM5qMMdb//u3CZypg==</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ansible-campaign-deltas.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="metamorpher-1.x-release" stageName="build_release" materialName="metamorpher_release" />
            </materials>
        </pipeline>
        <pipeline name="adaccountdeltas-1.x-bake" labeltemplate="${METAMORPHER_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="component_name">adaccountdeltas</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_METAMORPHER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/metamorpher.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="bake_agent_type">goagentdeploy</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <environmentvariables>
                <variable name="FACEBOOK_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCwxK6XMNgDFckp8XnpoA2rVhnvyA7RtP4yCfxx8vZ+84rp0H24yIMU0ReeRNXCizAiCPFrhY8xgvzZsRNcZSos5pWHFgi2U6tE2YXIUmsZBQ8GwCKMBKjaLOC+FJw0rVQRloUZP3R/DWV9FHAmJxNN3Kd1uLprbG+lUSYN/azlmBkX30Lodc91pmQgQhhGrA6TxbTgMeKSS4PRpFBZfQ5kCSvznTQM5qMMdb//u3CZypg==</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/ansible-adaccount-deltas.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="metamorpher-1.x-release" stageName="build_release" materialName="metamorpher_release" />
            </materials>
        </pipeline>
        <pipeline name="campaigndeltas-1.x-deploy-stage" labeltemplate="${CAMPAIGN_DELTAS_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-deploy-ami-no-test-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">campaigndeltas</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CAMPAIGN_DELTAS_BAKE}</param>
                <param name="smoke_tests_file">./metamorpher/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">metamorpher</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/metamorpher.git" dest="metamorpher">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="campaigndeltas-1.x-bake" stageName="build" materialName="campaign_deltas_bake" />
            </materials>
        </pipeline>
        <pipeline name="adaccountdeltas-1.x-deploy-stage" labeltemplate="${ADACCOUNT_DELTAS_BAKE}-deploy-${COUNT}" isLocked="false" template="auto-deploy-ami-no-test-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">120</param>
                <param name="component_name">adaccountdeltas</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_ADACCOUNT_DELTAS_BAKE}</param>
                <param name="smoke_tests_file">./metamorpher/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">metamorpher</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/metamorpher.git" dest="metamorpher">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="adaccountdeltas-1.x-bake" stageName="build" materialName="adaccount_deltas_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="tick-message-lambda" isLocked="false">
            <params>
                <param name="component_build_script">scripts/build.sh</param>
                <param name="component_deploy_script">scripts/deploy.sh</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ticklambda.git">
                    <filter>
                        <ignore pattern="README.md" />
                    </filter>
                </git>
            </materials>
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="target/scala-2.11/kinesis-backup-lambda.jar" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="s3">
                <jobs>
                    <job name="s3">
                        <tasks>
                            <fetchartifact pipeline="" stage="build" job="ciBuild" srcfile="tick-lambda.jar">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>scripts/s3_upload.sh</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <jobs>
                    <job name="ciDeploy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_deploy_script}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="CentralBrandDatabaseSink">
        <pipeline name="centralbranddatabasesink-1.x-release" labeltemplate="1.0.${COUNT}" template="release-2">
            <params>
                <param name="component_build_command">scripts/build.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabaseSink.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabasesink-1.x-bake" labeltemplate="${CENTRALBRANDDATABASESINK_RELEASE}-b${COUNT}" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">centralbranddatabasesink</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASESINK_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/CentralBrandDatabaseSink.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="foundation_ami_name">beamlybase</param>
                <param name="target_regions">us-east-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabaseSink.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="baseami" stageName="validate-base-amis" materialName="base_ami" />
                <pipeline pipelineName="centralbranddatabasesink-1.x-release" stageName="build_release" materialName="centralbranddatabasesink_release" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabasesink-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CENTRALBRANDDATABASESINK_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">150</param>
                <param name="component_name">centralbranddatabasesink</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASESINK_BAKE}</param>
                <param name="smoke_tests_file">./CentralBrandDatabaseSink/tests/us-stage-status.json</param>
                <param name="release_notes" />
                <param name="reponame">CentralBrandDatabaseSink</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
                <variable name="COUNTRY">
                    <value>us</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>us-east-1</value>
                </variable>
                <variable name="EnvLevel">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabaseSink.git" dest="CentralBrandDatabaseSink">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="centralbranddatabasesink-1.x-bake" stageName="build" materialName="centralbranddatabasesink_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
            </materials>
        </pipeline>
        <pipeline name="centralbranddatabasesink-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CENTRALBRANDDATABASESINK_BAKE}" template="auto-deploy-ami-1">
            <params>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">150</param>
                <param name="component_name">centralbranddatabasesink</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASESINK_BAKE}</param>
                <param name="smoke_tests_file">./CentralBrandDatabaseSink/tests/us-live-status.json</param>
                <param name="release_notes">See email: DEPLOY-LIVE CentralBrandDatabaseSink ${GO_DEPENDENCY_LABEL_CENTRALBRANDDATABASESINK_BAKE}</param>
                <param name="reponame">CentralBrandDatabaseSink</param>
            </params>
            <environmentvariables>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
                <variable name="COUNTRY">
                    <value>us</value>
                </variable>
                <variable name="AWS_REGION">
                    <value />
                </variable>
                <variable name="EnvLevel">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/CentralBrandDatabaseSink.git" dest="CentralBrandDatabaseSink">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="centralbranddatabasesink-1.x-bake" stageName="build" materialName="centralbranddatabasesink_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="centralbranddatabasesink-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Metrics_LIVE">
        <pipeline name="Metrics_fb_high_level_metrics_LIVE" isLocked="false">
            <timer>0 0 6 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_live_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/global_daily_metrics_usd.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_FB_image_export_LIVE" isLocked="false">
            <timer>0 45 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Live">
                <jobs>
                    <job name="run_live_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/get_fb_ad_images.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_check_metrics_format_LIVE" isLocked="false">
            <timer>0 15 7 ? * *</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/check_campaign_metrics.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Mterics_create_customer_files_LIVE" isLocked="false">
            <timer>0 0 2,8,12,16,20 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/create_customer_data_files.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_BEAMLY_LIVE" isLocked="false">
            <timer>0 33 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/facebook_ad_export.py</arg>
                                <arg>env=live</arg>
                                <arg>customer_id=00001</arg>
                                <arg>fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_EXTERNAL_LIVE" isLocked="false">
            <timer>0 25 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/facebook_ad_export.py</arg>
                                <arg>env=live</arg>
                                <arg>excluded_customer_ids=00002,00001</arg>
                                <arg>fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_ad_export_COTY_LIVE" isLocked="false">
            <timer>0 10,20,30,40,50 * * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/facebook_ad_export.py</arg>
                                <arg>env=live</arg>
                                <arg>customer_id=00002</arg>
                                <arg>fr=1</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_weekly_spend_data_LIVE" isLocked="false">
            <timer>0 0 0,2,4,6,8,10,12,14,16,18,20,22 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/generate_brand_client_files.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metric_fb_account_campaign_checker_LIVE" isLocked="false">
            <timer>0 0 7,12,15,19 * * ?</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="sftp_username" secure="true">
                    <encryptedValue>Kn6uV7FfnpA=</encryptedValue>
                </variable>
                <variable name="sftp_password" secure="true">
                    <encryptedValue>Lj8dYWRTooI=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/new_campaign_checker.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="metrics_get_fb_videos_LIVE" isLocked="false">
            <timer>0 15 * * * ?</timer>
            <environmentvariables>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="runscript">
                <approval type="manual" />
                <jobs>
                    <job name="runscript">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_ad_videos.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_get_fb_countries_LIVE" isLocked="false">
            <timer>0 0 6 ? * 6L</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_fb_countries.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_fb_update_campaign_end_dates_LIVE" isLocked="false">
            <timer>0 15 6 ? * *</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/check_campaign_end_dates.py</arg>
                                <arg>from=2016-07-01</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_creative_insights_LIVE" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/scripts/get_campaign_creatives_data.py campaign_filter=last_run</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_rerun_historical_campaign" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt</arg>
                                <arg>--script ./fb_ads/utils/rerun_fb_campaign_extract.py from=2017-05-28 to=2017-05-29</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_rerun_specific_campaign" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" branch="develop" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./fb_ads/scripts/facebook_ad_export.py</arg>
                                <arg>act=act_994744117286633</arg>
                                <arg>cid=6054912507832</arg>
                                <arg>fr=1</arg>
                                <arg>force=1</arg>
                                <arg>env=live</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_bake_facebook_data" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script" timeout="0">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/etl/requirements.txt --script ./fb_ads/etl/facebook_bake_daily_ad_metrics.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>task</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_pre_bake_historical_reruns" isLocked="false">
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCy1nnR96fuFH9V7IsTZRCe7ri7NKxojKw0pBdgi6tLxiHaY03MnBzRY9gJGqc72aDMFG0gy4B8fkCAP/pCGbMwUr2St7yhdbuJkM3Ky3XN9DR/RdnSN2rl8IQqNyKhfKtqY47uezFmPIJj+BAc4umkM+5PfobXUBfz0jlnFcP8QieBBjJINwuDnXBpZ52NCbTPmn1D2Qe9dAuJge9l9qEvRJe9jjk1CClV0cAeaZaTi9iqOYLg+0gMQ</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script" timeout="0">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/etl/requirements.txt --script ./fb_ads/utils/rerun_ad_gap_campaigns_before_baking.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>task</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Metrics_adform_masterdata_backup" isLocked="false">
            <timer>0 0 10 ? * *</timer>
            <environmentvariables>
                <variable name="s3_bucket">
                    <value>beamly-metrics</value>
                </variable>
                <variable name="env">
                    <value>live</value>
                </variable>
                <variable name="aws_key" secure="true">
                    <encryptedValue>1kuBKkDi0i/dH4rVz/b2z2JGqw8Adwt+</encryptedValue>
                </variable>
                <variable name="aws_secret" secure="true">
                    <encryptedValue>zAGF21AGLLh1znfORZDpNz8UPR5d6PKnwYRoJZvOHhQXAQ2e5rRF2DZ51J6M4EoP</encryptedValue>
                </variable>
                <variable name="fb_token" secure="true">
                    <encryptedValue>45mofqmnkCxWZThF8j7CEXa1ItqEttaMj0ZaiTv8Q+Iz567GUJ9ENIfOvtm7KczqqEAUPz+8aAh9LdbFcM3YyeqtT7oMg8uNVKWwfKEkREsks7lS0QeqrFTs44n1gt/774gxC99oSuYl3quUVlNtbdCQeVOSMCvaQQnIapwc4q0cQy5updgbQQTf7UMbHGhBbbasgalvit3YrCSwuM+fK0oynBU5abKm</encryptedValue>
                </variable>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/MetricsPythonJobs.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script" timeout="0">
                        <tasks>
                            <exec command="../scripts/run_with_virtualenv.sh" workingdir="python_scripts">
                                <arg>--requirements ./fb_ads/requirements.txt --script ./adForm/adops/masterdata_files.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>task</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="drupal-modules">
        <pipeline name="drupal-kafka-event-dispatcher-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="3de1710e-d8b9-4d47-854e-e1694d0cc20c" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="databae">
        <pipeline name="databae-1.x-test" labeltemplate="1.0.${COUNT}" isLocked="false">
            <materials>
                <git url="git@github.com:zeebox/databae.git" branch="pipeline-creation" />
            </materials>
            <stage name="build">
                <jobs>
                    <job name="gather-deps">
                        <tasks>
                            <exec command="make">
                                <arg>deps</arg>
                                <arg>test</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="databae-1.x-build" labeltemplate="1.0.${COUNT}" isLocked="false">
            <materials>
                <pipeline pipelineName="databae-1.x-test" stageName="build" />
            </materials>
            <stage name="compile-and-package">
                <jobs>
                    <job name="compile">
                        <tasks>
                            <exec command="make">
                                <arg>deps</arg>
                                <arg>build</arg>
                                <arg>pkg</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="libdatabae.zip" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="marketing-science">
        <pipeline name="dash-campaign-automation" labeltemplate="1.0.${COUNT}" isLocked="false">
            <timer>0 0 9 1/1 * ? *</timer>
            <environmentvariables>
                <variable name="client_email">
                    <value>69694150913-3mdbpl5g51aclna1404a4bhlb95cc73b@developer.gserviceaccount.com</value>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/dash-campaign-automation.git" />
            </materials>
            <stage name="release" cleanWorkingDir="true">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/build.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="bigquery-fetch" isLocked="false">
            <timer>0 0 9-12 ? * *</timer>
            <environmentvariables>
                <variable name="client_email" secure="true">
                    <encryptedValue>EsD50gFk+9ho2pNKDPFvrPwMkHIWwIU/A5xjNIMHSmfMhRw0s0zoKCxWFXApeceMIZGe1HbVZ83R3yIWVnrasjof1SHUNPvX15A7QPQhWnY=</encryptedValue>
                </variable>
            </environmentvariables>
            <materials>
                <git url="git@github.com:zeebox/BigQueryFetch.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="./run_with_virtualenv.sh">
                                <arg>--requirements ./requirements.txt</arg>
                                <arg>--script ./BQFetch.py --dataset=110116709 --tablePrefix=ga_sessions_ --excludeTablePrefix=ga_sessions_intraday_,ga_sessions_2015,ga_sessions_2016 --s3Bucket=beamly-marketing-science --s3Dir=data/ga-bigquery --overwrite=false --sql=big_query_daily</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="fb-paid-transform" isLocked="false">
            <timer>0 0 7 1/1 * ? *</timer>
            <materials>
                <git url="git@github.com:zeebox/fb-paid-transformer.git" />
            </materials>
            <stage name="Stage">
                <approval type="manual" />
                <jobs>
                    <job name="run_stage_script">
                        <tasks>
                            <exec command="./run_with_virtualenv.sh">
                                <arg>--requirements ./requirements.txt</arg>
                                <arg>--script ./transformer.py --update_inventory=true --re_flatten=false</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="redshift-ingest-state-machine" isLocked="false" template="terraform-no-artifact">
            <params>
                <param name="Brand">data</param>
                <param name="AWSAccount">beamly</param>
                <param name="Environment">dev</param>
                <param name="Region">us-east-1</param>
                <param name="TFDirectory">tf-platform/</param>
                <param name="Libretto">data-monitoring</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/tf-platform.git" dest="tf-platform" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="Atomic-Content-Pipeline">
        <pipeline name="core-content-transformer-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-transformer.git" materialName="core-content-transformer">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="core-content-transformer-1.x-bake" labeltemplate="${TRANSFORMER_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">contenttransformer</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_TRANSFORMER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/core-content-tranformer.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-transformer.git" materialName="core-content-transformer">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="core-content-transformer-1.x-release" stageName="build_release" materialName="transformer_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go" />
            </materials>
        </pipeline>
        <pipeline name="core-content-transformer-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contenttransformer</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-transformer/tests/contenttransformer-ops-stage.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-transformer</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-transformer</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-transformer.git" dest="core-content-transformer" materialName="core-content-transformer" />
                <pipeline pipelineName="core-content-transformer-1.x-bake" stageName="build" materialName="ami_bake" />
            </materials>
        </pipeline>
        <pipeline name="core-content-transformer-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contenttransformer</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-transformer/tests/contenttransformer-ops-live.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-transformer</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-transformer</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-transformer.git" dest="core-content-transformer" materialName="core-content-transformer" />
                <pipeline pipelineName="core-content-transformer-1.x-bake" stageName="build" materialName="ami_bake" />
                <pipeline pipelineName="core-content-transformer-1.x-deploy-stage" stageName="deploy_ami" />
            </materials>
        </pipeline>
        <pipeline name="core-content-transformer-1.x-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="a4d75035-1630-4636-b496-6dbd338880d3" />
            </materials>
        </pipeline>
        <pipeline name="core-content-cache-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-cache.git" materialName="core-content-cache">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="core-content-cache-1.x-bake" labeltemplate="${INVALIDATOR_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">contentcache</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_INVALIDATOR_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/core-content-cache.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-cache.git" materialName="core-content-cache">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="core-content-cache-1.x-release" stageName="build_release" materialName="invalidator_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="sanch-go-release" />
            </materials>
        </pipeline>
        <pipeline name="core-content-cache-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contentcache</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-cache/tests/contentcache-ops-stage.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-cache</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-cache</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-cache.git" dest="core-content-cache" materialName="core-content-cache" />
                <pipeline pipelineName="core-content-cache-1.x-bake" stageName="build" materialName="ami_bake" />
            </materials>
        </pipeline>
        <pipeline name="core-content-cache-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contentcache</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-cache/tests/contentcache-ops-live.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-cache</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-cache</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-cache.git" dest="core-content-cache" materialName="core-content-cache" />
                <pipeline pipelineName="core-content-cache-1.x-bake" stageName="build" materialName="ami_bake" />
                <pipeline pipelineName="core-content-cache-1.x-deploy-stage" stageName="deploy_ami" />
            </materials>
        </pipeline>
        <pipeline name="core-content-cache-1.x-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="1ad09b24-b223-4c45-90dc-d31aca6f9dbe" />
            </materials>
        </pipeline>
        <pipeline name="core-content-writer-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-writer.git" materialName="core-content-writer">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="core-content-writer-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contentwriter</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-writer/tests/contentwriter-ops-stage.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-writer</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-writer</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-writer.git" dest="core-content-writer" materialName="core-content-writer" />
                <pipeline pipelineName="core-content-writer-1.x-bake" stageName="build" materialName="ami_bake" />
            </materials>
        </pipeline>
        <pipeline name="core-content-writer-1.x-bake" labeltemplate="${WRITER_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">contentwriter</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_WRITER_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/core-content-writer.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/core-content-writer.git" materialName="core-content-writer">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="core-content-writer-1.x-release" stageName="build_release" materialName="writer_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="sanch-go-release" />
            </materials>
        </pipeline>
        <pipeline name="core-content-writer-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">contentwriter</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../core-content-writer/tests/contentwriter-ops-live.json</param>
                <param name="release_notes" />
                <param name="reponame">core-content-writer</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/core-content-writer</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/core-content-writer.git" dest="core-content-writer" materialName="core-content-writer" />
                <pipeline pipelineName="core-content-writer-1.x-bake" stageName="build" materialName="ami_bake" />
                <pipeline pipelineName="core-content-writer-1.x-deploy-stage" stageName="deploy_ami" />
            </materials>
        </pipeline>
        <pipeline name="core-content-writer-1.x-pr" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <materials>
                <scm ref="ef775fd3-3cf0-4fc5-8338-432c32d42f91" />
            </materials>
        </pipeline>
        <pipeline name="kafka-to-kinesis-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/kafka-to-kinesis.git" materialName="kafka-to-kinesis">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="kafka-to-kinesis-1.x-bake" labeltemplate="${COMPONENT_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="component_name">kafkatokinesis</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_COMPONENT_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/kafka-to-kinesis.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_WEBHOP_BASEAMI}</param>
                <param name="playbook">site.yml</param>
                <param name="target_regions">eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/kafka-to-kinesis.git" materialName="kafka-to-kinesis">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-1.x-bake" stageName="build" materialName="webhop_baseami" />
                <pipeline pipelineName="kafka-to-kinesis-1.x-release" stageName="build_release" materialName="component_release" />
                <pipeline pipelineName="ansible-sanch-go-1.x-release" stageName="release" materialName="ansible-sanch-go" />
            </materials>
        </pipeline>
        <pipeline name="kafka-to-kinesis-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">kafkatokinesis</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../kafka-to-kinesis/tests/kafkatokinesis-ops-stage.json</param>
                <param name="release_notes" />
                <param name="reponame">kafka-to-kinesis</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/kafka-to-kinesis</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/kafka-to-kinesis.git" dest="kafka-to-kinesis" materialName="kafka-to-kinesis" />
                <pipeline pipelineName="kafka-to-kinesis-1.x-bake" stageName="build" materialName="ami_bake" />
            </materials>
        </pipeline>
        <pipeline name="kafka-to-kinesis-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${AMI_BAKE}" isLocked="false" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">kafkatokinesis</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_AMI_BAKE}</param>
                <param name="smoke_tests_file">../kafka-to-kinesis/tests/kafkatokinesis-ops-live.json</param>
                <param name="release_notes" />
                <param name="reponame">kafka-to-kinesis</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/kafka-to-kinesis</param>
            </params>
            <materials>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
                <git url="git@github.com:zeebox/kafka-to-kinesis.git" dest="kafka-to-kinesis" materialName="kafka-to-kinesis" />
                <pipeline pipelineName="kafka-to-kinesis-1.x-bake" stageName="build" materialName="ami_bake" />
                <pipeline pipelineName="kafka-to-kinesis-1.x-deploy-stage" stageName="deploy_ami" />
            </materials>
        </pipeline>
        <pipeline name="content-service-webhop-1.x-bake" labeltemplate="${CONTENTS_RELEASE}-b${COUNT}" isLocked="false" template="component-runtime-2">
            <params>
                <param name="playbook">site.yml</param>
                <param name="component_name">content</param>
                <param name="component_version">${GO_DEPENDENCY_LABEL_CONTENTS_RELEASE}</param>
                <param name="component_sha">${GO_REVISION}</param>
                <param name="component_repo">git@github.com:zeebox/ContentService.git</param>
                <param name="ami_version">${GO_PIPELINE_LABEL}</param>
                <param name="foundation_ami_name">webhopbase-nodejs6</param>
                <param name="foundation_ami_version">${GO_DEPENDENCY_LABEL_BASE_AMI}</param>
                <param name="target_regions">us-east-1,eu-central-1</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ContentService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <pipeline pipelineName="webhopbase-nodejs6-1.x-bake" stageName="build" materialName="base_ami" />
                <pipeline pipelineName="content-service-1.x-release" stageName="build_release" materialName="contents_release" />
                <pipeline pipelineName="ansible-consul-agent-1.x-release" stageName="release" materialName="consul_agent" />
                <pipeline pipelineName="ansible-beamly-metrics-1.x-release" stageName="release" materialName="ansible-beamly-metrics" />
            </materials>
        </pipeline>
        <pipeline name="content-service-webhop-1.x-deploy-stage" labeltemplate="${COUNT}-deploy-${CONTENT_BAKE}" template="auto-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">content</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CONTENT_BAKE}</param>
                <param name="smoke_tests_file">../content/tests/content-ops-stage.json</param>
                <param name="release_notes" />
                <param name="reponame">ContentService</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ContentService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ContentService.git" dest="content">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="content-service-webhop-1.x-bake" stageName="build" materialName="content_bake" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="content-service-webhop-1.x-deploy-live" labeltemplate="${COUNT}-deploy-${CONTENT_BAKE}" template="manual-deploy-webhop-ami-3">
            <params>
                <param name="deploy_playbook">deploy-ops.yml</param>
                <param name="test_instance_type">t2.small</param>
                <param name="startup_wait">300</param>
                <param name="component_name">content</param>
                <param name="brand">webhop</param>
                <param name="ami_version">${GO_DEPENDENCY_LABEL_CONTENT_BAKE}</param>
                <param name="smoke_tests_file">../content/tests/content-ops-live.json</param>
                <param name="release_notes" />
                <param name="reponame">ContentService</param>
                <param name="deployment_region">eu-central-1</param>
                <param name="git_repo">https://github.com/zeebox/ContentService</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ContentService.git" dest="content">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="content-service-webhop-1.x-bake" stageName="build" materialName="content_bake" />
                <pipeline pipelineName="content-service-webhop-1.x-deploy-stage" stageName="deploy_ami" materialName="stage_deploy" />
                <pipeline pipelineName="gears-1.1.x" stageName="general-release" materialName="gears" />
                <git url="git@github.com:zeebox/webhop-orchestration.git" dest="webhop-orchestration" materialName="webhop-orchestration">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="Vagrantfile" />
                        <ignore pattern="ansible/vagrant_requirements.yml" />
                        <ignore pattern="vagrant/*" />
                        <ignore pattern="certs/**/*" />
                        <ignore pattern="components/**/*" />
                        <ignore pattern="go-config/**/*" />
                        <ignore pattern="ssh-keys/**/*" />
                        <ignore pattern=".*" />
                        <ignore pattern="*.cfg" />
                        <ignore pattern="cloudfront_distribution.json.j2" />
                        <ignore pattern="create-*" />
                        <ignore pattern="drupal-initial-site-migration.yml" />
                        <ignore pattern="requirements.txt" />
                        <ignore pattern="test-*" />
                        <ignore pattern="wephop-orchestration-create-iam-policy.json" />
                        <ignore pattern="performance-*" />
                        <ignore pattern="drupal-site-assertions.yml" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="content-service-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="component_build_command">scripts/publish.sh</param>
                <param name="test_reports_path">junitresults.xml</param>
                <param name="coverage_reports_path">coverage</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/ContentService.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="package.json" />
                        <ignore pattern="npm-shrinkwrap.json" />
                    </filter>
                </git>
                <pipeline pipelineName="node-autoscaling-0.x-release" stageName="build_release" materialName="autoscaling" />
                <pipeline pipelineName="node-rediswrap-0.x-release" stageName="build_release" materialName="rediswrap" />
                <pipeline pipelineName="node-response-envelope" stageName="build_release" materialName="response-envelope" />
            </materials>
        </pipeline>
        <pipeline name="content-service-pr" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="NPM_CONFIG_PREFIX">
                    <value />
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="1b3353a4-6ae8-49e2-b0d2-a8831a561138" />
            </materials>
        </pipeline>
        <pipeline name="content-service-1.x-verify-runbook">
            <params>
                <param name="component_name">content</param>
            </params>
            <materials>
                <pipeline pipelineName="content-service-1.x-release" stageName="build_release" />
                <git url="git@github.com:zeebox/service-description-utils.git" branch="chris/wip" dest="service-description-utils" materialName="service-description-utils" />
                <git url="git@github.com:zeebox/ContentService.git" branch="chris/service-description" shallowClone="true" invertFilter="true" dest="service" materialName="service">
                    <filter>
                        <ignore pattern="service_description" />
                    </filter>
                </git>
            </materials>
            <stage name="verify">
                <jobs>
                    <job name="verify">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>virtualenv venv; ./venv/bin/pip install -r ./service-description-utils/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="bash" workingdir="service-description-utils">
                                <arg>-c</arg>
                                <arg>../venv/bin/python ./verify.py ../service/service_description/#{component_name}/service.yml</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="content-event-model-1.x-release" labeltemplate="1.0.${COUNT}" isLocked="false" template="release-2">
            <params>
                <param name="coverage_reports_path">coverage/lcov-report/index.html</param>
                <param name="component_build_command">scripts/release.sh</param>
                <param name="test_reports_path">**/surefire-reports</param>
            </params>
            <materials>
                <git url="git@github.com:zeebox/content-event-model.git">
                    <filter>
                        <ignore pattern="README.md" />
                        <ignore pattern="version.sbt" />
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="content-event-model-1.x-pr" isLocked="false" template="pr-test">
            <params>
                <param name="component_pr_verify_script">scripts/verify.sh</param>
            </params>
            <environmentvariables>
                <variable name="JAVA_HOME">
                    <value>/usr/lib/jvm/java-8-oracle/</value>
                </variable>
            </environmentvariables>
            <materials>
                <scm ref="content-event-model-pr-id" />
            </materials>
        </pipeline>
    </pipelines>
    <pipelines group="simple" />
    <templates>
        <pipeline name="auto-deploy-webhop-cc2drupal-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-stage</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-cc2drupal-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-live</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="pre_release_checks">
                <approval type="manual" />
                <jobs>
                    <job name="pre-release-checks-stage">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/drupal-site-pre-assertions.yml --extra-vars "component=#{component_name} brand=#{brand} env=stage region=#{deployment_region}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="pre-release-checks-live">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/drupal-site-pre-assertions.yml --extra-vars "component=#{component_name} brand=#{brand} env=live region=#{deployment_region}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="rds_snapshot">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash" workingdir="webhop-orchestration">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook -vvv ./rds-snapshot.yml --extra-vars "brand=#{brand} region=#{deployment_region} env=${ENVIRONMENT_TYPE} snapshot_identifier=pre-${ENVIRONMENT_TYPE}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-cc2site-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-stage</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="content_config_migration">
                <jobs>
                    <job name="content_config_migration">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>./core-content-utils/deploy/deploy.sh ./#{brand}-site ${ENVIRONMENT_TYPE} #{ami_version}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>webhop.ops-stage</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-cc2site-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-live</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="content_config_migration">
                <approval type="manual" />
                <jobs>
                    <job name="content_config_migration">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>./core-content-utils/deploy/deploy.sh ./#{brand}-site ${ENVIRONMENT_TYPE} #{ami_version}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>webhop.ops-live</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "service_name=#{component_name} component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-ami-no-test-1">
            <stage name="deploy_ami">
                <approval type="manual" />
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --
                                    s="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-ami-no-test-1">
            <stage name="deploy_ami">
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-ami-no-test-2">
            <stage name="deploy_ami">
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="sbt-release-1">
            <stage name="release">
                <jobs>
                    <job name="invoke-sbt">
                        <environmentvariables>
                            <variable name="JAVA_HOME">
                                <value>/usr/lib/jvm/java-8-oracle/</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="sbt">
                                <arg>-v</arg>
                                <arg>-J-Xms2048m</arg>
                                <arg>-J-Xmx3096m</arg>
                                <arg>-J-XX:ReservedCodeCacheSize=387m</arg>
                                <arg>-J-XX:MaxPermSize=774m</arg>
                                <arg>-J-XX:MaxMetaspaceSize=512m</arg>
                                <arg>release with-defaults</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="sbt-release-with-artifacts-1">
            <stage name="release">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke-sbt">
                        <tasks>
                            <exec command="sbt">
                                <arg>-v</arg>
                                <arg>-J-Xms2048m</arg>
                                <arg>-J-Xmx3096m</arg>
                                <arg>-J-XX:ReservedCodeCacheSize=387m</arg>
                                <arg>-J-XX:MaxPermSize=774m</arg>
                                <arg>release with-defaults</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="#{jar_target_dir}/#{jar_name}" />
                            <artifact src="config" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-run-ansible-playbook-1">
            <stage name="deploy">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity} component=#{component} brand=#{brand} region=#{region} env=#{env} url=#{url} service_name=#{service_name} generate_report=#{generate_report}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="run-ansible-playbook-1">
            <stage name="deploy">
                <approval type="manual" />
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>/opt/zeebox/virtualenvs/ansible_env/bin/ansible-playbook -vvv #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-run-ansible-playbook-2">
            <stage name="deploy">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>source /opt/zeebox/virtualenvs/ansible_env/bin/activate &amp;&amp; ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook -${ANSIBLE_VERBOSITY:-v} #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} aws_account=${AWS_ACCOUNT} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-stage</resource>
                            <resource>v5</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="run-ansible-playbook-2">
            <stage name="deploy">
                <approval type="manual" />
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>source /opt/zeebox/virtualenvs/ansible_env/bin/activate &amp;&amp; ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook -${ANSIBLE_VERBOSITY:-v} #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} aws_account=${AWS_ACCOUNT} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-run-ansible-playbook-with-requirements-1">
            <stage name="deploy">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv ansibleenv &amp;&amp; ./ansibleenv/bin/pip install -U pip setuptools &amp;&amp; ./ansibleenv/bin/pip install -U -r #{requirements_file}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./ansibleenv/bin/ansible-playbook -${ANSIBLE_VERBOSITY:-v} #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} aws_account=${AWS_ACCOUNT} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="run-ansible-playbook-with-requirements-1">
            <stage name="deploy">
                <approval type="manual" />
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv ansibleenv &amp;&amp; ./ansibleenv/bin/pip install -U pip setuptools &amp;&amp; ./ansibleenv/bin/pip install -U -r #{requirements_file}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./ansibleenv/bin/ansible-playbook -${ANSIBLE_VERBOSITY:-v} #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} aws_account=${AWS_ACCOUNT} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cloudformation-update">
            <stage name="verifyamis">
                <environmentvariables>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>150</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{test_instance_size}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="testami">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_USERDATA">
                                <value>#{userdata}</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>stage</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <approval type="manual" />
                <environmentvariables>
                    <variable name="AWS_OWNER_ID">
                        <value>440474553311</value>
                    </variable>
                    <variable name="AWS_REGION">
                        <value>us-east-1</value>
                    </variable>
                    <variable name="AWS_STACK_NAME">
                        <value>#{stack_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEMPLATE_FILE">
                        <value>cloudformation/#{component_name}.template</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEMPLATE_PARAMETERS">
                        <value>#{stack_parameters}</value>
                    </variable>
                    <variable name="ZEEBOX_USERDATA">
                        <value>#{userdata}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="update_cloudformation">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>/opt/zeebox/virtualenvs/scripts_env/bin/python ./haproxy/scripts/update-cloudformation-stack.py --DNS #{dns} --COUNTRY ${COUNTRY} --ENVIRONMENT ${ENVIRONMENT_TYPE} --INSTANCETYPE #{instance_size} ${AWS_REGION} #{stack_name} #{template_file} #{component_name}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="asgs-update-regions">
            <stage name="commit">
                <environmentvariables>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="verify-puppet" timeout="5">
                        <environmentvariables>
                            <variable name="GIT_API_TOKEN">
                                <value>002a569725f660feb9b8585cb89ae1537f42049a</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/puppet_verify.sh" workingdir="puppet">
                                <arg>manifests/packer.pp</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="run-tests">
                        <tasks>
                            <exec command="scripts/deploy/scripts/pipeline/run_tests.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bakeamis">
                <environmentvariables>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>puppet</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="verifyamis">
                <environmentvariables>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{test_timeout}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{component_size}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>#{test_env}</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>tests/us-east-1.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_east">
                <approval type="manual" />
                <environmentvariables>
                    <variable name="AWS_OWNER_ID">
                        <value>440474553311</value>
                    </variable>
                    <variable name="AWS_REGION">
                        <value>us-east-1</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_ENVIRONMENT">
                        <value>#{environment}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="update_autoscaling_group">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--environment=#{environment}</arg>
                                <arg>--componentname=#{component_name}</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-cloudformation-us-east-only-manual-release">
            <stage name="commit">
                <environmentvariables>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="verify" timeout="5">
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh" />
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="scripts/build.sh" />
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bakeamis">
                <environmentvariables>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>puppet</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="verifyamis">
                <environmentvariables>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{test_timeout}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{component_size}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="verify">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>#{region}</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>#{test_env}</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>tests/us-east-1.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>#{country}</value>
                            </variable>
                            <variable name="ZEEBOX_STARTUP_WAIT">
                                <value>#{startup_wait}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <approval type="manual" />
                <environmentvariables>
                    <variable name="AWS_OWNER_ID">
                        <value>440474553311</value>
                    </variable>
                    <variable name="AWS_REGION">
                        <value>#{region}</value>
                    </variable>
                    <variable name="AWS_STACK_NAME">
                        <value>#{stack_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEMPLATE_FILE">
                        <value>cloudformation/#{component_name}.template</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEMPLATE_PARAMETERS">
                        <value>#{template_parameters}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="update_cloudformation">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy_cloudformation.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="release-1">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}" />
                        </tabs>
                        <resources>
                            <resource>#{go_agent_resource}</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="release-2">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}/lcov-report/index.html" />
                        </tabs>
                        <resources>
                            <resource>beamly</resource>
                            <resource>v5</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="component-runtime-1">
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="bake_ami">
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_bake --component-name="#{component_name}" --component-version="#{component_version}" --component-sha="#{component_sha}" --ami-version="#{ami_version}" --component-repo="#{component_repo}" --foundation-ami-name="#{foundation_ami_name}" --foundation-ami-version="#{foundation_ami_version}" --playbook="#{playbook}" ${BUILD_PARAVIRTUAL:+--also-build-paravirtual} --target-regions="#{target_regions}"</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="component-runtime-2">
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="bake_ami">
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_bake --component-name="#{component_name}" --component-version="#{component_version}" --component-sha="#{component_sha}" --ami-version="#{ami_version}" --component-repo="#{component_repo}" --foundation-ami-name="#{foundation_ami_name}" --foundation-ami-version="#{foundation_ami_version}" --playbook="#{playbook}" ${BUILD_PARAVIRTUAL:+--also-build-paravirtual} --target-regions="#{target_regions}" ${PACKER_ANSIBLE_VERSION:+--ansible-version=$PACKER_ANSIBLE_VERSION}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>v5</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="component-runtime-3">
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="bake_ami">
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_bake --component-name="#{component_name}" --component-version="#{component_version}" --component-sha="#{component_sha}" --ami-version="#{ami_version}" --component-repo="#{component_repo}" --foundation-ami-name="#{foundation_ami_name}" --foundation-ami-version="#{foundation_ami_version}" --playbook="#{playbook}" ${BUILD_PARAVIRTUAL:+--also-build-paravirtual} --target-regions="#{target_regions}" ${PACKER_ANSIBLE_VERSION:+--ansible-version=$PACKER_ANSIBLE_VERSION}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="ansible-release-1">
            <stage name="release">
                <jobs>
                    <job name="release">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL} &amp;&amp; git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <approval type="manual" />
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-ami-2">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <approval type="manual" />
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-ami-2">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="gears-deploy-ami">
                        <environmentvariables>
                            <variable name="component_version">
                                <value>expr "#{ami_version}" : '\([0-9\.]*\)'</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_deploy --region="${AWS_REGION}" --environment="${ENVIRONMENT_TYPE}" --component-name="#{component_name}" --component-version="$(eval ${component_version})" --ami-version="#{ami_version}" --release-notes="#{release_notes}" --component-reponame="#{reponame}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="webhop-fastly-update-1">
            <stage name="cdn-update">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash" workingdir="webhop-orchestration">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook sync-fastly-service.yml --extra-vars "config=../#{cdn_config_path}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="purge">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{purge_playbook} --extra-vars "component=#{component} brand=#{brand} region=#{region} env=#{env} service_name=#{service_name}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="release-webhop-s3-1">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash" workingdir="static-site-optimizer">
                                <arg>-c</arg>
                                <arg>npm install &amp;&amp; npm run optimize -- --web-root ../component/www/</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash" workingdir="component">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}" />
                        </tabs>
                        <resources>
                            <resource>#{go_agent_resource}</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-ami-2">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-ami-3">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-live</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <approval type="manual" />
                <jobs>
                    <job name="ansible-bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-ami-3">
            <stage name="test_ami">
                <jobs>
                    <job name="ansible-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv webhop &amp;&amp; ./webhop/bin/pip install -r webhop-orchestration/requirements.txt</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ./webhop/bin/ansible-playbook webhop-orchestration/test-ami.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo} instance_type_override=#{test_instance_type} startup_wait=#{startup_wait} test_file=#{smoke_tests_file}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>webhop.ops-stage</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="ansible-bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} service_name=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-ami-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <approval type="manual" />
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "service_name=#{component_name} component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-ami-with-db-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="rds_snapshot">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv ansibleenv ; ./ansibleenv/bin/pip install -U setuptools ansible==2.0.2.0 boto boto3 httplib2</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>./ansibleenv/bin/ansible-playbook -vvv ./rds-snapshot.yml --extra-vars "brand=#{brand} region=#{deployment_region} env=${ENVIRONMENT_TYPE} snapshot_identifier=pre-${ENVIRONMENT_TYPE}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/#{deploy_playbook} --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-ami-with-db-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="rds_snapshot">
                <approval type="manual" />
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash" workingdir="webhop-orchestration">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook -vvv ./rds-snapshot.yml --extra-vars "brand=#{brand} region=#{deployment_region} env=${ENVIRONMENT_TYPE} snapshot_identifier=pre-${ENVIRONMENT_TYPE}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-ami-drupal-1">
            <stage name="test_ami">
                <jobs>
                    <job name="gears-test-ami">
                        <environmentvariables>
                            <variable name="TEST_INSTANCE_TYPE">
                                <value>#{test_instance_type}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="gears-1.1.x" stage="pre-release" job="build" srcfile="gears_env/gears_env.tar.gz" />
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>mkdir gears_env &amp;&amp; tar -xzf gears_env.tar.gz -C gears_env</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>gears_env/bin/ami_test --smolder-binpath="/opt/zeebox/virtualenvs/test_tools/bin/smolder" --country="${COUNTRY}" --envlevel="${ENVIRONMENT_TYPE}" --ami-version="#{ami_version}" --component-name="#{component_name}" --test-file="#{smoke_tests_file}" --startup-wait="#{startup_wait}" ${TEST_INSTANCE_TYPE:+--instance-type=${TEST_INSTANCE_TYPE}}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="pre_release_checks">
                <approval type="manual" />
                <jobs>
                    <job name="pre-release-checks-stage">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/drupal-site-pre-assertions.yml --extra-vars "component=#{component_name} brand=#{brand} env=stage region=#{deployment_region}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="pre-release-checks-live">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/drupal-site-pre-assertions.yml --extra-vars "component=#{component_name} brand=#{brand} env=live region=#{deployment_region}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="rds_snapshot">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash" workingdir="webhop-orchestration">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook -vvv ./rds-snapshot.yml --extra-vars "brand=#{brand} region=#{deployment_region} env=${ENVIRONMENT_TYPE} snapshot_identifier=pre-${ENVIRONMENT_TYPE}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ami">
                <jobs>
                    <job name="bluegreen-deploy-ami">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy.yml --extra-vars "component=#{component_name} brand=#{brand} ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=#{deployment_region} component_git_repo=#{git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-deploy-webhop-s3-1">
            <stage name="s3_upload">
                <jobs>
                    <job name="s3_upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy-s3.yml --extra-vars "component=#{component} version=#{version} web_link=#{web_link} env=${ENVIRONMENT_TYPE} s3_bucket=#{s3_bucket} region=#{region} component_git_repo=#{component_git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="manual-deploy-webhop-s3-1">
            <stage name="s3_upload">
                <approval type="manual" />
                <jobs>
                    <job name="s3_upload">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook webhop-orchestration/deploy-s3.yml --extra-vars "component=#{component} version=#{version} web_link=#{web_link} env=${ENVIRONMENT_TYPE} s3_bucket=#{s3_bucket} region=#{region} component_git_repo=#{component_git_repo}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="shell-command-1">
            <stage name="stage">
                <jobs>
                    <job name="job">
                        <environmentvariables>
                            <variable name="GO_API_USER">
                                <value>notifications</value>
                            </variable>
                            <variable name="GO_API_PASSWORD">
                                <value>notifications</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{command}</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                            <resource>v5</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-dev-stage-live-us-east-only-manual-live-release">
            <stage name="commit">
                <jobs>
                    <job name="VerifyAndTag" timeout="5">
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag #{autoscaling_build_prefix}${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build_release" cleanWorkingDir="true">
                <jobs>
                    <job name="ciBuild">
                        <environmentvariables>
                            <variable name="MAVEN_OPTS">
                                <value>#{maven_opts}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="coverage/lcov-report/index.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="**/surefire-reports" />
                            <test src="coverage" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_PATH">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                    <variable name="AUTOSCALING_BUILD_PREFIX">
                        <value>#{autoscaling_build_prefix}</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value />
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value />
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>#{bake_agent_type}</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_amis_stage">
                <environmentvariables>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{instance_size}</value>
                    </variable>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{startup_wait}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="US-stage">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>stage</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-stage-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                                <value>#{instance_size}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_stage">
                <approval type="manual" />
                <jobs>
                    <job name="us">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                            <variable name="ZEEBOX_RELEASE_NOTES">
                                <value>#{release_notes}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=stage</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_amis_live">
                <environmentvariables>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{instance_size}</value>
                    </variable>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{startup_wait}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="US-live">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>live</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-live-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                                <value>#{instance_size}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_live">
                <approval type="manual" />
                <jobs>
                    <job name="callAsgard">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=live</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pr-test">
            <stage name="build" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_pr_verify_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="coverage" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="beamly-simple-ami-bake-no-test">
            <stage name="commit">
                <jobs>
                    <job name="verify_config" timeout="5">
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag #{autoscaling_build_prefix}${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git checkout #{autoscaling_build_prefix}${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="release" cleanWorkingDir="true">
                <jobs>
                    <job name="ciRelease">
                        <environmentvariables>
                            <variable name="MAVEN_OPTS">
                                <value>-Xmx1024m -XX:MaxPermSize=128m</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git checkout #{autoscaling_build_prefix}${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_release_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="**/surefire-reports" />
                            <test src="coverage" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_PATH">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value />
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value />
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                    <variable name="PLAYBOOK">
                        <value>#{playbook}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="zeebox-autoscaling-deploy-us-only">
            <stage name="commit">
                <jobs>
                    <job name="VerifyPuppetAndTag" timeout="5">
                        <environmentvariables>
                            <variable name="AUTOSCALING_BUILD_PREFIX">
                                <value>#{autoscaling_build_prefix}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/git_tag_branch.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_PATH">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>qPe1v1Tg+np1iRpadIAjg6OosnbMSxN2zS6+dL2F</value>
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="amibake_us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{instance_size}</value>
                    </variable>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{startup_wait}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="US-stage">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>stage</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-stage-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <arg>--country=us</arg>
                                <arg>--env=stage</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="US-live">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>live</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-live-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <arg>--country=us</arg>
                                <arg>--env=live</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_stage">
                <approval type="manual" />
                <jobs>
                    <job name="us">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=stage</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_live">
                <approval type="manual" />
                <jobs>
                    <job name="callAsgard">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=live</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="zeebox-autoscaling-deploy-us-only-puppet-only">
            <stage name="commit">
                <jobs>
                    <job name="VerifyPuppetAndTag" timeout="5">
                        <environmentvariables>
                            <variable name="AUTOSCALING_BUILD_PREFIX">
                                <value>#{autoscaling_build_prefix}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/git_tag_branch.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="ciBuild">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_PATH">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>qPe1v1Tg+np1iRpadIAjg6OosnbMSxN2zS6+dL2F</value>
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="amibake_us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="test_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{instance_size}</value>
                    </variable>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{startup_wait}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{zeebox_component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="US-stage">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>stage</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-stage-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <arg>--country=us</arg>
                                <arg>--env=stage</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="US-live">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>live</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>./tests/us-live-status.json</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <arg>--country=us</arg>
                                <arg>--env=live</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_stage">
                <jobs>
                    <job name="us">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=stage</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_us_live">
                <approval type="manual" />
                <jobs>
                    <job name="callAsgard">
                        <environmentvariables>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{zeebox_component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--environment=live</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="beamly-us-autoscaling-deploy-ops-only">
            <stage name="verify-config">
                <jobs>
                    <job name="verify" timeout="5">
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="scripts/build.sh" />
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_ami">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="bake_us_ami">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="verify_amis">
                <environmentvariables>
                    <variable name="ZEEBOX_STARTUP_WAIT">
                        <value>#{startup_wait}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_TEST_INSTANCE_SIZE">
                        <value>#{instance_size}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-ops">
                        <environmentvariables>
                            <variable name="ZEEBOX_DEPLOY_REGION">
                                <value>us-east-1</value>
                            </variable>
                            <variable name="ZEEBOX_ENV">
                                <value>ops</value>
                            </variable>
                            <variable name="ZEEBOX_TEST_FILE">
                                <value>#{zeebox_test_file}</value>
                            </variable>
                            <variable name="ZEEBOX_DEPLOY_COUNTRY">
                                <value>us</value>
                            </variable>
                            <variable name="ZEEBOX_COMPONENT_NAME">
                                <value>#{component_name}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_test.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ops">
                <approval type="manual" />
                <jobs>
                    <job name="ami_deploy">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--environment=#{environment}</arg>
                                <arg>--componentname=#{component_name}</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="beamly-autoscaling-deploy-ops-only-hvm">
            <stage name="verify-config">
                <jobs>
                    <job name="verify" timeout="5">
                        <tasks>
                            <exec command="/opt/zeebox/autoscaling/scripts/pipeline/verify.sh">
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="bake_ami">
                <environmentvariables>
                    <variable name="ZEEBOX_COMPONENT_NAME">
                        <value>#{component_name}</value>
                    </variable>
                    <variable name="ZEEBOX_COMPONENT_REPO">
                        <value>#{component_repo}</value>
                    </variable>
                    <variable name="AWS_ACCESS_KEY">
                        <value>AKIAIRSJT2V56POBJKLA</value>
                    </variable>
                    <variable name="AWS_SECRET_KEY">
                        <value>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</value>
                    </variable>
                    <variable name="ZEEBOX_PUPPET_PATH">
                        <value>#{puppet_path}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="us-east-1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_bake.py</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy_ops_us">
                <approval type="manual" />
                <jobs>
                    <job name="deploy_us_east_1">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/autoscaling/bin/python">
                                <arg>/opt/zeebox/autoscaling/scripts/pipeline/ami_deploy.py</arg>
                                <arg>--environment=ops</arg>
                                <arg>--componentname=#{component_name}</arg>
                                <arg>--region=us-east-1</arg>
                                <arg>--release-notes="#{release_notes}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>goagent</resource>
                            <resource>us-east-1</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="Stage_power_switch">
            <stage name="running_script">
                <approval type="manual" />
                <jobs>
                    <job name="running_script">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/scripts_env/bin/python">
                                <arg>scripts/manage/stage_power_switch.py</arg>
                                <arg>#{country}</arg>
                                <arg>#{power}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="BuildPublishJarFromSbt">
            <stage name="Tag">
                <jobs>
                    <job name="Tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="BuildAndDeploy">
                <jobs>
                    <job name="buildAndDeploy">
                        <tasks>
                            <exec command="sbt">
                                <arg>-Dsbt.log.noformat=true</arg>
                                <arg>clean</arg>
                                <arg>update</arg>
                                <arg>test</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="sbt">
                                <arg>-Dsbt.log.noformat=true</arg>
                                <arg>package</arg>
                                <arg>publish</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-storm-topolgy">
            <stage name="fetch_artifacts_and_deploy">
                <jobs>
                    <job name="fetch_deploy">
                        <tasks>
                            <fetchartifact pipeline="#{upstream}" stage="release" job="invoke-sbt" srcfile="#{jar_name}" dest="artifacts">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="#{upstream}" stage="release" job="invoke-sbt" srcfile="#{submodule_config_dir}#{config_dir}/#{environment}/config.conf.j2" dest="templates/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/opt/zeebox/virtualenvs/ansible_env/bin/ansible-playbook">
                                <arg>deploy.yml</arg>
                                <arg>-i</arg>
                                <arg>inventory.ini</arg>
                                <arg>--extra-vars</arg>
                                <arg>env=#{environment} country=#{country} nimbus_host=#{nimbus_host} jar_name=#{jar_name} main_class=#{main_class} main_args=#{main_args} topology_name=#{topology_name}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-storm-topology-from-nexus-and-git">
            <stage name="deploy">
                <jobs>
                    <job name="runPlaybook">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/ansible_env/bin/ansible-playbook">
                                <arg>deploy.yml</arg>
                                <arg>-i</arg>
                                <arg>inventory.ini</arg>
                                <arg>--extra-vars</arg>
                                <arg>env=#{environment} country=#{country} nimbus_host=#{nimbus_host} jar_name=#{jar_name} main_class=#{main_class} main_args=#{main_args} topology_name=#{topology_name} topology_repo=#{topology_repo} nexus_path=#{nexus_path} nexus_name=#{nexus_name} subproject_dir=#{subproject_dir} upstream_version=#{upstream_version}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>curl -s -XPOST -d"{\"text\":\"GO Output: https://goserver.go.beamly.com:8154/go/files/${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}/${GO_STAGE_NAME}/${GO_STAGE_COUNTER}/${GO_JOB_NAME}/cruise-output/console.log\nGithub Link: https://github.com/zeebox/${ZEEBOX_COMPONENT_REPONAME}/commit/${GO_REVISION}\", \"icon_emoji\":\":banana:\", \"username\":\"GO DEPLOYED #{topology_name} TOPOLOGY v${GO_DEPENDENCY_LABEL_UPSTREAM} TO #{country} #{environment}\"}" "https://beamly.slack.com/services/hooks/incoming-webhook?token=W50vgFl1DEkdiGPTDuZZz1cg"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-storm-topology-live">
            <stage name="fetch_artifacts_and_deploy">
                <approval type="manual" />
                <jobs>
                    <job name="fetch_deploy">
                        <tasks>
                            <fetchartifact pipeline="#{upstream}" stage="release" job="invoke-sbt" srcfile="#{jar_name}" dest="artifacts">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="#{upstream}" stage="release" job="invoke-sbt" srcfile="#{submodule_config_dir}#{config_dir}/#{environment}/config.conf.j2" dest="templates/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/opt/zeebox/virtualenvs/ansible_env/bin/ansible-playbook">
                                <arg>deploy.yml</arg>
                                <arg>-i</arg>
                                <arg>inventory.ini</arg>
                                <arg>--extra-vars</arg>
                                <arg>env=#{environment} country=#{country} nimbus_host=#{nimbus_host} jar_name=#{jar_name} main_class=#{main_class} main_args=#{main_args} topology_name=#{topology_name}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="deploy-live-storm-topology-from-nexus-and-git">
            <stage name="hold">
                <jobs>
                    <job name="hold">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>echo Holding...</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <approval type="manual" />
                <jobs>
                    <job name="runPlaybook">
                        <tasks>
                            <exec command="/opt/zeebox/virtualenvs/ansible_env/bin/ansible-playbook">
                                <arg>deploy.yml</arg>
                                <arg>-i</arg>
                                <arg>inventory.ini</arg>
                                <arg>--extra-vars</arg>
                                <arg>env=live country=#{country} nimbus_host=#{nimbus_host} jar_name=#{jar_name} main_class=#{main_class} main_args=#{main_args} topology_name=#{topology_name} topology_repo=#{topology_repo} nexus_path=#{nexus_path} nexus_name=#{nexus_name} subproject_dir=#{subproject_dir} upstream_version=#{upstream_version}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>curl -s -XPOST -d"{\"text\":\"GO Output: https://goserver.go.beamly.com:8154/go/files/${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}/${GO_STAGE_NAME}/${GO_STAGE_COUNTER}/${GO_JOB_NAME}/cruise-output/console.log\nGithub Link: https://github.com/zeebox/${ZEEBOX_COMPONENT_REPONAME}/commit/${GO_REVISION}\", \"icon_emoji\":\":banana:\", \"username\":\"GO DEPLOYED #{topology_name} TOPOLOGY v${GO_DEPENDENCY_LABEL_UPSTREAM} TO #{country} live\"}" "https://beamly.slack.com/services/hooks/incoming-webhook?token=W50vgFl1DEkdiGPTDuZZz1cg"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="wordpress-plugin">
            <stage name="commit">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag ${GO_PIPELINE_COUNTER}</arg>
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>curl -sS https://getcomposer.org/installer | php</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f composer.json ]; then php composer.phar install; else mkdir -p vendor; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="vendor" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="test" cleanWorkingDir="true">
                <jobs>
                    <job name="test">
                        <tasks>
                            <fetchartifact pipeline="" stage="build" job="build" srcdir="vendor">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="./bin/install-wp-tests.sh">
                                <arg>#{wp_test_db_name}</arg>
                                <arg>wordpresstests</arg>
                                <arg>pbBNTS514V0bwmS</arg>
                                <arg>ops-wordpress-tests.cu24qzleczts.us-east-1.rds.amazonaws.com</arg>
                                <arg>#{wp_version}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="wget">
                                <arg>https://phar.phpunit.de/phpunit.phar</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="php">
                                <arg>phpunit.phar</arg>
                                <arg>--log-junit</arg>
                                <arg>junit.xml</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="junit.xml" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="package" cleanWorkingDir="true">
                <jobs>
                    <job name="package">
                        <tasks>
                            <fetchartifact pipeline="" stage="build" job="build" srcdir="vendor">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>sed -i -e "s/^Version: [0-9.]*$/Version: ${GO_PIPELINE_COUNTER}/g" #{wp_plugin_name}.php</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>tar -zcvf /tmp/#{wp_plugin_name}-$GO_PIPELINE_COUNTER.tar.gz --transform "s/^\./#{wp_plugin_name}/" --exclude='.git*' .</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>s3cmd --add-header=x-amz-acl:authenticated-read put /tmp/#{wp_plugin_name}-${GO_PIPELINE_COUNTER}.tar.gz s3://beamly-pipeline-artifacts/wordpress/#{wp_plugin_name}-${GO_PIPELINE_COUNTER}.tar.gz</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="release">
                <approval type="manual" />
                <jobs>
                    <job name="release">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>s3cmd --add-header=x-amz-acl:authenticated-read cp s3://beamly-pipeline-artifacts/wordpress/#{wp_plugin_name}-${GO_PIPELINE_COUNTER}.tar.gz s3://beamly-pipeline-artifacts/wordpress/#{wp_plugin_name}-latest.tar.gz</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="elasticsearch-backup">
            <stage name="backup" fetchMaterials="false">
                <jobs>
                    <job name="backup" timeout="0">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>curl -i -XPUT "http://#{cluster}.#{environment}.#{country}.elasticsearch.beamly.com:16210/_snapshot/s3_backup_repository/snapshot_${GO_PIPELINE_COUNTER}_`date +'%Y%m%d%H%M%S'`?wait_for_completion=true" -d'{"indices":["#{index}"]}'</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>task</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="integration-test-1">
            <stage name="test-build">
                <jobs>
                    <job name="invoke-test-script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>#{go_agent_resource}</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="azkaban-deploy-job-auto">
            <stage name="deploy">
                <jobs>
                    <job name="deploy">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>./#{PROJECT}/azkaban-common/scripts/deploy.sh #{PROJECT} http://haproxy-${ENVIRONMENT_TYPE}-us.beamly.com:14100</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="azkaban-deploy-job-manual">
            <stage name="deploy">
                <approval type="manual" />
                <jobs>
                    <job name="deploy">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>./#{PROJECT}/azkaban-common/scripts/deploy.sh #{PROJECT} http://haproxy-${ENVIRONMENT_TYPE}-us.beamly.com:14100</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="auto-run-ansible-playbook-realtime-1">
            <stage name="deploy">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>source /opt/zeebox/virtualenvs/ansible_env/bin/activate &amp;&amp; ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook -v #{playbooks-dir}/#{playbook} --extra-vars "ami_version=#{ami_version} env=${ENVIRONMENT_TYPE} region=${AWS_REGION} instance_type=#{instance_type} virtualization_type=#{virtualization_type} desired_capacity=#{desired_capacity}" -i #{playbooks-dir}/#{inventory}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="drupal-module">
            <stage name="build" cleanWorkingDir="true">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>curl -sS https://getcomposer.org/installer | php</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="bash">
                                <arg>-c</arg>
                                <arg>if [ -f composer.json ]; then php composer.phar install; else mkdir -p vendor; fi</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="vendor" />
                            <artifact src="composer.phar" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="test" cleanWorkingDir="true">
                <jobs>
                    <job name="test">
                        <tasks>
                            <fetchartifact pipeline="" stage="build" job="build" srcfile="composer.phar">
                                <runif status="passed" />
                            </fetchartifact>
                            <fetchartifact pipeline="" stage="build" job="build" srcdir="vendor">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="./scripts/test.sh">
                                <arg>#{drupal_module_name}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="junit.xml" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="release">
                <jobs>
                    <job name="tag">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>sed -i -e "s/^version = [0-9.x-]*$/version = ${GO_PIPELINE_LABEL}/g" #{drupal_module_name}.info</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git add #{drupal_module_name}.info</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git commit -m "release ${GO_PIPELINE_LABEL}"</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git tag v${GO_PIPELINE_LABEL}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>git push --follow-tags</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="spark-qubole-deploy-1">
            <stage name="deploy">
                <environmentvariables>
                    <variable name="ANSIBLE_CONSUL_URL">
                        <value>http://ops.us-east-1.consul.beamly.com:80</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="runPlaybook">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>virtualenv ansibleenv ; ./ansibleenv/bin/pip install boto ; ./ansibleenv/bin/pip install python-consul; ./ansibleenv/bin/pip install ansible==2.1.1.0</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>echo ${QUBOLE_OPS_DATA_TOKEN}</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>./ansibleenv/bin/ansible-playbook ansible/deploy.yml -vvvv --extra-vars "env="${ENVIRONMENT_TYPE}" country="${COUNTRY}" component_name="#{component_name}" component_version="#{component_version}" project_checkout_folder="#{project_checkout_folder}" subproject_dir="#{subproject_dir}" main_class="#{main_class}" main_args="#{main_args}" qubole_cluster="#{qubole_cluster}" component_group_id="#{component_group_id}" component_artifact_id="#{component_artifact_id}" ansible_python_interpreter="./ansibleenv/bin/python""</arg>
                                <runif status="passed" />
                            </exec>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>curl -s -XPOST -d"{\"text\":\"GO Output: https://goserver.go.beamly.com:8154/go/files/${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}/${GO_STAGE_NAME}/${GO_STAGE_COUNTER}/${GO_JOB_NAME}/cruise-output/console.log\nGithub Link: https://github.com/zeebox/#{component_reponame}/commit/${GO_REVISION_UPSTREAM}\", \"icon_emoji\":\":banana:\", \"username\":\"GO DEPLOYED #{component_name} SPARK JOB v#{component_version} TO Qubole in ${ENVIRONMENT_TYPE}\"}" "https://beamly.slack.com/services/hooks/incoming-webhook?token=W50vgFl1DEkdiGPTDuZZz1cg"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="acceptance-tests">
            <stage name="test">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>scripts/test.sh #{test_profile}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="reports" />
                            <test src="target/docs" dest="docs" />
                            <test src="test/functional_tests/reports" dest="reports" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cucumber-ruby">
            <stage name="cucumber-tests">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/test.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="reports" />
                            <test src="target/docs" dest="docs" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="cucumber-ruby-live">
            <stage name="cucumber-live-tests">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/test-live.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="reports" />
                            <test src="target/docs" dest="docs" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="vagrant-1">
            <stage name="build_release">
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <artifact src="#{vagrant_build_artifact_path}" />
                            <artifact src="#{vagrantfile_build_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pr-cucumber-tests">
            <stage name="build" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="JAVA_HOME">
                        <value>/usr/lib/jvm/java-8-oracle/</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_pr_verify_script}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="coverage" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="cucumber-tests">
                <jobs>
                    <job name="build">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/test-pr.sh</arg>
                                <arg />
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="cucumber_reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="cucumber_reports" />
                            <test src="target/docs" dest="docs" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="core-component-release-tests-1">
            <stage name="cucumber">
                <jobs>
                    <job name="cucumber">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>scripts/test-release.sh</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="cucumber_reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="cucumber_reports" />
                            <test src="target/docs" dest="docs" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="webhop-fastly-update-2">
            <stage name="cdn-update">
                <jobs>
                    <job name="invoke-ansible">
                        <tasks>
                            <exec command="/bin/bash" workingdir="webhop-orchestration">
                                <arg>-c</arg>
                                <arg>ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /opt/zeebox/virtualenvs/webhop/bin/ansible-playbook sync-fastly-service.yml --extra-vars "config=../#{cdn_config_path} baseconfig=#{cdn_baseconfig_path} dryrun=#{dryrun}"</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="node-module-release-1">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}/lcov-report/index.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="unit-test">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="run-unit-test">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_unit_test_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="release-to-npm">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="release-npm-package">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_release_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="component-release-1">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}/lcov-report/index.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="unit-test">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="run-unit-test">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_unit_test_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="tests">
                <environmentvariables>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="percy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_percy_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="cucumber">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_cucumber_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="accessibility">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_accessibility_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="performance">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_performance_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="release-to-npm">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="release-npm-package">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_release_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="component-pr-1">
            <stage name="build_release" cleanWorkingDir="true">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="invoke_build_script">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_build_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="Coverage" path="#{coverage_reports_path}/lcov-report/index.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="#{test_reports_path}" />
                            <test src="#{coverage_reports_path}" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="unit-test">
                <environmentvariables>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="run-unit-test">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_unit_test_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
            <stage name="tests">
                <environmentvariables>
                    <variable name="GO_API_PASSWORD">
                        <value>notifications</value>
                    </variable>
                    <variable name="GO_API_USER">
                        <value>notifications</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="percy">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_percy_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="cucumber">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_cucumber_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="html_Results" path="reports/reports/index.html" />
                            <tab name="Documentation" path="docs/docs/documentation.html" />
                        </tabs>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                        <artifacts>
                            <test src="test/reports" dest="reports" />
                            <test src="target/docs" dest="docs" />
                        </artifacts>
                    </job>
                    <job name="accessibility">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_accessibility_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                    <job name="performance">
                        <tasks>
                            <exec command="/bin/bash">
                                <arg>-c</arg>
                                <arg>#{component_performance_command}</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <resources>
                            <resource>v5</resource>
                            <resource>beamly</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="plugin-api-template">
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob" />
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="terraform">
            <stage name="validate">
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="validate" timeout="20" elasticProfileId="ecs-agent-terraform">
                        <tasks>
                            <fetchartifact pipeline="#{TerraformInputArtifactPipeline}" stage="#{TerraformInputArtifactStage}" job="#{TerraformInputArtifactJob}" srcfile="variables_override.tf" dest="libretti/#{Libretto}/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="make">
                                <arg>init_libretto</arg>
                                <arg>validate</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="ValidationGraph" path="validate_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="validate_graph.png" />
                            <artifact src="libretti/#{Libretto}/" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="plan">
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="plan" elasticProfileId="ecs-agent-terraform">
                        <tasks>
                            <fetchartifact pipeline="" stage="validate" job="validate" srcdir="libretti/#{Libretto}" dest="libretti/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="make">
                                <arg>plan</arg>
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="PlanGraph" path="plan_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="libretti/#{Libretto}/" />
                            <artifact src="plan_graph.png" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <approval type="manual" />
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="deploy" elasticProfileId="ecs-agent-terraform">
                        <tasks>
                            <fetchartifact pipeline="" stage="plan" job="plan" srcdir="libretti/#{Libretto}" dest="libretti/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="make">
                                <arg>apply</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="ApplyGraph" path="apply_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="apply_graph.png" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="terraform-no-artifact">
            <stage name="validate">
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="validate" elasticProfileId="ecs-agent-terraform">
                        <tasks>
                            <exec command="make" workingdir="#{TFDirectory}">
                                <arg>init_libretto</arg>
                                <arg>validate</arg>
                                <arg>clean-artifact</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="ValidationGraph" path="validate_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="#{TFDirectory}validate_graph.png" />
                            <artifact src="#{TFDirectory}libretti/#{Libretto}/" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="plan">
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="plan" elasticProfileId="ecs-agent-terraform">
                        <tasks>
                            <fetchartifact pipeline="" stage="validate" job="validate" srcdir="#{TFDirectory}libretti/#{Libretto}/" dest="#{TFDirectory}libretti/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="make" workingdir="#{TFDirectory}">
                                <arg>plan</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="PlanGraph" path="plan_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="#{TFDirectory}libretti/#{Libretto}/" />
                            <artifact src="#{TFDirectory}plan_graph.png" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
            <stage name="deploy">
                <approval type="manual" />
                <environmentvariables>
                    <variable name="LIBRETTO">
                        <value>#{Libretto}</value>
                    </variable>
                    <variable name="ENVIRONMENT">
                        <value>#{Environment}</value>
                    </variable>
                    <variable name="REGION">
                        <value>#{Region}</value>
                    </variable>
                    <variable name="ACCCOUNT">
                        <value>#{AWSAccount}</value>
                    </variable>
                    <variable name="BRAND">
                        <value>#{Brand}</value>
                    </variable>
                </environmentvariables>
                <jobs>
                    <job name="deploy" elasticProfileId="ecs-agent-terraform">
                        <environmentvariables>
                            <variable name="ACCOUNT">
                                <value>#{AWSAccount}</value>
                            </variable>
                        </environmentvariables>
                        <tasks>
                            <fetchartifact pipeline="" stage="plan" job="plan" srcdir="#{TFDirectory}libretti/#{Libretto}" dest="#{TFDirectory}libretti/">
                                <runif status="passed" />
                            </fetchartifact>
                            <exec command="make" workingdir="#{TFDirectory}">
                                <arg>apply</arg>
                                <runif status="passed" />
                            </exec>
                        </tasks>
                        <tabs>
                            <tab name="ApplyGraph" path="apply_graph.png" />
                        </tabs>
                        <artifacts>
                            <artifact src="#{TFDirectory}apply_graph.png" />
                        </artifacts>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </templates>
    <environments>
        <environment name="stage-us-east-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>beamly</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
                <variable name="COUNTRY">
                    <value>us</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>us-east-1</value>
                </variable>
                <variable name="EnvLevel">
                    <value>stage</value>
                </variable>
                <variable name="QUBOLE_OPS_DATA_TOKEN" secure="true">
                    <encryptedValue>1lwCwwLeCXqa/XEynvIjl3mdCviJmfW52ItoMiygjbCt5IPWSMLCmoDdN7LItGTOJ3jzjbPLyw/LJ1LhqyPfbZLPnR8CePtb</encryptedValue>
                </variable>
                <variable name="FACEBOOK_TOKEN" secure="true">
                    <encryptedValue>45mofqmnkCwxK6XMNgDFckp8XnpoA2rVhnvyA7RtP4yCfxx8vZ+84rp0H24yIMU0ReeRNXCizAiCPFrhY8xgvzZsRNcZSos5pWHFgi2U6tE2YXIUmsZBQ8GwCKMBKjaLOC+FJw0rVQRloUZP3R/DWV9FHAmJxNN3Kd1uLprbG+lUSYN/azlmBkX30Lodc91pmQgQhhGrA6TxbTgMeKSS4PRpFBZfQ5kCSvznTQM5qMMdb//u3CZypg==</encryptedValue>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="adaccountdeltas-1.x-deploy-stage" />
                <pipeline name="article-service-1.x-deploy-stage" />
                <pipeline name="astor-1.x-deploy-stage" />
                <pipeline name="astor-1.x-post-release-assertions-stage" />
                <pipeline name="astor-1.x-post-release-cdn-update-stage" />
                <pipeline name="astor-1.x-post-release-migrate-stage" />
                <pipeline name="astor-1.x-post-release-performance-checks-stage" />
                <pipeline name="azkaban-2.5.x-deploy-stage" />
                <pipeline name="balenciagafragrance-1.x-deploy-stage" />
                <pipeline name="balenciagafragrance-1.x-post-release-assertions-stage" />
                <pipeline name="balenciagafragrance-1.x-post-release-cdn-update-stage" />
                <pipeline name="balenciagafragrance-1.x-post-release-migrate-stage" />
                <pipeline name="balenciagafragrance-1.x-post-release-performance-checks-stage" />
                <pipeline name="beamly-site-1.x-assetupload-stage" />
                <pipeline name="beamly-site-1.x-deploy-stage" />
                <pipeline name="beckham-1.x-deploy-stage" />
                <pipeline name="beckham-1.x-post-release-assertions-stage" />
                <pipeline name="beckham-1.x-post-release-cdn-update-stage" />
                <pipeline name="beckham-1.x-post-release-migrate-stage" />
                <pipeline name="beckham-1.x-post-release-performance-checks-stage" />
                <pipeline name="beyonceparfums-1.x-deploy-stage" />
                <pipeline name="beyonceparfums-1.x-post-release-assertions-stage" />
                <pipeline name="beyonceparfums-1.x-post-release-cdn-update-stage" />
                <pipeline name="beyonceparfums-1.x-post-release-migrate-stage" />
                <pipeline name="beyonceparfums-1.x-post-release-performance-checks-stage" />
                <pipeline name="boostercloud-1.x-deploy-stage" />
                <pipeline name="scout-1.x-deploy-stage" />
                <pipeline name="bourjois-1.x-deploy-stage" />
                <pipeline name="campaigndeltas-1.x-deploy-stage" />
                <pipeline name="centralbranddatabase-1.x-deploy-stage" />
                <pipeline name="cerruti1881-1.x-deploy-stage" />
                <pipeline name="cerruti1881-1.x-post-release-cdn-update-stage" />
                <pipeline name="cerruti1881-1.x-post-release-performance-checks-stage" />
                <pipeline name="ckonegold-1.x-deploy-stage" />
                <pipeline name="ckonegold-1.x-post-release-cdn-update-stage" />
                <pipeline name="ckonegold-1.x-post-release-performance-checks-stage" />
                <pipeline name="consul-2.x-deploy-stage" />
                <pipeline name="coty-1.x-deploy-stage" />
                <pipeline name="coty-1.x-post-release-assertions-stage" />
                <pipeline name="coty-1.x-post-release-cdn-update-stage" />
                <pipeline name="coty-1.x-post-release-migrate-stage" />
                <pipeline name="coty-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotyconsumeraffairs-1.x-deploy-stage" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-assertions-stage" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-migrate-stage" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotycore-1.x-deploy-stage" />
                <pipeline name="cotycore-1.x-post-release-assertions-stage" />
                <pipeline name="cotycore-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotycore-1.x-post-release-migrate-stage" />
                <pipeline name="cotycore-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotyhouse-1.x-deploy-stage" />
                <pipeline name="cotyhouse-1.x-post-release-assertions-stage" />
                <pipeline name="cotyhouse-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotyhouse-1.x-post-release-migrate-stage" />
                <pipeline name="cotyhouse-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotyinstitute-1.x-deploy-stage" />
                <pipeline name="cotyinstitute-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotyinstitute-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotypress-1.x-deploy-stage" />
                <pipeline name="cotypress-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotypress-1.x-post-release-performance-checks-stage" />
                <pipeline name="cotyvendorportal-1.x-deploy-stage" />
                <pipeline name="cotyvendorportal-1.x-post-release-assertions-stage" />
                <pipeline name="cotyvendorportal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cotyvendorportal-1.x-post-release-migrate-stage" />
                <pipeline name="cotyvendorportal-1.x-post-release-performance-checks-stage" />
                <pipeline name="covergirlbeautyu-1.x-deploy-stage" />
                <pipeline name="covergirlbeautyu-1.x-post-release-cdn-update-stage" />
                <pipeline name="covergirlbeautyu-1.x-post-release-performance-checks-stage" />
                <pipeline name="deploy-nimbus-stage-global-1.x" />
                <pipeline name="deploy-supervisor-stage-global-1.x" />
                <pipeline name="editorialwp-1.x-deploy-stage" />
                <pipeline name="engageradsurvey-service-1.x-assetupload-stage" />
                <pipeline name="engagerbuilderlite-1.x-deploy-stage" />
                <pipeline name="engagercatalogue-service-1.x-deploy-stage" />
                <pipeline name="engagerdashboard-service-1.x-deploy-stage" />
                <pipeline name="engagerimageblurquiz-service-1.x-assetupload-stage" />
                <pipeline name="engagermemorygame-service-1.x-assetupload-stage" />
                <pipeline name="engagerpersonality-service-1.x-assetupload-stage" />
                <pipeline name="engagerrelationalquiz-service-1.x-assetupload-stage" />
                <pipeline name="engagerrelationalsurvey-service-1.x-assetupload-stage" />
                <pipeline name="engagershopthelook-service-1.x-assetupload-stage" />
                <pipeline name="engagershopthelookimage-service-1.x-assetupload-stage" />
                <pipeline name="engagershopthelookimagedirect-service-1.x-assetupload-stage" />
                <pipeline name="engagersurvey-service-1.x-assetupload-stage" />
                <pipeline name="engagertriviaquiz-service-1.x-assetupload-stage" />
                <pipeline name="engagervideosurvey-service-1.x-assetupload-stage" />
                <pipeline name="engagerwidgets-service-1.x-deploy-stage" />
                <pipeline name="enriqueiglesiasfragrances-1.x-deploy-stage" />
                <pipeline name="enriqueiglesiasfragrances-1.x-post-release-cdn-update-stage" />
                <pipeline name="enriqueiglesiasfragrances-1.x-post-release-performance-checks-stage" />
                <pipeline name="facebookfetch-1.x-deploy-stage" />
                <pipeline name="fborganic-1.x-deploy-stage" />
                <pipeline name="givelovegivefragrance-1.x-deploy-stage" />
                <pipeline name="givelovegivefragrance-1.x-post-release-cdn-update-stage" />
                <pipeline name="givelovegivefragrance-1.x-post-release-performance-checks-stage" />
                <pipeline name="goagent-4.x-deploy-task" />
                <pipeline name="haproxy-1.x-deploy-stage" />
                <pipeline name="jenniferlopez-1.x-deploy-stage" />
                <pipeline name="jenniferlopez-1.x-post-release-cdn-update-stage" />
                <pipeline name="jenniferlopez-1.x-post-release-performance-checks-stage" />
                <pipeline name="jilsander-1.x-deploy-stage" />
                <pipeline name="jilsander-1.x-post-release-assertions-stage" />
                <pipeline name="jilsander-1.x-post-release-cdn-update-stage" />
                <pipeline name="jilsander-1.x-post-release-migrate-stage" />
                <pipeline name="jilsander-1.x-post-release-performance-checks-stage" />
                <pipeline name="jovanmusk-1.x-deploy-stage" />
                <pipeline name="jovanmusk-1.x-post-release-cdn-update-stage" />
                <pipeline name="jovanmusk-1.x-post-release-performance-checks-stage" />
                <pipeline name="kafka-1.x-deploy-stage" />
                <pipeline name="kafka-1.x-test-stage" />
                <pipeline name="katyperry-1.x-deploy-stage" />
                <pipeline name="katyperry-1.x-post-release-assertions-stage" />
                <pipeline name="katyperry-1.x-post-release-cdn-update-stage" />
                <pipeline name="katyperry-1.x-post-release-migrate-stage" />
                <pipeline name="katyperry-1.x-post-release-performance-checks-stage" />
                <pipeline name="lancaster-1.x-deploy-stage" />
                <pipeline name="lancaster-1.x-post-release-assertions-stage" />
                <pipeline name="lancaster-1.x-post-release-cdn-update-stage" />
                <pipeline name="lancaster-1.x-post-release-migrate-stage" />
                <pipeline name="lancaster-1.x-post-release-performance-checks-stage" />
                <pipeline name="love2love-1.x-deploy-stage" />
                <pipeline name="love2love-1.x-post-release-cdn-update-stage" />
                <pipeline name="love2love-1.x-post-release-performance-checks-stage" />
                <pipeline name="manhattan-1.x-deploy-stage" />
                <pipeline name="manhattan-1.x-post-release-assertions-stage" />
                <pipeline name="manhattan-1.x-post-release-cdn-update-stage" />
                <pipeline name="manhattan-1.x-post-release-migrate-stage" />
                <pipeline name="manhattan-1.x-post-release-performance-checks-stage" />
                <pipeline name="manhattanclearface-1.x-deploy-stage" />
                <pipeline name="manhattanclearface-1.x-post-release-cdn-update-stage" />
                <pipeline name="manhattanclearface-1.x-post-release-performance-checks-stage" />
                <pipeline name="marcjacobs-1.x-deploy-stage" />
                <pipeline name="marcjacobs-1.x-post-release-assertions-stage" />
                <pipeline name="marcjacobs-1.x-post-release-cdn-update-stage" />
                <pipeline name="marcjacobs-1.x-post-release-migrate-stage" />
                <pipeline name="marcjacobs-1.x-post-release-performance-checks-stage" />
                <pipeline name="maxfactoracademy-1.x-deploy-stage" />
                <pipeline name="maxfactoracademy-1.x-post-release-assertions-stage" />
                <pipeline name="maxfactoracademy-1.x-post-release-cdn-update-stage" />
                <pipeline name="maxfactoracademy-1.x-post-release-migrate-stage" />
                <pipeline name="maxfactoracademy-1.x-post-release-performance-checks-stage" />
                <pipeline name="menu-service-1.x-deploy-stage" />
                <pipeline name="misssporty-1.x-deploy-stage" />
                <pipeline name="misssporty-1.x-post-release-assertions-stage" />
                <pipeline name="misssporty-1.x-post-release-cdn-update-stage" />
                <pipeline name="misssporty-1.x-post-release-migrate-stage" />
                <pipeline name="misssporty-1.x-post-release-performance-checks-stage" />
                <pipeline name="miumiuhk-1.x-deploy-stage" />
                <pipeline name="miumiuhk-1.x-post-release-cdn-update-stage" />
                <pipeline name="miumiuhk-1.x-post-release-performance-checks-stage" />
                <pipeline name="miumiujp-1.x-deploy-stage" />
                <pipeline name="miumiujp-1.x-post-release-cdn-update-stage" />
                <pipeline name="miumiujp-1.x-post-release-performance-checks-stage" />
                <pipeline name="msp-1.x-deploy-stage" />
                <pipeline name="newyorkcolor-1.x-deploy-stage" />
                <pipeline name="newyorkcolor-1.x-post-release-assertions-stage" />
                <pipeline name="newyorkcolor-1.x-post-release-cdn-update-stage" />
                <pipeline name="newyorkcolor-1.x-post-release-migrate-stage" />
                <pipeline name="newyorkcolor-1.x-post-release-performance-checks-stage" />
                <pipeline name="playboy-1.x-deploy-stage" />
                <pipeline name="playboy-1.x-post-release-assertions-stage" />
                <pipeline name="playboy-1.x-post-release-cdn-update-stage" />
                <pipeline name="playboy-1.x-post-release-migrate-stage" />
                <pipeline name="playboy-1.x-post-release-performance-checks-stage" />
                <pipeline name="remove-llvm-apt-repo-stage" />
                <pipeline name="rimmel-1.x-deploy-stage" />
                <pipeline name="rimmel-1.x-post-release-assertions-stage" />
                <pipeline name="rimmel-1.x-post-release-cdn-update-stage" />
                <pipeline name="rimmel-1.x-post-release-migrate-stage" />
                <pipeline name="rimmel-1.x-post-release-performance-checks-stage" />
                <pipeline name="runscopeagent-1.x-deploy-stage" />
                <pipeline name="opi-1.x-deploy-stage" />
                <pipeline name="opi-1.x-post-release-assertions-stage" />
                <pipeline name="opi-1.x-post-release-cdn-update-stage" />
                <pipeline name="opi-1.x-post-release-migrate-stage" />
                <pipeline name="opi-1.x-post-release-performance-checks-stage" />
                <pipeline name="sallyhansen-1.x-deploy-stage" />
                <pipeline name="sallyhansen-1.x-post-release-assertions-stage" />
                <pipeline name="sallyhansen-1.x-post-release-cdn-update-stage" />
                <pipeline name="sallyhansen-1.x-post-release-migrate-stage" />
                <pipeline name="sallyhansen-1.x-post-release-performance-checks-stage" />
                <pipeline name="stetson-1.x-deploy-stage" />
                <pipeline name="stetson-1.x-post-release-cdn-update-stage" />
                <pipeline name="stetson-1.x-post-release-performance-checks-stage" />
                <pipeline name="systemprofessionalapp-1.x-deploy-stage" />
                <pipeline name="systemprofessionalapp-1.x-post-release-cdn-update-stage" />
                <pipeline name="systemprofessionalapp-1.x-post-release-performance-checks-stage" />
                <pipeline name="tower-3.x-deploy-stage" />
                <pipeline name="tykdashboard-2.x-deploy-stage" />
                <pipeline name="tykgateway-2.x-deploy-stage" />
                <pipeline name="tykmongodb-2.x-deploy-stage" />
                <pipeline name="wellamarketing-1.x-deploy-stage" />
                <pipeline name="wellamarketing-1.x-post-release-cdn-update-stage" />
                <pipeline name="wellamarketing-1.x-post-release-performance-checks-stage" />
                <pipeline name="zookeeper-1.x-deploy-stage" />
            </pipelines>
        </environment>
        <environment name="live-us-east-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>beamly</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
                <variable name="COUNTRY">
                    <value>us</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>us-east-1</value>
                </variable>
                <variable name="EnvLevel">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="article-service-1.x-deploy-live" />
                <pipeline name="astor-1.x-deploy-live" />
                <pipeline name="astor-1.x-post-release-assertions-live" />
                <pipeline name="astor-1.x-post-release-cdn-update-live" />
                <pipeline name="astor-1.x-post-release-migrate-live" />
                <pipeline name="astor-1.x-post-release-performance-checks-live" />
                <pipeline name="azkaban-2.5.x-deploy-live" />
                <pipeline name="balenciagafragrance-1.x-deploy-live" />
                <pipeline name="balenciagafragrance-1.x-post-release-assertions-live" />
                <pipeline name="balenciagafragrance-1.x-post-release-cdn-update-live" />
                <pipeline name="balenciagafragrance-1.x-post-release-migrate-live" />
                <pipeline name="balenciagafragrance-1.x-post-release-performance-checks-live" />
                <pipeline name="beamly-site-1.x-assetupload-live" />
                <pipeline name="beamly-site-1.x-deploy-live" />
                <pipeline name="beckham-1.x-deploy-live" />
                <pipeline name="beckham-1.x-post-release-assertions-live" />
                <pipeline name="beckham-1.x-post-release-cdn-update-live" />
                <pipeline name="beckham-1.x-post-release-migrate-live" />
                <pipeline name="beckham-1.x-post-release-performance-checks-live" />
                <pipeline name="beyonceparfums-1.x-deploy-live" />
                <pipeline name="beyonceparfums-1.x-post-release-assertions-live" />
                <pipeline name="beyonceparfums-1.x-post-release-cdn-update-live" />
                <pipeline name="beyonceparfums-1.x-post-release-migrate-live" />
                <pipeline name="beyonceparfums-1.x-post-release-performance-checks-live" />
                <pipeline name="boostercloud-1.x-deploy-live" />
                <pipeline name="bourjois-1.x-deploy-live" />
                <pipeline name="centralbranddatabase-1.x-deploy-live" />
                <pipeline name="cerruti1881-1.x-deploy-live" />
                <pipeline name="cerruti1881-1.x-post-release-cdn-update-live" />
                <pipeline name="cerruti1881-1.x-post-release-performance-checks-live" />
                <pipeline name="ckonegold-1.x-deploy-live" />
                <pipeline name="ckonegold-1.x-post-release-cdn-update-live" />
                <pipeline name="ckonegold-1.x-post-release-performance-checks-live" />
                <pipeline name="consul-2.x-deploy-live" />
                <pipeline name="coty-1.x-deploy-live" />
                <pipeline name="coty-1.x-post-release-cdn-update-live" />
                <pipeline name="coty-1.x-post-release-performance-checks-live" />
                <pipeline name="cotyconsumeraffairs-1.x-deploy-live" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-assertions-live" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-cdn-update-live" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-migrate-live" />
                <pipeline name="cotyconsumeraffairs-1.x-post-release-performance-checks-live" />
                <pipeline name="cotycore-1.x-deploy-live" />
                <pipeline name="cotycore-1.x-post-release-assertions-live" />
                <pipeline name="cotycore-1.x-post-release-cdn-update-live" />
                <pipeline name="cotycore-1.x-post-release-migrate-live" />
                <pipeline name="cotycore-1.x-post-release-performance-checks-live" />
                <pipeline name="cotyhouse-1.x-deploy-live" />
                <pipeline name="cotyhouse-1.x-post-release-assertions-live" />
                <pipeline name="cotyhouse-1.x-post-release-cdn-update-live" />
                <pipeline name="cotyhouse-1.x-post-release-migrate-live" />
                <pipeline name="cotyhouse-1.x-post-release-performance-checks-live" />
                <pipeline name="cotyinstitute-1.x-deploy-live" />
                <pipeline name="cotyinstitute-1.x-post-release-cdn-update-live" />
                <pipeline name="cotyinstitute-1.x-post-release-performance-checks-live" />
                <pipeline name="cotypress-1.x-deploy-live" />
                <pipeline name="cotypress-1.x-post-release-cdn-update-live" />
                <pipeline name="cotypress-1.x-post-release-performance-checks-live" />
                <pipeline name="cotyvendorportal-1.x-deploy-live" />
                <pipeline name="cotyvendorportal-1.x-post-release-assertions-live" />
                <pipeline name="cotyvendorportal-1.x-post-release-cdn-update-live" />
                <pipeline name="cotyvendorportal-1.x-post-release-migrate-live" />
                <pipeline name="cotyvendorportal-1.x-post-release-performance-checks-live" />
                <pipeline name="covergirlbeautyu-1.x-deploy-live" />
                <pipeline name="covergirlbeautyu-1.x-post-release-cdn-update-live" />
                <pipeline name="covergirlbeautyu-1.x-post-release-performance-checks-live" />
                <pipeline name="deploy-nimbus-live-global-1.x" />
                <pipeline name="deploy-supervisor-live-global-1.x" />
                <pipeline name="editorialwp-1.x-deploy-live" />
                <pipeline name="engagerbuilderlite-1.x-deploy-live" />
                <pipeline name="EngagerCatalogue-service-1.x-deploy-live" />
                <pipeline name="EngagerDashboard-service-1.x-deploy-live" />
                <pipeline name="engagerwidgets-service-1.x-deploy-live" />
                <pipeline name="enriqueiglesiasfragrances-1.x-deploy-live" />
                <pipeline name="enriqueiglesiasfragrances-1.x-post-release-cdn-update-live" />
                <pipeline name="enriqueiglesiasfragrances-1.x-post-release-performance-checks-live" />
                <pipeline name="givelovegivefragrance-1.x-deploy-live" />
                <pipeline name="givelovegivefragrance-1.x-post-release-cdn-update-live" />
                <pipeline name="givelovegivefragrance-1.x-post-release-performance-checks-live" />
                <pipeline name="haproxy-1.x-deploy-live" />
                <pipeline name="jenniferlopez-1.x-deploy-live" />
                <pipeline name="jenniferlopez-1.x-post-release-cdn-update-live" />
                <pipeline name="jenniferlopez-1.x-post-release-performance-checks-live" />
                <pipeline name="jilsander-1.x-deploy-live" />
                <pipeline name="jilsander-1.x-post-release-assertions-live" />
                <pipeline name="jilsander-1.x-post-release-cdn-update-live" />
                <pipeline name="jilsander-1.x-post-release-migrate-live" />
                <pipeline name="jilsander-1.x-post-release-performance-checks-live" />
                <pipeline name="jovanmusk-1.x-deploy-live" />
                <pipeline name="jovanmusk-1.x-post-release-cdn-update-live" />
                <pipeline name="jovanmusk-1.x-post-release-performance-checks-live" />
                <pipeline name="katyperry-1.x-deploy-live" />
                <pipeline name="katyperry-1.x-post-release-assertions-live" />
                <pipeline name="katyperry-1.x-post-release-cdn-update-live" />
                <pipeline name="katyperry-1.x-post-release-migrate-live" />
                <pipeline name="katyperry-1.x-post-release-performance-checks-live" />
                <pipeline name="lancaster-1.x-deploy-live" />
                <pipeline name="lancaster-1.x-post-release-assertions-live" />
                <pipeline name="lancaster-1.x-post-release-cdn-update-live" />
                <pipeline name="lancaster-1.x-post-release-migrate-live" />
                <pipeline name="lancaster-1.x-post-release-performance-checks-live" />
                <pipeline name="love2love-1.x-deploy-live" />
                <pipeline name="love2love-1.x-post-release-cdn-update-live" />
                <pipeline name="love2love-1.x-post-release-performance-checks-live" />
                <pipeline name="manhattan-1.x-deploy-live" />
                <pipeline name="manhattan-1.x-post-release-assertions-live" />
                <pipeline name="manhattan-1.x-post-release-cdn-update-live" />
                <pipeline name="manhattan-1.x-post-release-migrate-live" />
                <pipeline name="manhattan-1.x-post-release-performance-checks-live" />
                <pipeline name="manhattanclearface-1.x-deploy-live" />
                <pipeline name="manhattanclearface-1.x-post-release-cdn-update-live" />
                <pipeline name="manhattanclearface-1.x-post-release-performance-checks-live" />
                <pipeline name="marcjacobs-1.x-deploy-live" />
                <pipeline name="marcjacobs-1.x-post-release-assertions-live" />
                <pipeline name="marcjacobs-1.x-post-release-cdn-update-live" />
                <pipeline name="marcjacobs-1.x-post-release-migrate-live" />
                <pipeline name="marcjacobs-1.x-post-release-performance-checks-live" />
                <pipeline name="maxfactoracademy-1.x-deploy-live" />
                <pipeline name="maxfactoracademy-1.x-post-release-assertions-live" />
                <pipeline name="maxfactoracademy-1.x-post-release-cdn-update-live" />
                <pipeline name="maxfactoracademy-1.x-post-release-migrate-live" />
                <pipeline name="maxfactoracademy-1.x-post-release-performance-checks-live" />
                <pipeline name="menu-service-1.x-deploy-live" />
                <pipeline name="misssporty-1.x-deploy-live" />
                <pipeline name="misssporty-1.x-post-release-assertions-live" />
                <pipeline name="misssporty-1.x-post-release-cdn-update-live" />
                <pipeline name="misssporty-1.x-post-release-migrate-live" />
                <pipeline name="misssporty-1.x-post-release-performance-checks-live" />
                <pipeline name="miumiuhk-1.x-deploy-live" />
                <pipeline name="miumiuhk-1.x-post-release-cdn-update-live" />
                <pipeline name="miumiuhk-1.x-post-release-performance-checks-live" />
                <pipeline name="miumiujp-1.x-deploy-live" />
                <pipeline name="miumiujp-1.x-post-release-cdn-update-live" />
                <pipeline name="miumiujp-1.x-post-release-performance-checks-live" />
                <pipeline name="msp-1.x-deploy-live" />
                <pipeline name="newyorkcolor-1.x-deploy-live" />
                <pipeline name="newyorkcolor-1.x-post-release-assertions-live" />
                <pipeline name="newyorkcolor-1.x-post-release-cdn-update-live" />
                <pipeline name="newyorkcolor-1.x-post-release-migrate-live" />
                <pipeline name="newyorkcolor-1.x-post-release-performance-checks-live" />
                <pipeline name="playboy-1.x-deploy-live" />
                <pipeline name="playboy-1.x-post-release-assertions-live" />
                <pipeline name="playboy-1.x-post-release-cdn-update-live" />
                <pipeline name="playboy-1.x-post-release-migrate-live" />
                <pipeline name="playboy-1.x-post-release-performance-checks-live" />
                <pipeline name="remove-llvm-apt-repo-live" />
                <pipeline name="rimmel-1.x-deploy-live" />
                <pipeline name="rimmel-1.x-post-release-assertions-live" />
                <pipeline name="rimmel-1.x-post-release-cdn-update-live" />
                <pipeline name="rimmel-1.x-post-release-migrate-live" />
                <pipeline name="rimmel-1.x-post-release-performance-checks-live" />
                <pipeline name="runscopeagent-1.x-deploy-live" />
                <pipeline name="opi-1.x-deploy-live" />
                <pipeline name="opi-1.x-post-release-assertions-live" />
                <pipeline name="opi-1.x-post-release-cdn-update-live" />
                <pipeline name="opi-1.x-post-release-migrate-live" />
                <pipeline name="opi-1.x-post-release-performance-checks-live" />
                <pipeline name="sallyhansen-1.x-deploy-live" />
                <pipeline name="sallyhansen-1.x-post-release-assertions-live" />
                <pipeline name="sallyhansen-1.x-post-release-cdn-update-live" />
                <pipeline name="sallyhansen-1.x-post-release-migrate-live" />
                <pipeline name="sallyhansen-1.x-post-release-performance-checks-live" />
                <pipeline name="scout-1.x-deploy-live" />
                <pipeline name="stetson-1.x-deploy-live" />
                <pipeline name="stetson-1.x-post-release-cdn-update-live" />
                <pipeline name="stetson-1.x-post-release-performance-checks-live" />
                <pipeline name="systemprofessionalapp-1.x-deploy-live" />
                <pipeline name="systemprofessionalapp-1.x-post-release-cdn-update-live" />
                <pipeline name="systemprofessionalapp-1.x-post-release-performance-checks-live" />
                <pipeline name="tower-3.x-deploy-live" />
                <pipeline name="tykdashboard-2.x-deploy-live" />
                <pipeline name="tykgateway-2.x-deploy-live" />
                <pipeline name="tykmongodb-2.x-deploy-live" />
                <pipeline name="wellamarketing-1.x-deploy-live" />
                <pipeline name="wellamarketing-1.x-post-release-cdn-update-live" />
                <pipeline name="wellamarketing-1.x-post-release-performance-checks-live" />
                <pipeline name="zookeeper-1.x-deploy-live" />
            </pipelines>
        </environment>
        <environment name="ops-us-east-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>beamly</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>ops</value>
                </variable>
                <variable name="COUNTRY">
                    <value>us</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>us-east-1</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="aptcache-1.x-deploy-ops" />
                <pipeline name="baseami" />
                <pipeline name="baseami-1.x-bake" />
                <pipeline name="baseami-nodejs-1.x-bake" />
                <pipeline name="baseami-nodejs6-1.x-bake" />
                <pipeline name="consul-1.x-deploy-ops" />
                <pipeline name="ecsagent-10.x-deploy" />
                <pipeline name="engineeringwiki-114.x-deploy" />
                <pipeline name="flumeserver-53.x-deploy-ops" />
                <pipeline name="goagent-4.x-deploy-build" />
                <pipeline name="goagent-5.x-deploy-build" />
                <pipeline name="goagent-5.x-deploy-task" />
                <pipeline name="goserver-92.x-deploy" />
                <pipeline name="grafana-2.6-deploy-ops" />
                <pipeline name="grafana-3.1-deploy-ops" />
                <pipeline name="ice-32.x-deploy" />
                <pipeline name="kibana-13.x-deploy" />
                <pipeline name="ldap-1.x-deploy-ops" />
                <pipeline name="ldap-2.x-deploy-ops" />
                <pipeline name="marcopolo-69.x-deploy" />
                <pipeline name="nexus-11.x-deploy" />
                <pipeline name="remove-llvm-apt-repo-ops" />
                <pipeline name="sensu-201.x-deploy" />
                <pipeline name="vault-60.x-deploy" />
            </pipelines>
        </environment>
        <environment name="webhop-stage-eu-central-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>webhop</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>eu-central-1</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>stage</value>
                </variable>
                <variable name="COUNTRY">
                    <value>de</value>
                </variable>
                <variable name="EnvLevel">
                    <value>stage</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="cc2atomicparfumsdrupal-1.x-deploy-stage" />
                <pipeline name="cc2atomicparfumsdrupal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2atomicparfumsdrupal-1.x-post-release-migrate-stage" />
                <pipeline name="cc2atomicparfumssite-1.x-assetupload-stage" />
                <pipeline name="cc2atomicparfumssite-1.x-deploy-stage" />
                <pipeline name="cc2atomicparfumssite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2atomicparfumssite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2covergirldrupal-1.x-deploy-stage" />
                <pipeline name="cc2covergirldrupal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2covergirldrupal-1.x-post-release-migrate-stage" />
                <pipeline name="cc2covergirlsite-1.x-assetupload-stage" />
                <pipeline name="cc2covergirlsite-1.x-deploy-stage" />
                <pipeline name="cc2covergirlsite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2covergirlsite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2escadasite-1.x-assetupload-stage" />
                <pipeline name="cc2escadasite-1.x-deploy-stage" />
                <pipeline name="cc2escadasite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2escadasite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2escadasite-1.x-pre-release-cdn-validate-stage" />
                <pipeline name="cc2marcjacobssite-1.x-assetupload-stage" />
                <pipeline name="cc2marcjacobssite-1.x-deploy-stage" />
                <pipeline name="cc2marcjacobssite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2marcjacobssite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2maxfactordrupal-1.x-deploy-stage" />
                <pipeline name="cc2maxfactordrupal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2maxfactordrupal-1.x-post-release-migrate-stage" />
                <pipeline name="cc2maxfactorsite-1.x-assetupload-stage" />
                <pipeline name="cc2maxfactorsite-1.x-deploy-stage" />
                <pipeline name="cc2maxfactorsite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2maxfactorsite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2rimmellondondrupal-1.x-deploy-stage" />
                <pipeline name="cc2rimmellondondrupal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2rimmellondondrupal-1.x-post-release-migrate-stage" />
                <pipeline name="cc2rimmellondonsite-1.x-assetupload-stage" />
                <pipeline name="cc2rimmellondonsite-1.x-deploy-stage" />
                <pipeline name="cc2rimmellondonsite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2rimmellondonsite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2rimmellondonsite-1.x-pre-release-cdn-validate-stage" />
                <pipeline name="cc2sallyhansendrupal-1.x-deploy-stage" />
                <pipeline name="cc2sallyhansendrupal-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2sallyhansendrupal-1.x-post-release-migrate-stage" />
                <pipeline name="cc2sallyhansensite-1.x-assetupload-stage" />
                <pipeline name="cc2sallyhansensite-1.x-deploy-stage" />
                <pipeline name="cc2sallyhansensite-1.x-post-release-acceptance-tests-stage" />
                <pipeline name="cc2sallyhansensite-1.x-post-release-cdn-update-stage" />
                <pipeline name="cc2sallyhansensite-1.x-pre-release-cdn-validate-stage" />
                <pipeline name="sassoon-1.x-deploy-stage" />
                <pipeline name="sassoon-1.x-post-release-assertions-stage" />
                <pipeline name="sassoon-1.x-post-release-cdn-update-stage" />
                <pipeline name="sassoon-1.x-post-release-migrate-stage" />
                <pipeline name="sassoon-1.x-post-release-performance-checks-stage" />
            </pipelines>
        </environment>
        <environment name="webhop-live-eu-central-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>webhop</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>eu-central-1</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>live</value>
                </variable>
                <variable name="COUNTRY">
                    <value>de</value>
                </variable>
                <variable name="EnvLevel">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="cc2covergirldrupal-1.x-deploy-live" />
                <pipeline name="cc2covergirldrupal-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2covergirldrupal-1.x-post-release-migrate-live" />
                <pipeline name="cc2covergirlsite-1.x-assetupload-live" />
                <pipeline name="cc2covergirlsite-1.x-deploy-live" />
                <pipeline name="cc2covergirlsite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2covergirlsite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2escadasite-1.x-assetupload-live" />
                <pipeline name="cc2escadasite-1.x-deploy-live" />
                <pipeline name="cc2escadasite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2escadasite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2escadasite-1.x-pre-release-cdn-validate-live" />
                <pipeline name="cc2marcjacobssite-1.x-assetupload-live" />
                <pipeline name="cc2marcjacobssite-1.x-deploy-live" />
                <pipeline name="cc2marcjacobssite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2marcjacobssite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2maxfactordrupal-1.x-deploy-live" />
                <pipeline name="cc2maxfactordrupal-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2maxfactordrupal-1.x-post-release-migrate-live" />
                <pipeline name="cc2maxfactorsite-1.x-assetupload-live" />
                <pipeline name="cc2maxfactorsite-1.x-deploy-live" />
                <pipeline name="cc2maxfactorsite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2maxfactorsite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2rimmellondondrupal-1.x-deploy-live" />
                <pipeline name="cc2rimmellondondrupal-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2rimmellondondrupal-1.x-post-release-migrate-live" />
                <pipeline name="cc2rimmellondonsite-1.x-assetupload-live" />
                <pipeline name="cc2rimmellondonsite-1.x-deploy-live" />
                <pipeline name="cc2rimmellondonsite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2rimmellondonsite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2rimmellondonsite-1.x-pre-release-cdn-validate-live" />
                <pipeline name="cc2sallyhansendrupal-1.x-deploy-live" />
                <pipeline name="cc2sallyhansendrupal-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2sallyhansendrupal-1.x-post-release-migrate-live" />
                <pipeline name="cc2sallyhansensite-1.x-assetupload-live" />
                <pipeline name="cc2sallyhansensite-1.x-deploy-live" />
                <pipeline name="cc2sallyhansensite-1.x-post-release-acceptance-tests-live" />
                <pipeline name="cc2sallyhansensite-1.x-post-release-cdn-update-live" />
                <pipeline name="cc2sallyhansensite-1.x-pre-release-cdn-validate-live" />
                <pipeline name="sassoon-1.x-deploy-live" />
                <pipeline name="sassoon-1.x-post-release-assertions-live" />
                <pipeline name="sassoon-1.x-post-release-cdn-update-live" />
                <pipeline name="sassoon-1.x-post-release-migrate-live" />
                <pipeline name="sassoon-1.x-post-release-performance-checks-live" />
                <pipeline name="sassoon-1.x-scheduled-assertions-live" />
                <pipeline name="sassoon-1.x-scheduled-live-db-vagrant-export" />
            </pipelines>
        </environment>
        <environment name="webhop-ops-stage-eu-central-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>webhop</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>eu-central-1</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>ops-stage</value>
                </variable>
                <variable name="COUNTRY">
                    <value>de</value>
                </variable>
                <variable name="EnvLevel">
                    <value>ops</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="content-service-webhop-1.x-deploy-stage" />
                <pipeline name="core-content-cache-1.x-deploy-stage" />
                <pipeline name="core-content-transformer-1.x-deploy-stage" />
                <pipeline name="core-content-writer-1.x-deploy-stage" />
                <pipeline name="kafka-to-kinesis-1.x-deploy-stage" />
                <pipeline name="omnomnomniture-webhop-1.x-deploy-stage" />
                <pipeline name="ringleader-webhop-1.x-deploy-stage" />
                <pipeline name="ringmaster-service-webhop-1.x-deploy-stage" />
                <pipeline name="runscopeagent-webhop-1.x-deploy-ops-stage" />
                <pipeline name="scorodesk-webhop-1.x-deploy-stage" />
                <pipeline name="smokay-webhop-1.x-deploy-stage" />
                <pipeline name="tykpump-2.x-deploy-stage" />
            </pipelines>
        </environment>
        <environment name="webhop-ops-live-eu-central-1">
            <environmentvariables>
                <variable name="AWS_ACCOUNT">
                    <value>webhop</value>
                </variable>
                <variable name="AWS_REGION">
                    <value>eu-central-1</value>
                </variable>
                <variable name="ENVIRONMENT_TYPE">
                    <value>ops-live</value>
                </variable>
                <variable name="COUNTRY">
                    <value>de</value>
                </variable>
                <variable name="EnvLevel">
                    <value>live</value>
                </variable>
            </environmentvariables>
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
            </agents>
            <pipelines>
                <pipeline name="content-service-webhop-1.x-deploy-live" />
                <pipeline name="core-content-cache-1.x-deploy-live" />
                <pipeline name="core-content-transformer-1.x-deploy-live" />
                <pipeline name="core-content-writer-1.x-deploy-live" />
                <pipeline name="kafka-to-kinesis-1.x-deploy-live" />
                <pipeline name="omnomnomniture-webhop-1.x-deploy-live" />
                <pipeline name="ringleader-webhop-1.x-deploy-live" />
                <pipeline name="ringmaster-service-webhop-1.x-deploy-live" />
                <pipeline name="runscopeagent-webhop-1.x-deploy-ops-live" />
                <pipeline name="scorodesk-webhop-1.x-deploy-live" />
                <pipeline name="smokay-webhop-1.x-deploy-live" />
                <pipeline name="trilamb-1.x-deploy" />
            </pipelines>
        </environment>
        <environment name="browserstack">
            <pipelines>
                <pipeline name="beamly-site-1.x-test" />
            </pipelines>
        </environment>
        <environment name="tasks">
            <agents>
                <physical uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2" />
                <physical uuid="b8968584-30fc-491a-a702-346a7771e0ac" />
                <physical uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31" />
                <physical uuid="d66dd407-9144-44ed-bc60-bbed260019a1" />
                <physical uuid="438b2701-a65f-45d0-b0ca-34d8be772904" />
                <physical uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1" />
                <physical uuid="b35e6a82-481d-4219-a193-a4da46474987" />
                <physical uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558" />
                <physical uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98" />
                <physical uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2" />
                <physical uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8" />
                <physical uuid="76522807-e426-4178-b44f-aee026b5ef95" />
                <physical uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1" />
                <physical uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59" />
                <physical uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d" />
                <physical uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0" />
                <physical uuid="bbc4f5d6-b1e1-4c05-b46c-4c61513b9020" />
                <physical uuid="5acc7b1b-22cd-49f2-ad71-b640eeb8751b" />
                <physical uuid="2cdab47f-7182-4d3f-8403-72407c595a1f" />
                <physical uuid="ef26901f-77ab-45e2-82a0-084033179833" />
            </agents>
            <pipelines>
                <pipeline name="allumer-le-stage" />
                <pipeline name="astor-1.x-test-vagrant" />
                <pipeline name="AutoscalingStatus" />
                <pipeline name="aws_cleanup" />
                <pipeline name="balenciagafragrance-1.x-test-vagrant" />
                <pipeline name="beamly-site-poc-ruby-cucumber-test" />
                <pipeline name="beckham-1.x-test-vagrant" />
                <pipeline name="beyonceparfums-1.x-test-vagrant" />
                <pipeline name="bigquery-fetch" />
                <pipeline name="BigQueryETL" />
                <pipeline name="CleanupAgents" />
                <pipeline name="ConsulBackup" />
                <pipeline name="coty-1.x-test-vagrant" />
                <pipeline name="cotyconsumeraffairs-1.x-test-vagrant" />
                <pipeline name="cotycore-1.x-test-vagrant" />
                <pipeline name="cotyhouse-1.x-test-vagrant" />
                <pipeline name="cotyvendorportal-1.x-test-vagrant" />
                <pipeline name="dash-campaign-automation" />
                <pipeline name="DOJO_datorama_email_ingest" />
                <pipeline name="elasticsearch-articles-live-backup" />
                <pipeline name="elasticsearch-articles-stage-backup" />
                <pipeline name="engager-ad-survey-ruby-test" />
                <pipeline name="engager-personality-ruby-test" />
                <pipeline name="engager-relational-quiz-ruby-test" />
                <pipeline name="engager-shop-the-look-image-direct-ruby-test" />
                <pipeline name="engager-survey-ruby-test" />
                <pipeline name="engager-videosurvey-ruby-test" />
                <pipeline name="fb-paid-transform" />
                <pipeline name="ga_uniques_s3_export" />
                <pipeline name="github-backup" />
                <pipeline name="go2graphite" />
                <pipeline name="HAProxy_Config_Update" />
                <pipeline name="jilsander-1.x-test-vagrant" />
                <pipeline name="katyperry-1.x-test-vagrant" />
                <pipeline name="kinesis-backup-lambda" />
                <pipeline name="lancaster-1.x-test-vagrant" />
                <pipeline name="manhattan-1.x-test-vagrant" />
                <pipeline name="marcjacobs-1.x-test-vagrant" />
                <pipeline name="maxfactoracademy-1.x-test-vagrant" />
                <pipeline name="Metric_fb_account_campaign_checker" />
                <pipeline name="Metric_fb_account_campaign_checker_LIVE" />
                <pipeline name="Metrics_adform_masterdata_backup" />
                <pipeline name="Metrics_bake_facebook_data" />
                <pipeline name="metrics_bigquery_table_stats" />
                <pipeline name="Metrics_campaign_end_date_update" />
                <pipeline name="Metrics_check_campaign_end_dates" />
                <pipeline name="Metrics_check_metrics_format" />
                <pipeline name="Metrics_check_metrics_format_LIVE" />
                <pipeline name="Metrics_creative_insights" />
                <pipeline name="Metrics_creative_insights_LIVE" />
                <pipeline name="Metrics_fb_ad_expoirt_mult_accounts_STAGE" />
                <pipeline name="Metrics_fb_ad_export_BEAMLY_LIVE" />
                <pipeline name="Metrics_fb_ad_export_BEAMLY_STAGE" />
                <pipeline name="Metrics_fb_ad_export_COTY_LIVE" />
                <pipeline name="Metrics_fb_ad_export_COTY_STAGE" />
                <pipeline name="Metrics_fb_ad_export_EXTERNAL_LIVE" />
                <pipeline name="Metrics_fb_ad_export_EXTERNAL_STAGE" />
                <pipeline name="Metrics_fb_ad_export_from_BRANCH" />
                <pipeline name="Metrics_fb_ad_export_from_BRANCH_US" />
                <pipeline name="Metrics_fb_ad_export_specific_campaign" />
                <pipeline name="Metrics_fb_ad_export_specific_US_campaign" />
                <pipeline name="Metrics_fb_ad_export_STAGE" />
                <pipeline name="Metrics_fb_ad_export_uk_acct1_STAGE" />
                <pipeline name="Metrics_fb_ad_export_US_STAGE" />
                <pipeline name="Metrics_fb_ad_export_us_stage_NOT_PAID" />
                <pipeline name="Metrics_fb_ad_export_v3" />
                <pipeline name="Metrics_FB_capture_test_data" />
                <pipeline name="Metrics_fb_high_level_metrics" />
                <pipeline name="Metrics_fb_high_level_metrics_LIVE" />
                <pipeline name="Metrics_FB_image_export" />
                <pipeline name="Metrics_FB_image_export_LIVE" />
                <pipeline name="Metrics_fb_insights_api_check_STAGE" />
                <pipeline name="Metrics_FB_UK2_account_export" />
                <pipeline name="Metrics_fb_update_campaign_end_dates" />
                <pipeline name="Metrics_fb_update_campaign_end_dates_LIVE" />
                <pipeline name="Metrics_ga_uniques_export" />
                <pipeline name="Metrics_get_fb_countries" />
                <pipeline name="Metrics_get_fb_countries_LIVE" />
                <pipeline name="metrics_get_fb_images" />
                <pipeline name="metrics_get_fb_videos" />
                <pipeline name="metrics_get_fb_videos_LIVE" />
                <pipeline name="Metrics_get_video_insights_by_duration" />
                <pipeline name="Metrics_pre_bake_historical_reruns" />
                <pipeline name="metrics_quizly_export_to_s3" />
                <pipeline name="Metrics_rerun_historical_campaign" />
                <pipeline name="Metrics_rerun_historical_campaigns" />
                <pipeline name="Metrics_rerun_specific_campaign" />
                <pipeline name="Metrics_US_fb_ad_export_v3" />
                <pipeline name="Metrics_weekly_spend_data" />
                <pipeline name="Metrics_weekly_spend_data_LIVE" />
                <pipeline name="misssporty-1.x-test-vagrant" />
                <pipeline name="Mterics_create_customer_files" />
                <pipeline name="Mterics_create_customer_files_LIVE" />
                <pipeline name="newyorkcolor-1.x-test-vagrant" />
                <pipeline name="playboy-1.x-test-vagrant" />
                <pipeline name="rimmel-1.x-test-vagrant" />
                <pipeline name="sallyhansen-1.x-test-vagrant" />
                <pipeline name="scout-db-jobs" />
                <pipeline name="seven_day_uniques_trend" />
                <pipeline name="Stage_us_off" />
                <pipeline name="Stage_us_on" />
                <pipeline name="systemprofessionalapp-1.x-test-vagrant" />
                <pipeline name="TEST_LOCAL_ENV" />
                <pipeline name="TrimUSElasticSearchIndices" />
                <pipeline name="twitter-audience" />
                <pipeline name="UpdateConfluenceFromLDAP" />
                <pipeline name="UpdateDashboards" />
                <pipeline name="watchdogs" />
                <pipeline name="zendesk-article-upload" />
            </pipelines>
        </environment>
        <environment name="windows">
            <agents>
                <physical uuid="a2a52c8c-a834-4cbb-a715-2f5b1ed57dc7" />
            </agents>
            <pipelines>
                <pipeline name="export-outlook365-users" />
            </pipelines>
        </environment>
    </environments>
    <agents>
        <agent hostname="windows-agent" ipaddress="10.1.15.184" uuid="a2a52c8c-a834-4cbb-a715-2f5b1ed57dc7">
            <resources>
                <resource>powershell</resource>
                <resource>windows</resource>
            </resources>
        </agent>
        <agent hostname="i-0511b77da5dcf5087" ipaddress="10.1.2.37" uuid="b0abb885-7a81-4b3f-8924-4c4f05db62f2">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.xlarge</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-stage</resource>
            </resources>
        </agent>
        <agent hostname="i-0898d26abf52e58e8" ipaddress="10.0.12.229" uuid="b8968584-30fc-491a-a702-346a7771e0ac">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-live</resource>
            </resources>
        </agent>
        <agent hostname="i-0bc22d86d299eaa37" ipaddress="10.1.5.84" uuid="caee294b-4e19-4a93-8ca5-4151bb3338bc">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0a751251c2aa65884" ipaddress="10.1.5.198" uuid="519e5c31-d6e6-4fdd-a99a-2124558102f5">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0c06fb3f56131660e" ipaddress="10.1.15.54" uuid="cd01a585-5877-4b3b-a57e-77133c6f1d31">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0db1598c7e0e4cf76" ipaddress="10.1.2.110" uuid="d66dd407-9144-44ed-bc60-bbed260019a1">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.xlarge</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-stage</resource>
            </resources>
        </agent>
        <agent hostname="i-0077a77be08089198" ipaddress="10.1.35.160" uuid="7bd243d0-9adf-4dfc-9664-f2ea5d0b9d0a">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0d0a22ae12351da17" ipaddress="10.0.2.68" uuid="438b2701-a65f-45d0-b0ca-34d8be772904">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-live</resource>
            </resources>
        </agent>
        <agent hostname="i-0d4f93d2b32a67229" ipaddress="10.1.15.237" uuid="3e8d8f2a-28d5-448d-8060-9160f4d8eae4">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-07927f304ce1b50e6" ipaddress="10.1.35.188" uuid="6dd98062-c6e5-43d2-a558-af9b4fc908b1">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0bd1ed76cde8891bb" ipaddress="10.1.15.137" uuid="b35e6a82-481d-4219-a193-a4da46474987">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-013af80d7e1b797fe" ipaddress="10.1.35.72" uuid="a4fb53a3-00f7-40fa-9a16-74c2ced23c69">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-00a60ca0bbe918320" ipaddress="10.1.12.185" uuid="64cf1c82-3d0f-4b88-b2ab-bb62a8d9a558">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.xlarge</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-stage</resource>
            </resources>
        </agent>
        <agent hostname="i-044981d39a61e83ed" ipaddress="10.1.35.178" uuid="92daae20-9ec4-4296-ad5d-0d52da78fb98">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-007697087609e5c18" ipaddress="10.1.35.83" uuid="eabe94ed-3bed-471d-aba8-2a92a988ccd1">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0e6cb744a3e6bc2bf" ipaddress="10.1.5.68" uuid="139f8ea2-c145-4156-bdba-dea13fe3cd3e">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0587eec8d40cb07a6" ipaddress="10.1.35.187" uuid="aaf81329-0e11-4700-a2c8-b9ba73b92cb2">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0d0cb510f5ae95c98" ipaddress="10.1.15.218" uuid="61bc24d0-fe99-4b00-bc61-e492c00e86e6">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-033df942dcde5e2c7" ipaddress="10.1.5.205" uuid="b5a965eb-f735-4083-9aad-cc1e69753ca8">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-0691a0c2de834a651" ipaddress="10.1.5.147" uuid="76522807-e426-4178-b44f-aee026b5ef95">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-08a7c450d7e1eb0b8" ipaddress="10.1.5.35" uuid="2977c7c2-15c7-4b53-8b86-a81e07d54fd1">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-072682604272092da" ipaddress="10.1.35.144" uuid="cbab7835-eecb-4e49-95b8-3b42f1aa3b59">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-03514f4dca1733302" ipaddress="10.1.15.176" uuid="04079dee-a126-474d-9607-190ffe819364">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-059ffc92ff1a80896" ipaddress="10.1.5.243" uuid="d89d1ba0-eb0f-4571-8ff5-a1c509b5af74">
            <resources>
                <resource>beamly</resource>
                <resource>t2.large</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="i-06a9ee86bc7fa4a47" ipaddress="10.1.12.112" uuid="d16eeed3-6c83-4a97-8298-e6d78bc19d3d">
            <resources>
                <resource>eu-central-1</resource>
                <resource>t2.xlarge</resource>
                <resource>task</resource>
                <resource>v5</resource>
                <resource>v5.73</resource>
                <resource>webhop</resource>
                <resource>webhop.ops-stage</resource>
            </resources>
        </agent>
        <agent hostname="i-0c5d8c82d46663359" ipaddress="10.1.15.48" uuid="3a7ba787-b16b-4fd0-8fbb-d6d2bc708ef0">
            <resources>
                <resource>beamly</resource>
                <resource>t2.small</resource>
                <resource>task</resource>
                <resource>us-east-1</resource>
                <resource>v5</resource>
                <resource>v5.75</resource>
            </resources>
        </agent>
        <agent hostname="1b22948d8cfa" ipaddress="172.17.0.14" uuid="bbc4f5d6-b1e1-4c05-b46c-4c61513b9020" isDisabled="true" elasticAgentId="GoCD547945de4a544a789d4ee24c93ddb857" elasticPluginId="com.thoughtworks.gocd.elastic-agent.ecs" />
        <agent hostname="16f887a046a9" ipaddress="172.17.0.3" uuid="5acc7b1b-22cd-49f2-ad71-b640eeb8751b" isDisabled="true" elasticAgentId="GoCD3c58cd6051574b8bb2382b53fb608cfc" elasticPluginId="com.thoughtworks.gocd.elastic-agent.ecs" />
        <agent hostname="975b7ee9240b" ipaddress="172.17.0.2" uuid="2cdab47f-7182-4d3f-8403-72407c595a1f" elasticAgentId="GoCD4ae6f5cb3bfd459d8baf94c3360cddff" elasticPluginId="com.thoughtworks.gocd.elastic-agent.ecs" />
        <agent hostname="d046716e1f87" ipaddress="10.1.25.87" uuid="ef26901f-77ab-45e2-82a0-084033179833" elasticAgentId="GoCD48329652934d451382fd174578f0158a" elasticPluginId="com.thoughtworks.gocd.elastic-agent.ecs" />
    </agents>
</cruise>
