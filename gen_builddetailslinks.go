// Code generated by "gocd-response-links -type=BuildDetailsLinks"; DO NOT EDIT.

package gocd

import (
	"encoding/json"
	"net/url"
)

func (l BuildDetailsLinks) MarshalJSON() ([]byte, error) {
	type h struct {
		h string `json:"href"`
	}
	ls := struct {
		Job      *h `json:"job,omitempty"`
		Stage    *h `json:"stage,omitempty"`
		Pipeline *h `json:"pipeline,omitempty"`
	}{}
	if l.Job != nil {
		ls.Job = &h{h: l.Job.String()}
	}
	if l.Stage != nil {
		ls.Stage = &h{h: l.Stage.String()}
	}
	if l.Pipeline != nil {
		ls.Pipeline = &h{h: l.Pipeline.String()}
	}
	j, e := json.Marshal(ls)
	if e != nil {
		return nil, e
	}
	return j, nil
}

func (l *BuildDetailsLinks) UnmarshalJSON(j []byte) error {
	var d map[string]map[string]string
	e := json.Unmarshal(j, &d)
	if e != nil {
		return e
	}

	if d["job"]["href"] != "" {
		l.Job, e = url.Parse(d["job"]["href"])
		if e != nil {
			return e
		}
	}
	if d["stage"]["href"] != "" {
		l.Stage, e = url.Parse(d["stage"]["href"])
		if e != nil {
			return e
		}
	}
	if d["pipeline"]["href"] != "" {
		l.Pipeline, e = url.Parse(d["pipeline"]["href"])
		if e != nil {
			return e
		}
	}
	return nil
}
